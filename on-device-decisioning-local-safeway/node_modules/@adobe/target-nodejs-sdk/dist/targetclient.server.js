/**
 * @adobe/target-nodejs-sdk v.2.4.2
 * Copyright 2019 Adobe. All rights reserved.
 * This file is licensed to you under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License. You may obtain a copy
 * of the License at http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under
 * the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS
 * OF ANY KIND, either express or implied. See the License for the specific language
 * governing permissions and limitations under the License.
 */

'use strict';

function _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }

var FormData$1 = _interopDefault(require('form-data'));
var url = require('url');
require('fast-text-encoding');
var punycode = _interopDefault(require('punycode'));
var crypto = _interopDefault(require('crypto'));
var https = _interopDefault(require('https'));
var http = _interopDefault(require('http'));
var Visitor = _interopDefault(require('@adobe-mcid/visitor-js-server'));

var fails = function (exec) {
  try {
    return !!exec();
  } catch (error) {
    return true;
  }
};

var functionBindNative = !fails(function () {
  // eslint-disable-next-line es/no-function-prototype-bind -- safe
  var test = (function () { /* empty */ }).bind();
  // eslint-disable-next-line no-prototype-builtins -- safe
  return typeof test != 'function' || test.hasOwnProperty('prototype');
});

var FunctionPrototype = Function.prototype;
var call = FunctionPrototype.call;
var uncurryThisWithBind = functionBindNative && FunctionPrototype.bind.bind(call, call);

var functionUncurryThisRaw = function (fn) {
  return functionBindNative ? uncurryThisWithBind(fn) : function () {
    return call.apply(fn, arguments);
  };
};

var toString = functionUncurryThisRaw({}.toString);
var stringSlice = functionUncurryThisRaw(''.slice);

var classofRaw = function (it) {
  return stringSlice(toString(it), 8, -1);
};

var functionUncurryThis = function (fn) {
  // Nashorn bug:
  //   https://github.com/zloirock/core-js/issues/1128
  //   https://github.com/zloirock/core-js/issues/1130
  if (classofRaw(fn) === 'Function') return functionUncurryThisRaw(fn);
};

var $Object = Object;
var split = functionUncurryThis(''.split);

// fallback for non-array-like ES3 and non-enumerable old V8 strings
var indexedObject = fails(function () {
  // throws an error in rhino, see https://github.com/mozilla/rhino/issues/346
  // eslint-disable-next-line no-prototype-builtins -- safe
  return !$Object('z').propertyIsEnumerable(0);
}) ? function (it) {
  return classofRaw(it) == 'String' ? split(it, '') : $Object(it);
} : $Object;

// we can't use just `it == null` since of `document.all` special case
// https://tc39.es/ecma262/#sec-IsHTMLDDA-internal-slot-aec
var isNullOrUndefined = function (it) {
  return it === null || it === undefined;
};

var $TypeError = TypeError;

// `RequireObjectCoercible` abstract operation
// https://tc39.es/ecma262/#sec-requireobjectcoercible
var requireObjectCoercible = function (it) {
  if (isNullOrUndefined(it)) throw $TypeError("Can't call method on " + it);
  return it;
};

// toObject with fallback for non-array-like ES3 strings



var toIndexedObject = function (it) {
  return indexedObject(requireObjectCoercible(it));
};

var commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};

function createCommonjsModule(fn, module) {
	return module = { exports: {} }, fn(module, module.exports), module.exports;
}

function getCjsExportFromNamespace (n) {
	return n && n['default'] || n;
}

var check = function (it) {
  return it && it.Math == Math && it;
};

// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028
var global_1 =
  // eslint-disable-next-line es/no-global-this -- safe
  check(typeof globalThis == 'object' && globalThis) ||
  check(typeof window == 'object' && window) ||
  // eslint-disable-next-line no-restricted-globals -- safe
  check(typeof self == 'object' && self) ||
  check(typeof commonjsGlobal == 'object' && commonjsGlobal) ||
  // eslint-disable-next-line no-new-func -- fallback
  (function () { return this; })() || Function('return this')();

var isPure = false;

// eslint-disable-next-line es/no-object-defineproperty -- safe
var defineProperty = Object.defineProperty;

var defineGlobalProperty = function (key, value) {
  try {
    defineProperty(global_1, key, { value: value, configurable: true, writable: true });
  } catch (error) {
    global_1[key] = value;
  } return value;
};

var SHARED = '__core-js_shared__';
var store = global_1[SHARED] || defineGlobalProperty(SHARED, {});

var sharedStore = store;

var shared = createCommonjsModule(function (module) {
(module.exports = function (key, value) {
  return sharedStore[key] || (sharedStore[key] = value !== undefined ? value : {});
})('versions', []).push({
  version: '3.25.5',
  mode:  'global',
  copyright: 'Â© 2014-2022 Denis Pushkarev (zloirock.ru)',
  license: 'https://github.com/zloirock/core-js/blob/v3.25.5/LICENSE',
  source: 'https://github.com/zloirock/core-js'
});
});

var $Object$1 = Object;

// `ToObject` abstract operation
// https://tc39.es/ecma262/#sec-toobject
var toObject = function (argument) {
  return $Object$1(requireObjectCoercible(argument));
};

var hasOwnProperty = functionUncurryThis({}.hasOwnProperty);

// `HasOwnProperty` abstract operation
// https://tc39.es/ecma262/#sec-hasownproperty
// eslint-disable-next-line es/no-object-hasown -- safe
var hasOwnProperty_1 = Object.hasOwn || function hasOwn(it, key) {
  return hasOwnProperty(toObject(it), key);
};

var id = 0;
var postfix = Math.random();
var toString$1 = functionUncurryThis(1.0.toString);

var uid = function (key) {
  return 'Symbol(' + (key === undefined ? '' : key) + ')_' + toString$1(++id + postfix, 36);
};

var documentAll = typeof document == 'object' && document.all;

// https://tc39.es/ecma262/#sec-IsHTMLDDA-internal-slot
var IS_HTMLDDA = typeof documentAll == 'undefined' && documentAll !== undefined;

var documentAll_1 = {
  all: documentAll,
  IS_HTMLDDA: IS_HTMLDDA
};

var documentAll$1 = documentAll_1.all;

// `IsCallable` abstract operation
// https://tc39.es/ecma262/#sec-iscallable
var isCallable = documentAll_1.IS_HTMLDDA ? function (argument) {
  return typeof argument == 'function' || argument === documentAll$1;
} : function (argument) {
  return typeof argument == 'function';
};

var aFunction = function (argument) {
  return isCallable(argument) ? argument : undefined;
};

var getBuiltIn = function (namespace, method) {
  return arguments.length < 2 ? aFunction(global_1[namespace]) : global_1[namespace] && global_1[namespace][method];
};

var engineUserAgent = getBuiltIn('navigator', 'userAgent') || '';

var process$1 = global_1.process;
var Deno$1 = global_1.Deno;
var versions = process$1 && process$1.versions || Deno$1 && Deno$1.version;
var v8 = versions && versions.v8;
var match, version;

if (v8) {
  match = v8.split('.');
  // in old Chrome, versions of V8 isn't V8 = Chrome / 10
  // but their correct versions are not interesting for us
  version = match[0] > 0 && match[0] < 4 ? 1 : +(match[0] + match[1]);
}

// BrowserFS NodeJS `process` polyfill incorrectly set `.v8` to `0.0`
// so check `userAgent` even if `.v8` exists, but 0
if (!version && engineUserAgent) {
  match = engineUserAgent.match(/Edge\/(\d+)/);
  if (!match || match[1] >= 74) {
    match = engineUserAgent.match(/Chrome\/(\d+)/);
    if (match) version = +match[1];
  }
}

var engineV8Version = version;

/* eslint-disable es/no-symbol -- required for testing */



// eslint-disable-next-line es/no-object-getownpropertysymbols -- required for testing
var symbolConstructorDetection = !!Object.getOwnPropertySymbols && !fails(function () {
  var symbol = Symbol();
  // Chrome 38 Symbol has incorrect toString conversion
  // `get-own-property-symbols` polyfill symbols converted to object are not Symbol instances
  return !String(symbol) || !(Object(symbol) instanceof Symbol) ||
    // Chrome 38-40 symbols are not inherited from DOM collections prototypes to instances
    !Symbol.sham && engineV8Version && engineV8Version < 41;
});

/* eslint-disable es/no-symbol -- required for testing */


var useSymbolAsUid = symbolConstructorDetection
  && !Symbol.sham
  && typeof Symbol.iterator == 'symbol';

var WellKnownSymbolsStore = shared('wks');
var Symbol$1 = global_1.Symbol;
var symbolFor = Symbol$1 && Symbol$1['for'];
var createWellKnownSymbol = useSymbolAsUid ? Symbol$1 : Symbol$1 && Symbol$1.withoutSetter || uid;

var wellKnownSymbol = function (name) {
  if (!hasOwnProperty_1(WellKnownSymbolsStore, name) || !(symbolConstructorDetection || typeof WellKnownSymbolsStore[name] == 'string')) {
    var description = 'Symbol.' + name;
    if (symbolConstructorDetection && hasOwnProperty_1(Symbol$1, name)) {
      WellKnownSymbolsStore[name] = Symbol$1[name];
    } else if (useSymbolAsUid && symbolFor) {
      WellKnownSymbolsStore[name] = symbolFor(description);
    } else {
      WellKnownSymbolsStore[name] = createWellKnownSymbol(description);
    }
  } return WellKnownSymbolsStore[name];
};

var documentAll$2 = documentAll_1.all;

var isObject = documentAll_1.IS_HTMLDDA ? function (it) {
  return typeof it == 'object' ? it !== null : isCallable(it) || it === documentAll$2;
} : function (it) {
  return typeof it == 'object' ? it !== null : isCallable(it);
};

var $String = String;
var $TypeError$1 = TypeError;

// `Assert: Type(argument) is Object`
var anObject = function (argument) {
  if (isObject(argument)) return argument;
  throw $TypeError$1($String(argument) + ' is not an object');
};

// Detect IE8's incomplete defineProperty implementation
var descriptors = !fails(function () {
  // eslint-disable-next-line es/no-object-defineproperty -- required for testing
  return Object.defineProperty({}, 1, { get: function () { return 7; } })[1] != 7;
});

// V8 ~ Chrome 36-
// https://bugs.chromium.org/p/v8/issues/detail?id=3334
var v8PrototypeDefineBug = descriptors && fails(function () {
  // eslint-disable-next-line es/no-object-defineproperty -- required for testing
  return Object.defineProperty(function () { /* empty */ }, 'prototype', {
    value: 42,
    writable: false
  }).prototype != 42;
});

var document$1 = global_1.document;
// typeof document.createElement is 'object' in old IE
var EXISTS = isObject(document$1) && isObject(document$1.createElement);

var documentCreateElement = function (it) {
  return EXISTS ? document$1.createElement(it) : {};
};

// Thanks to IE8 for its funny defineProperty
var ie8DomDefine = !descriptors && !fails(function () {
  // eslint-disable-next-line es/no-object-defineproperty -- required for testing
  return Object.defineProperty(documentCreateElement('div'), 'a', {
    get: function () { return 7; }
  }).a != 7;
});

var call$1 = Function.prototype.call;

var functionCall = functionBindNative ? call$1.bind(call$1) : function () {
  return call$1.apply(call$1, arguments);
};

var objectIsPrototypeOf = functionUncurryThis({}.isPrototypeOf);

var $Object$2 = Object;

var isSymbol = useSymbolAsUid ? function (it) {
  return typeof it == 'symbol';
} : function (it) {
  var $Symbol = getBuiltIn('Symbol');
  return isCallable($Symbol) && objectIsPrototypeOf($Symbol.prototype, $Object$2(it));
};

var $String$1 = String;

var tryToString = function (argument) {
  try {
    return $String$1(argument);
  } catch (error) {
    return 'Object';
  }
};

var $TypeError$2 = TypeError;

// `Assert: IsCallable(argument) is true`
var aCallable = function (argument) {
  if (isCallable(argument)) return argument;
  throw $TypeError$2(tryToString(argument) + ' is not a function');
};

// `GetMethod` abstract operation
// https://tc39.es/ecma262/#sec-getmethod
var getMethod = function (V, P) {
  var func = V[P];
  return isNullOrUndefined(func) ? undefined : aCallable(func);
};

var $TypeError$3 = TypeError;

// `OrdinaryToPrimitive` abstract operation
// https://tc39.es/ecma262/#sec-ordinarytoprimitive
var ordinaryToPrimitive = function (input, pref) {
  var fn, val;
  if (pref === 'string' && isCallable(fn = input.toString) && !isObject(val = functionCall(fn, input))) return val;
  if (isCallable(fn = input.valueOf) && !isObject(val = functionCall(fn, input))) return val;
  if (pref !== 'string' && isCallable(fn = input.toString) && !isObject(val = functionCall(fn, input))) return val;
  throw $TypeError$3("Can't convert object to primitive value");
};

var $TypeError$4 = TypeError;
var TO_PRIMITIVE = wellKnownSymbol('toPrimitive');

// `ToPrimitive` abstract operation
// https://tc39.es/ecma262/#sec-toprimitive
var toPrimitive = function (input, pref) {
  if (!isObject(input) || isSymbol(input)) return input;
  var exoticToPrim = getMethod(input, TO_PRIMITIVE);
  var result;
  if (exoticToPrim) {
    if (pref === undefined) pref = 'default';
    result = functionCall(exoticToPrim, input, pref);
    if (!isObject(result) || isSymbol(result)) return result;
    throw $TypeError$4("Can't convert object to primitive value");
  }
  if (pref === undefined) pref = 'number';
  return ordinaryToPrimitive(input, pref);
};

// `ToPropertyKey` abstract operation
// https://tc39.es/ecma262/#sec-topropertykey
var toPropertyKey = function (argument) {
  var key = toPrimitive(argument, 'string');
  return isSymbol(key) ? key : key + '';
};

var $TypeError$5 = TypeError;
// eslint-disable-next-line es/no-object-defineproperty -- safe
var $defineProperty = Object.defineProperty;
// eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe
var $getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;
var ENUMERABLE = 'enumerable';
var CONFIGURABLE = 'configurable';
var WRITABLE = 'writable';

// `Object.defineProperty` method
// https://tc39.es/ecma262/#sec-object.defineproperty
var f = descriptors ? v8PrototypeDefineBug ? function defineProperty(O, P, Attributes) {
  anObject(O);
  P = toPropertyKey(P);
  anObject(Attributes);
  if (typeof O === 'function' && P === 'prototype' && 'value' in Attributes && WRITABLE in Attributes && !Attributes[WRITABLE]) {
    var current = $getOwnPropertyDescriptor(O, P);
    if (current && current[WRITABLE]) {
      O[P] = Attributes.value;
      Attributes = {
        configurable: CONFIGURABLE in Attributes ? Attributes[CONFIGURABLE] : current[CONFIGURABLE],
        enumerable: ENUMERABLE in Attributes ? Attributes[ENUMERABLE] : current[ENUMERABLE],
        writable: false
      };
    }
  } return $defineProperty(O, P, Attributes);
} : $defineProperty : function defineProperty(O, P, Attributes) {
  anObject(O);
  P = toPropertyKey(P);
  anObject(Attributes);
  if (ie8DomDefine) try {
    return $defineProperty(O, P, Attributes);
  } catch (error) { /* empty */ }
  if ('get' in Attributes || 'set' in Attributes) throw $TypeError$5('Accessors not supported');
  if ('value' in Attributes) O[P] = Attributes.value;
  return O;
};

var objectDefineProperty = {
	f: f
};

var ceil = Math.ceil;
var floor = Math.floor;

// `Math.trunc` method
// https://tc39.es/ecma262/#sec-math.trunc
// eslint-disable-next-line es/no-math-trunc -- safe
var mathTrunc = Math.trunc || function trunc(x) {
  var n = +x;
  return (n > 0 ? floor : ceil)(n);
};

// `ToIntegerOrInfinity` abstract operation
// https://tc39.es/ecma262/#sec-tointegerorinfinity
var toIntegerOrInfinity = function (argument) {
  var number = +argument;
  // eslint-disable-next-line no-self-compare -- NaN check
  return number !== number || number === 0 ? 0 : mathTrunc(number);
};

var max = Math.max;
var min = Math.min;

// Helper for a popular repeating case of the spec:
// Let integer be ? ToInteger(index).
// If integer < 0, let result be max((length + integer), 0); else let result be min(integer, length).
var toAbsoluteIndex = function (index, length) {
  var integer = toIntegerOrInfinity(index);
  return integer < 0 ? max(integer + length, 0) : min(integer, length);
};

var min$1 = Math.min;

// `ToLength` abstract operation
// https://tc39.es/ecma262/#sec-tolength
var toLength = function (argument) {
  return argument > 0 ? min$1(toIntegerOrInfinity(argument), 0x1FFFFFFFFFFFFF) : 0; // 2 ** 53 - 1 == 9007199254740991
};

// `LengthOfArrayLike` abstract operation
// https://tc39.es/ecma262/#sec-lengthofarraylike
var lengthOfArrayLike = function (obj) {
  return toLength(obj.length);
};

// `Array.prototype.{ indexOf, includes }` methods implementation
var createMethod = function (IS_INCLUDES) {
  return function ($this, el, fromIndex) {
    var O = toIndexedObject($this);
    var length = lengthOfArrayLike(O);
    var index = toAbsoluteIndex(fromIndex, length);
    var value;
    // Array#includes uses SameValueZero equality algorithm
    // eslint-disable-next-line no-self-compare -- NaN check
    if (IS_INCLUDES && el != el) while (length > index) {
      value = O[index++];
      // eslint-disable-next-line no-self-compare -- NaN check
      if (value != value) return true;
    // Array#indexOf ignores holes, Array#includes - not
    } else for (;length > index; index++) {
      if ((IS_INCLUDES || index in O) && O[index] === el) return IS_INCLUDES || index || 0;
    } return !IS_INCLUDES && -1;
  };
};

var arrayIncludes = {
  // `Array.prototype.includes` method
  // https://tc39.es/ecma262/#sec-array.prototype.includes
  includes: createMethod(true),
  // `Array.prototype.indexOf` method
  // https://tc39.es/ecma262/#sec-array.prototype.indexof
  indexOf: createMethod(false)
};

var hiddenKeys = {};

var indexOf = arrayIncludes.indexOf;


var push = functionUncurryThis([].push);

var objectKeysInternal = function (object, names) {
  var O = toIndexedObject(object);
  var i = 0;
  var result = [];
  var key;
  for (key in O) !hasOwnProperty_1(hiddenKeys, key) && hasOwnProperty_1(O, key) && push(result, key);
  // Don't enum bug & hidden keys
  while (names.length > i) if (hasOwnProperty_1(O, key = names[i++])) {
    ~indexOf(result, key) || push(result, key);
  }
  return result;
};

// IE8- don't enum bug keys
var enumBugKeys = [
  'constructor',
  'hasOwnProperty',
  'isPrototypeOf',
  'propertyIsEnumerable',
  'toLocaleString',
  'toString',
  'valueOf'
];

// `Object.keys` method
// https://tc39.es/ecma262/#sec-object.keys
// eslint-disable-next-line es/no-object-keys -- safe
var objectKeys = Object.keys || function keys(O) {
  return objectKeysInternal(O, enumBugKeys);
};

// `Object.defineProperties` method
// https://tc39.es/ecma262/#sec-object.defineproperties
// eslint-disable-next-line es/no-object-defineproperties -- safe
var f$1 = descriptors && !v8PrototypeDefineBug ? Object.defineProperties : function defineProperties(O, Properties) {
  anObject(O);
  var props = toIndexedObject(Properties);
  var keys = objectKeys(Properties);
  var length = keys.length;
  var index = 0;
  var key;
  while (length > index) objectDefineProperty.f(O, key = keys[index++], props[key]);
  return O;
};

var objectDefineProperties = {
	f: f$1
};

var html = getBuiltIn('document', 'documentElement');

var keys = shared('keys');

var sharedKey = function (key) {
  return keys[key] || (keys[key] = uid(key));
};

/* global ActiveXObject -- old IE, WSH */








var GT = '>';
var LT = '<';
var PROTOTYPE = 'prototype';
var SCRIPT = 'script';
var IE_PROTO = sharedKey('IE_PROTO');

var EmptyConstructor = function () { /* empty */ };

var scriptTag = function (content) {
  return LT + SCRIPT + GT + content + LT + '/' + SCRIPT + GT;
};

// Create object with fake `null` prototype: use ActiveX Object with cleared prototype
var NullProtoObjectViaActiveX = function (activeXDocument) {
  activeXDocument.write(scriptTag(''));
  activeXDocument.close();
  var temp = activeXDocument.parentWindow.Object;
  activeXDocument = null; // avoid memory leak
  return temp;
};

// Create object with fake `null` prototype: use iframe Object with cleared prototype
var NullProtoObjectViaIFrame = function () {
  // Thrash, waste and sodomy: IE GC bug
  var iframe = documentCreateElement('iframe');
  var JS = 'java' + SCRIPT + ':';
  var iframeDocument;
  iframe.style.display = 'none';
  html.appendChild(iframe);
  // https://github.com/zloirock/core-js/issues/475
  iframe.src = String(JS);
  iframeDocument = iframe.contentWindow.document;
  iframeDocument.open();
  iframeDocument.write(scriptTag('document.F=Object'));
  iframeDocument.close();
  return iframeDocument.F;
};

// Check for document.domain and active x support
// No need to use active x approach when document.domain is not set
// see https://github.com/es-shims/es5-shim/issues/150
// variation of https://github.com/kitcambridge/es5-shim/commit/4f738ac066346
// avoid IE GC bug
var activeXDocument;
var NullProtoObject = function () {
  try {
    activeXDocument = new ActiveXObject('htmlfile');
  } catch (error) { /* ignore */ }
  NullProtoObject = typeof document != 'undefined'
    ? document.domain && activeXDocument
      ? NullProtoObjectViaActiveX(activeXDocument) // old IE
      : NullProtoObjectViaIFrame()
    : NullProtoObjectViaActiveX(activeXDocument); // WSH
  var length = enumBugKeys.length;
  while (length--) delete NullProtoObject[PROTOTYPE][enumBugKeys[length]];
  return NullProtoObject();
};

hiddenKeys[IE_PROTO] = true;

// `Object.create` method
// https://tc39.es/ecma262/#sec-object.create
// eslint-disable-next-line es/no-object-create -- safe
var objectCreate = Object.create || function create(O, Properties) {
  var result;
  if (O !== null) {
    EmptyConstructor[PROTOTYPE] = anObject(O);
    result = new EmptyConstructor();
    EmptyConstructor[PROTOTYPE] = null;
    // add "__proto__" for Object.getPrototypeOf polyfill
    result[IE_PROTO] = O;
  } else result = NullProtoObject();
  return Properties === undefined ? result : objectDefineProperties.f(result, Properties);
};

var defineProperty$1 = objectDefineProperty.f;

var UNSCOPABLES = wellKnownSymbol('unscopables');
var ArrayPrototype = Array.prototype;

// Array.prototype[@@unscopables]
// https://tc39.es/ecma262/#sec-array.prototype-@@unscopables
if (ArrayPrototype[UNSCOPABLES] == undefined) {
  defineProperty$1(ArrayPrototype, UNSCOPABLES, {
    configurable: true,
    value: objectCreate(null)
  });
}

// add a key to Array.prototype[@@unscopables]
var addToUnscopables = function (key) {
  ArrayPrototype[UNSCOPABLES][key] = true;
};

var iterators = {};

var WeakMap = global_1.WeakMap;

var weakMapBasicDetection = isCallable(WeakMap) && /native code/.test(String(WeakMap));

var createPropertyDescriptor = function (bitmap, value) {
  return {
    enumerable: !(bitmap & 1),
    configurable: !(bitmap & 2),
    writable: !(bitmap & 4),
    value: value
  };
};

var createNonEnumerableProperty = descriptors ? function (object, key, value) {
  return objectDefineProperty.f(object, key, createPropertyDescriptor(1, value));
} : function (object, key, value) {
  object[key] = value;
  return object;
};

var OBJECT_ALREADY_INITIALIZED = 'Object already initialized';
var TypeError$1 = global_1.TypeError;
var WeakMap$1 = global_1.WeakMap;
var set, get, has;

var enforce = function (it) {
  return has(it) ? get(it) : set(it, {});
};

var getterFor = function (TYPE) {
  return function (it) {
    var state;
    if (!isObject(it) || (state = get(it)).type !== TYPE) {
      throw TypeError$1('Incompatible receiver, ' + TYPE + ' required');
    } return state;
  };
};

if (weakMapBasicDetection || sharedStore.state) {
  var store$1 = sharedStore.state || (sharedStore.state = new WeakMap$1());
  /* eslint-disable no-self-assign -- prototype methods protection */
  store$1.get = store$1.get;
  store$1.has = store$1.has;
  store$1.set = store$1.set;
  /* eslint-enable no-self-assign -- prototype methods protection */
  set = function (it, metadata) {
    if (store$1.has(it)) throw TypeError$1(OBJECT_ALREADY_INITIALIZED);
    metadata.facade = it;
    store$1.set(it, metadata);
    return metadata;
  };
  get = function (it) {
    return store$1.get(it) || {};
  };
  has = function (it) {
    return store$1.has(it);
  };
} else {
  var STATE = sharedKey('state');
  hiddenKeys[STATE] = true;
  set = function (it, metadata) {
    if (hasOwnProperty_1(it, STATE)) throw TypeError$1(OBJECT_ALREADY_INITIALIZED);
    metadata.facade = it;
    createNonEnumerableProperty(it, STATE, metadata);
    return metadata;
  };
  get = function (it) {
    return hasOwnProperty_1(it, STATE) ? it[STATE] : {};
  };
  has = function (it) {
    return hasOwnProperty_1(it, STATE);
  };
}

var internalState = {
  set: set,
  get: get,
  has: has,
  enforce: enforce,
  getterFor: getterFor
};

var $propertyIsEnumerable = {}.propertyIsEnumerable;
// eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe
var getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;

// Nashorn ~ JDK8 bug
var NASHORN_BUG = getOwnPropertyDescriptor && !$propertyIsEnumerable.call({ 1: 2 }, 1);

// `Object.prototype.propertyIsEnumerable` method implementation
// https://tc39.es/ecma262/#sec-object.prototype.propertyisenumerable
var f$2 = NASHORN_BUG ? function propertyIsEnumerable(V) {
  var descriptor = getOwnPropertyDescriptor(this, V);
  return !!descriptor && descriptor.enumerable;
} : $propertyIsEnumerable;

var objectPropertyIsEnumerable = {
	f: f$2
};

// eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe
var $getOwnPropertyDescriptor$1 = Object.getOwnPropertyDescriptor;

// `Object.getOwnPropertyDescriptor` method
// https://tc39.es/ecma262/#sec-object.getownpropertydescriptor
var f$3 = descriptors ? $getOwnPropertyDescriptor$1 : function getOwnPropertyDescriptor(O, P) {
  O = toIndexedObject(O);
  P = toPropertyKey(P);
  if (ie8DomDefine) try {
    return $getOwnPropertyDescriptor$1(O, P);
  } catch (error) { /* empty */ }
  if (hasOwnProperty_1(O, P)) return createPropertyDescriptor(!functionCall(objectPropertyIsEnumerable.f, O, P), O[P]);
};

var objectGetOwnPropertyDescriptor = {
	f: f$3
};

var FunctionPrototype$1 = Function.prototype;
// eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe
var getDescriptor = descriptors && Object.getOwnPropertyDescriptor;

var EXISTS$1 = hasOwnProperty_1(FunctionPrototype$1, 'name');
// additional protection from minified / mangled / dropped function names
var PROPER = EXISTS$1 && (function something() { /* empty */ }).name === 'something';
var CONFIGURABLE$1 = EXISTS$1 && (!descriptors || (descriptors && getDescriptor(FunctionPrototype$1, 'name').configurable));

var functionName = {
  EXISTS: EXISTS$1,
  PROPER: PROPER,
  CONFIGURABLE: CONFIGURABLE$1
};

var functionToString = functionUncurryThis(Function.toString);

// this helper broken in `core-js@3.4.1-3.4.4`, so we can't use `shared` helper
if (!isCallable(sharedStore.inspectSource)) {
  sharedStore.inspectSource = function (it) {
    return functionToString(it);
  };
}

var inspectSource = sharedStore.inspectSource;

var makeBuiltIn_1 = createCommonjsModule(function (module) {
var CONFIGURABLE_FUNCTION_NAME = functionName.CONFIGURABLE;



var enforceInternalState = internalState.enforce;
var getInternalState = internalState.get;
// eslint-disable-next-line es/no-object-defineproperty -- safe
var defineProperty = Object.defineProperty;

var CONFIGURABLE_LENGTH = descriptors && !fails(function () {
  return defineProperty(function () { /* empty */ }, 'length', { value: 8 }).length !== 8;
});

var TEMPLATE = String(String).split('String');

var makeBuiltIn = module.exports = function (value, name, options) {
  if (String(name).slice(0, 7) === 'Symbol(') {
    name = '[' + String(name).replace(/^Symbol\(([^)]*)\)/, '$1') + ']';
  }
  if (options && options.getter) name = 'get ' + name;
  if (options && options.setter) name = 'set ' + name;
  if (!hasOwnProperty_1(value, 'name') || (CONFIGURABLE_FUNCTION_NAME && value.name !== name)) {
    if (descriptors) defineProperty(value, 'name', { value: name, configurable: true });
    else value.name = name;
  }
  if (CONFIGURABLE_LENGTH && options && hasOwnProperty_1(options, 'arity') && value.length !== options.arity) {
    defineProperty(value, 'length', { value: options.arity });
  }
  try {
    if (options && hasOwnProperty_1(options, 'constructor') && options.constructor) {
      if (descriptors) defineProperty(value, 'prototype', { writable: false });
    // in V8 ~ Chrome 53, prototypes of some methods, like `Array.prototype.values`, are non-writable
    } else if (value.prototype) value.prototype = undefined;
  } catch (error) { /* empty */ }
  var state = enforceInternalState(value);
  if (!hasOwnProperty_1(state, 'source')) {
    state.source = TEMPLATE.join(typeof name == 'string' ? name : '');
  } return value;
};

// add fake Function#toString for correct work wrapped methods / constructors with methods like LoDash isNative
// eslint-disable-next-line no-extend-native -- required
Function.prototype.toString = makeBuiltIn(function toString() {
  return isCallable(this) && getInternalState(this).source || inspectSource(this);
}, 'toString');
});

var defineBuiltIn = function (O, key, value, options) {
  if (!options) options = {};
  var simple = options.enumerable;
  var name = options.name !== undefined ? options.name : key;
  if (isCallable(value)) makeBuiltIn_1(value, name, options);
  if (options.global) {
    if (simple) O[key] = value;
    else defineGlobalProperty(key, value);
  } else {
    try {
      if (!options.unsafe) delete O[key];
      else if (O[key]) simple = true;
    } catch (error) { /* empty */ }
    if (simple) O[key] = value;
    else objectDefineProperty.f(O, key, {
      value: value,
      enumerable: false,
      configurable: !options.nonConfigurable,
      writable: !options.nonWritable
    });
  } return O;
};

var hiddenKeys$1 = enumBugKeys.concat('length', 'prototype');

// `Object.getOwnPropertyNames` method
// https://tc39.es/ecma262/#sec-object.getownpropertynames
// eslint-disable-next-line es/no-object-getownpropertynames -- safe
var f$4 = Object.getOwnPropertyNames || function getOwnPropertyNames(O) {
  return objectKeysInternal(O, hiddenKeys$1);
};

var objectGetOwnPropertyNames = {
	f: f$4
};

// eslint-disable-next-line es/no-object-getownpropertysymbols -- safe
var f$5 = Object.getOwnPropertySymbols;

var objectGetOwnPropertySymbols = {
	f: f$5
};

var concat = functionUncurryThis([].concat);

// all object keys, includes non-enumerable and symbols
var ownKeys = getBuiltIn('Reflect', 'ownKeys') || function ownKeys(it) {
  var keys = objectGetOwnPropertyNames.f(anObject(it));
  var getOwnPropertySymbols = objectGetOwnPropertySymbols.f;
  return getOwnPropertySymbols ? concat(keys, getOwnPropertySymbols(it)) : keys;
};

var copyConstructorProperties = function (target, source, exceptions) {
  var keys = ownKeys(source);
  var defineProperty = objectDefineProperty.f;
  var getOwnPropertyDescriptor = objectGetOwnPropertyDescriptor.f;
  for (var i = 0; i < keys.length; i++) {
    var key = keys[i];
    if (!hasOwnProperty_1(target, key) && !(exceptions && hasOwnProperty_1(exceptions, key))) {
      defineProperty(target, key, getOwnPropertyDescriptor(source, key));
    }
  }
};

var replacement = /#|\.prototype\./;

var isForced = function (feature, detection) {
  var value = data[normalize(feature)];
  return value == POLYFILL ? true
    : value == NATIVE ? false
    : isCallable(detection) ? fails(detection)
    : !!detection;
};

var normalize = isForced.normalize = function (string) {
  return String(string).replace(replacement, '.').toLowerCase();
};

var data = isForced.data = {};
var NATIVE = isForced.NATIVE = 'N';
var POLYFILL = isForced.POLYFILL = 'P';

var isForced_1 = isForced;

var getOwnPropertyDescriptor$1 = objectGetOwnPropertyDescriptor.f;






/*
  options.target         - name of the target object
  options.global         - target is the global object
  options.stat           - export as static methods of target
  options.proto          - export as prototype methods of target
  options.real           - real prototype method for the `pure` version
  options.forced         - export even if the native feature is available
  options.bind           - bind methods to the target, required for the `pure` version
  options.wrap           - wrap constructors to preventing global pollution, required for the `pure` version
  options.unsafe         - use the simple assignment of property instead of delete + defineProperty
  options.sham           - add a flag to not completely full polyfills
  options.enumerable     - export as enumerable property
  options.dontCallGetSet - prevent calling a getter on target
  options.name           - the .name of the function if it does not match the key
*/
var _export = function (options, source) {
  var TARGET = options.target;
  var GLOBAL = options.global;
  var STATIC = options.stat;
  var FORCED, target, key, targetProperty, sourceProperty, descriptor;
  if (GLOBAL) {
    target = global_1;
  } else if (STATIC) {
    target = global_1[TARGET] || defineGlobalProperty(TARGET, {});
  } else {
    target = (global_1[TARGET] || {}).prototype;
  }
  if (target) for (key in source) {
    sourceProperty = source[key];
    if (options.dontCallGetSet) {
      descriptor = getOwnPropertyDescriptor$1(target, key);
      targetProperty = descriptor && descriptor.value;
    } else targetProperty = target[key];
    FORCED = isForced_1(GLOBAL ? key : TARGET + (STATIC ? '.' : '#') + key, options.forced);
    // contained in target
    if (!FORCED && targetProperty !== undefined) {
      if (typeof sourceProperty == typeof targetProperty) continue;
      copyConstructorProperties(sourceProperty, targetProperty);
    }
    // add a flag to not completely full polyfills
    if (options.sham || (targetProperty && targetProperty.sham)) {
      createNonEnumerableProperty(sourceProperty, 'sham', true);
    }
    defineBuiltIn(target, key, sourceProperty, options);
  }
};

var correctPrototypeGetter = !fails(function () {
  function F() { /* empty */ }
  F.prototype.constructor = null;
  // eslint-disable-next-line es/no-object-getprototypeof -- required for testing
  return Object.getPrototypeOf(new F()) !== F.prototype;
});

var IE_PROTO$1 = sharedKey('IE_PROTO');
var $Object$3 = Object;
var ObjectPrototype = $Object$3.prototype;

// `Object.getPrototypeOf` method
// https://tc39.es/ecma262/#sec-object.getprototypeof
// eslint-disable-next-line es/no-object-getprototypeof -- safe
var objectGetPrototypeOf = correctPrototypeGetter ? $Object$3.getPrototypeOf : function (O) {
  var object = toObject(O);
  if (hasOwnProperty_1(object, IE_PROTO$1)) return object[IE_PROTO$1];
  var constructor = object.constructor;
  if (isCallable(constructor) && object instanceof constructor) {
    return constructor.prototype;
  } return object instanceof $Object$3 ? ObjectPrototype : null;
};

var ITERATOR = wellKnownSymbol('iterator');
var BUGGY_SAFARI_ITERATORS = false;

// `%IteratorPrototype%` object
// https://tc39.es/ecma262/#sec-%iteratorprototype%-object
var IteratorPrototype, PrototypeOfArrayIteratorPrototype, arrayIterator;

/* eslint-disable es/no-array-prototype-keys -- safe */
if ([].keys) {
  arrayIterator = [].keys();
  // Safari 8 has buggy iterators w/o `next`
  if (!('next' in arrayIterator)) BUGGY_SAFARI_ITERATORS = true;
  else {
    PrototypeOfArrayIteratorPrototype = objectGetPrototypeOf(objectGetPrototypeOf(arrayIterator));
    if (PrototypeOfArrayIteratorPrototype !== Object.prototype) IteratorPrototype = PrototypeOfArrayIteratorPrototype;
  }
}

var NEW_ITERATOR_PROTOTYPE = !isObject(IteratorPrototype) || fails(function () {
  var test = {};
  // FF44- legacy iterators case
  return IteratorPrototype[ITERATOR].call(test) !== test;
});

if (NEW_ITERATOR_PROTOTYPE) IteratorPrototype = {};

// `%IteratorPrototype%[@@iterator]()` method
// https://tc39.es/ecma262/#sec-%iteratorprototype%-@@iterator
if (!isCallable(IteratorPrototype[ITERATOR])) {
  defineBuiltIn(IteratorPrototype, ITERATOR, function () {
    return this;
  });
}

var iteratorsCore = {
  IteratorPrototype: IteratorPrototype,
  BUGGY_SAFARI_ITERATORS: BUGGY_SAFARI_ITERATORS
};

var defineProperty$2 = objectDefineProperty.f;



var TO_STRING_TAG = wellKnownSymbol('toStringTag');

var setToStringTag = function (target, TAG, STATIC) {
  if (target && !STATIC) target = target.prototype;
  if (target && !hasOwnProperty_1(target, TO_STRING_TAG)) {
    defineProperty$2(target, TO_STRING_TAG, { configurable: true, value: TAG });
  }
};

var IteratorPrototype$1 = iteratorsCore.IteratorPrototype;





var returnThis = function () { return this; };

var iteratorCreateConstructor = function (IteratorConstructor, NAME, next, ENUMERABLE_NEXT) {
  var TO_STRING_TAG = NAME + ' Iterator';
  IteratorConstructor.prototype = objectCreate(IteratorPrototype$1, { next: createPropertyDescriptor(+!ENUMERABLE_NEXT, next) });
  setToStringTag(IteratorConstructor, TO_STRING_TAG, false);
  iterators[TO_STRING_TAG] = returnThis;
  return IteratorConstructor;
};

var $String$2 = String;
var $TypeError$6 = TypeError;

var aPossiblePrototype = function (argument) {
  if (typeof argument == 'object' || isCallable(argument)) return argument;
  throw $TypeError$6("Can't set " + $String$2(argument) + ' as a prototype');
};

/* eslint-disable no-proto -- safe */




// `Object.setPrototypeOf` method
// https://tc39.es/ecma262/#sec-object.setprototypeof
// Works with __proto__ only. Old v8 can't work with null proto objects.
// eslint-disable-next-line es/no-object-setprototypeof -- safe
var objectSetPrototypeOf = Object.setPrototypeOf || ('__proto__' in {} ? function () {
  var CORRECT_SETTER = false;
  var test = {};
  var setter;
  try {
    // eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe
    setter = functionUncurryThis(Object.getOwnPropertyDescriptor(Object.prototype, '__proto__').set);
    setter(test, []);
    CORRECT_SETTER = test instanceof Array;
  } catch (error) { /* empty */ }
  return function setPrototypeOf(O, proto) {
    anObject(O);
    aPossiblePrototype(proto);
    if (CORRECT_SETTER) setter(O, proto);
    else O.__proto__ = proto;
    return O;
  };
}() : undefined);

var PROPER_FUNCTION_NAME = functionName.PROPER;
var CONFIGURABLE_FUNCTION_NAME = functionName.CONFIGURABLE;
var IteratorPrototype$2 = iteratorsCore.IteratorPrototype;
var BUGGY_SAFARI_ITERATORS$1 = iteratorsCore.BUGGY_SAFARI_ITERATORS;
var ITERATOR$1 = wellKnownSymbol('iterator');
var KEYS = 'keys';
var VALUES = 'values';
var ENTRIES = 'entries';

var returnThis$1 = function () { return this; };

var iteratorDefine = function (Iterable, NAME, IteratorConstructor, next, DEFAULT, IS_SET, FORCED) {
  iteratorCreateConstructor(IteratorConstructor, NAME, next);

  var getIterationMethod = function (KIND) {
    if (KIND === DEFAULT && defaultIterator) return defaultIterator;
    if (!BUGGY_SAFARI_ITERATORS$1 && KIND in IterablePrototype) return IterablePrototype[KIND];
    switch (KIND) {
      case KEYS: return function keys() { return new IteratorConstructor(this, KIND); };
      case VALUES: return function values() { return new IteratorConstructor(this, KIND); };
      case ENTRIES: return function entries() { return new IteratorConstructor(this, KIND); };
    } return function () { return new IteratorConstructor(this); };
  };

  var TO_STRING_TAG = NAME + ' Iterator';
  var INCORRECT_VALUES_NAME = false;
  var IterablePrototype = Iterable.prototype;
  var nativeIterator = IterablePrototype[ITERATOR$1]
    || IterablePrototype['@@iterator']
    || DEFAULT && IterablePrototype[DEFAULT];
  var defaultIterator = !BUGGY_SAFARI_ITERATORS$1 && nativeIterator || getIterationMethod(DEFAULT);
  var anyNativeIterator = NAME == 'Array' ? IterablePrototype.entries || nativeIterator : nativeIterator;
  var CurrentIteratorPrototype, methods, KEY;

  // fix native
  if (anyNativeIterator) {
    CurrentIteratorPrototype = objectGetPrototypeOf(anyNativeIterator.call(new Iterable()));
    if (CurrentIteratorPrototype !== Object.prototype && CurrentIteratorPrototype.next) {
      if ( objectGetPrototypeOf(CurrentIteratorPrototype) !== IteratorPrototype$2) {
        if (objectSetPrototypeOf) {
          objectSetPrototypeOf(CurrentIteratorPrototype, IteratorPrototype$2);
        } else if (!isCallable(CurrentIteratorPrototype[ITERATOR$1])) {
          defineBuiltIn(CurrentIteratorPrototype, ITERATOR$1, returnThis$1);
        }
      }
      // Set @@toStringTag to native iterators
      setToStringTag(CurrentIteratorPrototype, TO_STRING_TAG, true);
    }
  }

  // fix Array.prototype.{ values, @@iterator }.name in V8 / FF
  if (PROPER_FUNCTION_NAME && DEFAULT == VALUES && nativeIterator && nativeIterator.name !== VALUES) {
    if ( CONFIGURABLE_FUNCTION_NAME) {
      createNonEnumerableProperty(IterablePrototype, 'name', VALUES);
    } else {
      INCORRECT_VALUES_NAME = true;
      defaultIterator = function values() { return functionCall(nativeIterator, this); };
    }
  }

  // export additional methods
  if (DEFAULT) {
    methods = {
      values: getIterationMethod(VALUES),
      keys: IS_SET ? defaultIterator : getIterationMethod(KEYS),
      entries: getIterationMethod(ENTRIES)
    };
    if (FORCED) for (KEY in methods) {
      if (BUGGY_SAFARI_ITERATORS$1 || INCORRECT_VALUES_NAME || !(KEY in IterablePrototype)) {
        defineBuiltIn(IterablePrototype, KEY, methods[KEY]);
      }
    } else _export({ target: NAME, proto: true, forced: BUGGY_SAFARI_ITERATORS$1 || INCORRECT_VALUES_NAME }, methods);
  }

  // define iterator
  if ( IterablePrototype[ITERATOR$1] !== defaultIterator) {
    defineBuiltIn(IterablePrototype, ITERATOR$1, defaultIterator, { name: DEFAULT });
  }
  iterators[NAME] = defaultIterator;

  return methods;
};

// `CreateIterResultObject` abstract operation
// https://tc39.es/ecma262/#sec-createiterresultobject
var createIterResultObject = function (value, done) {
  return { value: value, done: done };
};

var defineProperty$3 = objectDefineProperty.f;





var ARRAY_ITERATOR = 'Array Iterator';
var setInternalState = internalState.set;
var getInternalState = internalState.getterFor(ARRAY_ITERATOR);

// `Array.prototype.entries` method
// https://tc39.es/ecma262/#sec-array.prototype.entries
// `Array.prototype.keys` method
// https://tc39.es/ecma262/#sec-array.prototype.keys
// `Array.prototype.values` method
// https://tc39.es/ecma262/#sec-array.prototype.values
// `Array.prototype[@@iterator]` method
// https://tc39.es/ecma262/#sec-array.prototype-@@iterator
// `CreateArrayIterator` internal method
// https://tc39.es/ecma262/#sec-createarrayiterator
var es_array_iterator = iteratorDefine(Array, 'Array', function (iterated, kind) {
  setInternalState(this, {
    type: ARRAY_ITERATOR,
    target: toIndexedObject(iterated), // target
    index: 0,                          // next index
    kind: kind                         // kind
  });
// `%ArrayIteratorPrototype%.next` method
// https://tc39.es/ecma262/#sec-%arrayiteratorprototype%.next
}, function () {
  var state = getInternalState(this);
  var target = state.target;
  var kind = state.kind;
  var index = state.index++;
  if (!target || index >= target.length) {
    state.target = undefined;
    return createIterResultObject(undefined, true);
  }
  if (kind == 'keys') return createIterResultObject(index, false);
  if (kind == 'values') return createIterResultObject(target[index], false);
  return createIterResultObject([index, target[index]], false);
}, 'values');

// argumentsList[@@iterator] is %ArrayProto_values%
// https://tc39.es/ecma262/#sec-createunmappedargumentsobject
// https://tc39.es/ecma262/#sec-createmappedargumentsobject
var values = iterators.Arguments = iterators.Array;

// https://tc39.es/ecma262/#sec-array.prototype-@@unscopables
addToUnscopables('keys');
addToUnscopables('values');
addToUnscopables('entries');

// V8 ~ Chrome 45- bug
if ( descriptors && values.name !== 'values') try {
  defineProperty$3(values, 'name', { value: 'values' });
} catch (error) { /* empty */ }

var ITERATOR$2 = wellKnownSymbol('iterator');

var urlConstructorDetection = !fails(function () {
  // eslint-disable-next-line unicorn/relative-url-style -- required for testing
  var url = new URL('b?a=1&b=2&c=3', 'http://a');
  var searchParams = url.searchParams;
  var result = '';
  url.pathname = 'c%20d';
  searchParams.forEach(function (value, key) {
    searchParams['delete']('b');
    result += key + value;
  });
  return (isPure && !url.toJSON)
    || !searchParams.sort
    || url.href !== 'http://a/c%20d?a=1&c=3'
    || searchParams.get('c') !== '3'
    || String(new URLSearchParams('?a=1')) !== 'a=1'
    || !searchParams[ITERATOR$2]
    // throws in Edge
    || new URL('https://a@b').username !== 'a'
    || new URLSearchParams(new URLSearchParams('a=b')).get('a') !== 'b'
    // not punycoded in Edge
    || new URL('http://ÑÐµÑÑ').host !== 'xn--e1aybc'
    // not escaped in Chrome 62-
    || new URL('http://a#Ð±').hash !== '#%D0%B1'
    // fails in Chrome 66-
    || result !== 'a1c3'
    // throws in Safari
    || new URL('http://x', undefined).host !== 'x';
});

var defineBuiltIns = function (target, src, options) {
  for (var key in src) defineBuiltIn(target, key, src[key], options);
  return target;
};

var $TypeError$7 = TypeError;

var anInstance = function (it, Prototype) {
  if (objectIsPrototypeOf(Prototype, it)) return it;
  throw $TypeError$7('Incorrect invocation');
};

var bind = functionUncurryThis(functionUncurryThis.bind);

// optional / simple context binding
var functionBindContext = function (fn, that) {
  aCallable(fn);
  return that === undefined ? fn : functionBindNative ? bind(fn, that) : function (/* ...args */) {
    return fn.apply(that, arguments);
  };
};

var TO_STRING_TAG$1 = wellKnownSymbol('toStringTag');
var test = {};

test[TO_STRING_TAG$1] = 'z';

var toStringTagSupport = String(test) === '[object z]';

var TO_STRING_TAG$2 = wellKnownSymbol('toStringTag');
var $Object$4 = Object;

// ES3 wrong here
var CORRECT_ARGUMENTS = classofRaw(function () { return arguments; }()) == 'Arguments';

// fallback for IE11 Script Access Denied error
var tryGet = function (it, key) {
  try {
    return it[key];
  } catch (error) { /* empty */ }
};

// getting tag from ES6+ `Object.prototype.toString`
var classof = toStringTagSupport ? classofRaw : function (it) {
  var O, tag, result;
  return it === undefined ? 'Undefined' : it === null ? 'Null'
    // @@toStringTag case
    : typeof (tag = tryGet(O = $Object$4(it), TO_STRING_TAG$2)) == 'string' ? tag
    // builtinTag case
    : CORRECT_ARGUMENTS ? classofRaw(O)
    // ES3 arguments fallback
    : (result = classofRaw(O)) == 'Object' && isCallable(O.callee) ? 'Arguments' : result;
};

var $String$3 = String;

var toString_1 = function (argument) {
  if (classof(argument) === 'Symbol') throw TypeError('Cannot convert a Symbol value to a string');
  return $String$3(argument);
};

var ITERATOR$3 = wellKnownSymbol('iterator');

var getIteratorMethod = function (it) {
  if (!isNullOrUndefined(it)) return getMethod(it, ITERATOR$3)
    || getMethod(it, '@@iterator')
    || iterators[classof(it)];
};

var $TypeError$8 = TypeError;

var getIterator = function (argument, usingIterator) {
  var iteratorMethod = arguments.length < 2 ? getIteratorMethod(argument) : usingIterator;
  if (aCallable(iteratorMethod)) return anObject(functionCall(iteratorMethod, argument));
  throw $TypeError$8(tryToString(argument) + ' is not iterable');
};

var $TypeError$9 = TypeError;

var validateArgumentsLength = function (passed, required) {
  if (passed < required) throw $TypeError$9('Not enough arguments');
  return passed;
};

var createProperty = function (object, key, value) {
  var propertyKey = toPropertyKey(key);
  if (propertyKey in object) objectDefineProperty.f(object, propertyKey, createPropertyDescriptor(0, value));
  else object[propertyKey] = value;
};

var $Array = Array;
var max$1 = Math.max;

var arraySliceSimple = function (O, start, end) {
  var length = lengthOfArrayLike(O);
  var k = toAbsoluteIndex(start, length);
  var fin = toAbsoluteIndex(end === undefined ? length : end, length);
  var result = $Array(max$1(fin - k, 0));
  for (var n = 0; k < fin; k++, n++) createProperty(result, n, O[k]);
  result.length = n;
  return result;
};

var floor$1 = Math.floor;

var mergeSort = function (array, comparefn) {
  var length = array.length;
  var middle = floor$1(length / 2);
  return length < 8 ? insertionSort(array, comparefn) : merge(
    array,
    mergeSort(arraySliceSimple(array, 0, middle), comparefn),
    mergeSort(arraySliceSimple(array, middle), comparefn),
    comparefn
  );
};

var insertionSort = function (array, comparefn) {
  var length = array.length;
  var i = 1;
  var element, j;

  while (i < length) {
    j = i;
    element = array[i];
    while (j && comparefn(array[j - 1], element) > 0) {
      array[j] = array[--j];
    }
    if (j !== i++) array[j] = element;
  } return array;
};

var merge = function (array, left, right, comparefn) {
  var llength = left.length;
  var rlength = right.length;
  var lindex = 0;
  var rindex = 0;

  while (lindex < llength || rindex < rlength) {
    array[lindex + rindex] = (lindex < llength && rindex < rlength)
      ? comparefn(left[lindex], right[rindex]) <= 0 ? left[lindex++] : right[rindex++]
      : lindex < llength ? left[lindex++] : right[rindex++];
  } return array;
};

var arraySort = mergeSort;

// TODO: in core-js@4, move /modules/ dependencies to public entries for better optimization by tools like `preset-env`




























var ITERATOR$4 = wellKnownSymbol('iterator');
var URL_SEARCH_PARAMS = 'URLSearchParams';
var URL_SEARCH_PARAMS_ITERATOR = URL_SEARCH_PARAMS + 'Iterator';
var setInternalState$1 = internalState.set;
var getInternalParamsState = internalState.getterFor(URL_SEARCH_PARAMS);
var getInternalIteratorState = internalState.getterFor(URL_SEARCH_PARAMS_ITERATOR);
// eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe
var getOwnPropertyDescriptor$2 = Object.getOwnPropertyDescriptor;

// Avoid NodeJS experimental warning
var safeGetBuiltIn = function (name) {
  if (!descriptors) return global_1[name];
  var descriptor = getOwnPropertyDescriptor$2(global_1, name);
  return descriptor && descriptor.value;
};

var nativeFetch = safeGetBuiltIn('fetch');
var NativeRequest = safeGetBuiltIn('Request');
var Headers = safeGetBuiltIn('Headers');
var RequestPrototype = NativeRequest && NativeRequest.prototype;
var HeadersPrototype = Headers && Headers.prototype;
var RegExp$1 = global_1.RegExp;
var TypeError$2 = global_1.TypeError;
var decodeURIComponent$1 = global_1.decodeURIComponent;
var encodeURIComponent$1 = global_1.encodeURIComponent;
var charAt = functionUncurryThis(''.charAt);
var join = functionUncurryThis([].join);
var push$1 = functionUncurryThis([].push);
var replace = functionUncurryThis(''.replace);
var shift = functionUncurryThis([].shift);
var splice = functionUncurryThis([].splice);
var split$1 = functionUncurryThis(''.split);
var stringSlice$1 = functionUncurryThis(''.slice);

var plus = /\+/g;
var sequences = Array(4);

var percentSequence = function (bytes) {
  return sequences[bytes - 1] || (sequences[bytes - 1] = RegExp$1('((?:%[\\da-f]{2}){' + bytes + '})', 'gi'));
};

var percentDecode = function (sequence) {
  try {
    return decodeURIComponent$1(sequence);
  } catch (error) {
    return sequence;
  }
};

var deserialize = function (it) {
  var result = replace(it, plus, ' ');
  var bytes = 4;
  try {
    return decodeURIComponent$1(result);
  } catch (error) {
    while (bytes) {
      result = replace(result, percentSequence(bytes--), percentDecode);
    }
    return result;
  }
};

var find = /[!'()~]|%20/g;

var replacements = {
  '!': '%21',
  "'": '%27',
  '(': '%28',
  ')': '%29',
  '~': '%7E',
  '%20': '+'
};

var replacer = function (match) {
  return replacements[match];
};

var serialize = function (it) {
  return replace(encodeURIComponent$1(it), find, replacer);
};

var URLSearchParamsIterator = iteratorCreateConstructor(function Iterator(params, kind) {
  setInternalState$1(this, {
    type: URL_SEARCH_PARAMS_ITERATOR,
    iterator: getIterator(getInternalParamsState(params).entries),
    kind: kind
  });
}, 'Iterator', function next() {
  var state = getInternalIteratorState(this);
  var kind = state.kind;
  var step = state.iterator.next();
  var entry = step.value;
  if (!step.done) {
    step.value = kind === 'keys' ? entry.key : kind === 'values' ? entry.value : [entry.key, entry.value];
  } return step;
}, true);

var URLSearchParamsState = function (init) {
  this.entries = [];
  this.url = null;

  if (init !== undefined) {
    if (isObject(init)) this.parseObject(init);
    else this.parseQuery(typeof init == 'string' ? charAt(init, 0) === '?' ? stringSlice$1(init, 1) : init : toString_1(init));
  }
};

URLSearchParamsState.prototype = {
  type: URL_SEARCH_PARAMS,
  bindURL: function (url) {
    this.url = url;
    this.update();
  },
  parseObject: function (object) {
    var iteratorMethod = getIteratorMethod(object);
    var iterator, next, step, entryIterator, entryNext, first, second;

    if (iteratorMethod) {
      iterator = getIterator(object, iteratorMethod);
      next = iterator.next;
      while (!(step = functionCall(next, iterator)).done) {
        entryIterator = getIterator(anObject(step.value));
        entryNext = entryIterator.next;
        if (
          (first = functionCall(entryNext, entryIterator)).done ||
          (second = functionCall(entryNext, entryIterator)).done ||
          !functionCall(entryNext, entryIterator).done
        ) throw TypeError$2('Expected sequence with length 2');
        push$1(this.entries, { key: toString_1(first.value), value: toString_1(second.value) });
      }
    } else for (var key in object) if (hasOwnProperty_1(object, key)) {
      push$1(this.entries, { key: key, value: toString_1(object[key]) });
    }
  },
  parseQuery: function (query) {
    if (query) {
      var attributes = split$1(query, '&');
      var index = 0;
      var attribute, entry;
      while (index < attributes.length) {
        attribute = attributes[index++];
        if (attribute.length) {
          entry = split$1(attribute, '=');
          push$1(this.entries, {
            key: deserialize(shift(entry)),
            value: deserialize(join(entry, '='))
          });
        }
      }
    }
  },
  serialize: function () {
    var entries = this.entries;
    var result = [];
    var index = 0;
    var entry;
    while (index < entries.length) {
      entry = entries[index++];
      push$1(result, serialize(entry.key) + '=' + serialize(entry.value));
    } return join(result, '&');
  },
  update: function () {
    this.entries.length = 0;
    this.parseQuery(this.url.query);
  },
  updateURL: function () {
    if (this.url) this.url.update();
  }
};

// `URLSearchParams` constructor
// https://url.spec.whatwg.org/#interface-urlsearchparams
var URLSearchParamsConstructor = function URLSearchParams(/* init */) {
  anInstance(this, URLSearchParamsPrototype);
  var init = arguments.length > 0 ? arguments[0] : undefined;
  setInternalState$1(this, new URLSearchParamsState(init));
};

var URLSearchParamsPrototype = URLSearchParamsConstructor.prototype;

defineBuiltIns(URLSearchParamsPrototype, {
  // `URLSearchParams.prototype.append` method
  // https://url.spec.whatwg.org/#dom-urlsearchparams-append
  append: function append(name, value) {
    validateArgumentsLength(arguments.length, 2);
    var state = getInternalParamsState(this);
    push$1(state.entries, { key: toString_1(name), value: toString_1(value) });
    state.updateURL();
  },
  // `URLSearchParams.prototype.delete` method
  // https://url.spec.whatwg.org/#dom-urlsearchparams-delete
  'delete': function (name) {
    validateArgumentsLength(arguments.length, 1);
    var state = getInternalParamsState(this);
    var entries = state.entries;
    var key = toString_1(name);
    var index = 0;
    while (index < entries.length) {
      if (entries[index].key === key) splice(entries, index, 1);
      else index++;
    }
    state.updateURL();
  },
  // `URLSearchParams.prototype.get` method
  // https://url.spec.whatwg.org/#dom-urlsearchparams-get
  get: function get(name) {
    validateArgumentsLength(arguments.length, 1);
    var entries = getInternalParamsState(this).entries;
    var key = toString_1(name);
    var index = 0;
    for (; index < entries.length; index++) {
      if (entries[index].key === key) return entries[index].value;
    }
    return null;
  },
  // `URLSearchParams.prototype.getAll` method
  // https://url.spec.whatwg.org/#dom-urlsearchparams-getall
  getAll: function getAll(name) {
    validateArgumentsLength(arguments.length, 1);
    var entries = getInternalParamsState(this).entries;
    var key = toString_1(name);
    var result = [];
    var index = 0;
    for (; index < entries.length; index++) {
      if (entries[index].key === key) push$1(result, entries[index].value);
    }
    return result;
  },
  // `URLSearchParams.prototype.has` method
  // https://url.spec.whatwg.org/#dom-urlsearchparams-has
  has: function has(name) {
    validateArgumentsLength(arguments.length, 1);
    var entries = getInternalParamsState(this).entries;
    var key = toString_1(name);
    var index = 0;
    while (index < entries.length) {
      if (entries[index++].key === key) return true;
    }
    return false;
  },
  // `URLSearchParams.prototype.set` method
  // https://url.spec.whatwg.org/#dom-urlsearchparams-set
  set: function set(name, value) {
    validateArgumentsLength(arguments.length, 1);
    var state = getInternalParamsState(this);
    var entries = state.entries;
    var found = false;
    var key = toString_1(name);
    var val = toString_1(value);
    var index = 0;
    var entry;
    for (; index < entries.length; index++) {
      entry = entries[index];
      if (entry.key === key) {
        if (found) splice(entries, index--, 1);
        else {
          found = true;
          entry.value = val;
        }
      }
    }
    if (!found) push$1(entries, { key: key, value: val });
    state.updateURL();
  },
  // `URLSearchParams.prototype.sort` method
  // https://url.spec.whatwg.org/#dom-urlsearchparams-sort
  sort: function sort() {
    var state = getInternalParamsState(this);
    arraySort(state.entries, function (a, b) {
      return a.key > b.key ? 1 : -1;
    });
    state.updateURL();
  },
  // `URLSearchParams.prototype.forEach` method
  forEach: function forEach(callback /* , thisArg */) {
    var entries = getInternalParamsState(this).entries;
    var boundFunction = functionBindContext(callback, arguments.length > 1 ? arguments[1] : undefined);
    var index = 0;
    var entry;
    while (index < entries.length) {
      entry = entries[index++];
      boundFunction(entry.value, entry.key, this);
    }
  },
  // `URLSearchParams.prototype.keys` method
  keys: function keys() {
    return new URLSearchParamsIterator(this, 'keys');
  },
  // `URLSearchParams.prototype.values` method
  values: function values() {
    return new URLSearchParamsIterator(this, 'values');
  },
  // `URLSearchParams.prototype.entries` method
  entries: function entries() {
    return new URLSearchParamsIterator(this, 'entries');
  }
}, { enumerable: true });

// `URLSearchParams.prototype[@@iterator]` method
defineBuiltIn(URLSearchParamsPrototype, ITERATOR$4, URLSearchParamsPrototype.entries, { name: 'entries' });

// `URLSearchParams.prototype.toString` method
// https://url.spec.whatwg.org/#urlsearchparams-stringification-behavior
defineBuiltIn(URLSearchParamsPrototype, 'toString', function toString() {
  return getInternalParamsState(this).serialize();
}, { enumerable: true });

setToStringTag(URLSearchParamsConstructor, URL_SEARCH_PARAMS);

_export({ global: true, constructor: true, forced: !urlConstructorDetection }, {
  URLSearchParams: URLSearchParamsConstructor
});

// Wrap `fetch` and `Request` for correct work with polyfilled `URLSearchParams`
if (!urlConstructorDetection && isCallable(Headers)) {
  var headersHas = functionUncurryThis(HeadersPrototype.has);
  var headersSet = functionUncurryThis(HeadersPrototype.set);

  var wrapRequestOptions = function (init) {
    if (isObject(init)) {
      var body = init.body;
      var headers;
      if (classof(body) === URL_SEARCH_PARAMS) {
        headers = init.headers ? new Headers(init.headers) : new Headers();
        if (!headersHas(headers, 'content-type')) {
          headersSet(headers, 'content-type', 'application/x-www-form-urlencoded;charset=UTF-8');
        }
        return objectCreate(init, {
          body: createPropertyDescriptor(0, toString_1(body)),
          headers: createPropertyDescriptor(0, headers)
        });
      }
    } return init;
  };

  if (isCallable(nativeFetch)) {
    _export({ global: true, enumerable: true, dontCallGetSet: true, forced: true }, {
      fetch: function fetch(input /* , init */) {
        return nativeFetch(input, arguments.length > 1 ? wrapRequestOptions(arguments[1]) : {});
      }
    });
  }

  if (isCallable(NativeRequest)) {
    var RequestConstructor = function Request(input /* , init */) {
      anInstance(this, RequestPrototype);
      return new NativeRequest(input, arguments.length > 1 ? wrapRequestOptions(arguments[1]) : {});
    };

    RequestPrototype.constructor = RequestConstructor;
    RequestConstructor.prototype = RequestPrototype;

    _export({ global: true, constructor: true, dontCallGetSet: true, forced: true }, {
      Request: RequestConstructor
    });
  }
}

var engineIsNode = classofRaw(global_1.process) == 'process';

var SPECIES = wellKnownSymbol('species');

var setSpecies = function (CONSTRUCTOR_NAME) {
  var Constructor = getBuiltIn(CONSTRUCTOR_NAME);
  var defineProperty = objectDefineProperty.f;

  if (descriptors && Constructor && !Constructor[SPECIES]) {
    defineProperty(Constructor, SPECIES, {
      configurable: true,
      get: function () { return this; }
    });
  }
};

var noop = function () { /* empty */ };
var empty = [];
var construct = getBuiltIn('Reflect', 'construct');
var constructorRegExp = /^\s*(?:class|function)\b/;
var exec = functionUncurryThis(constructorRegExp.exec);
var INCORRECT_TO_STRING = !constructorRegExp.exec(noop);

var isConstructorModern = function isConstructor(argument) {
  if (!isCallable(argument)) return false;
  try {
    construct(noop, empty, argument);
    return true;
  } catch (error) {
    return false;
  }
};

var isConstructorLegacy = function isConstructor(argument) {
  if (!isCallable(argument)) return false;
  switch (classof(argument)) {
    case 'AsyncFunction':
    case 'GeneratorFunction':
    case 'AsyncGeneratorFunction': return false;
  }
  try {
    // we can't check .prototype since constructors produced by .bind haven't it
    // `Function#toString` throws on some built-it function in some legacy engines
    // (for example, `DOMQuad` and similar in FF41-)
    return INCORRECT_TO_STRING || !!exec(constructorRegExp, inspectSource(argument));
  } catch (error) {
    return true;
  }
};

isConstructorLegacy.sham = true;

// `IsConstructor` abstract operation
// https://tc39.es/ecma262/#sec-isconstructor
var isConstructor = !construct || fails(function () {
  var called;
  return isConstructorModern(isConstructorModern.call)
    || !isConstructorModern(Object)
    || !isConstructorModern(function () { called = true; })
    || called;
}) ? isConstructorLegacy : isConstructorModern;

var $TypeError$a = TypeError;

// `Assert: IsConstructor(argument) is true`
var aConstructor = function (argument) {
  if (isConstructor(argument)) return argument;
  throw $TypeError$a(tryToString(argument) + ' is not a constructor');
};

var SPECIES$1 = wellKnownSymbol('species');

// `SpeciesConstructor` abstract operation
// https://tc39.es/ecma262/#sec-speciesconstructor
var speciesConstructor = function (O, defaultConstructor) {
  var C = anObject(O).constructor;
  var S;
  return C === undefined || isNullOrUndefined(S = anObject(C)[SPECIES$1]) ? defaultConstructor : aConstructor(S);
};

var FunctionPrototype$2 = Function.prototype;
var apply = FunctionPrototype$2.apply;
var call$2 = FunctionPrototype$2.call;

// eslint-disable-next-line es/no-reflect -- safe
var functionApply = typeof Reflect == 'object' && Reflect.apply || (functionBindNative ? call$2.bind(apply) : function () {
  return call$2.apply(apply, arguments);
});

var arraySlice = functionUncurryThis([].slice);

var engineIsIos = /(?:ipad|iphone|ipod).*applewebkit/i.test(engineUserAgent);

var set$1 = global_1.setImmediate;
var clear = global_1.clearImmediate;
var process$2 = global_1.process;
var Dispatch = global_1.Dispatch;
var Function$1 = global_1.Function;
var MessageChannel = global_1.MessageChannel;
var String$1 = global_1.String;
var counter = 0;
var queue = {};
var ONREADYSTATECHANGE = 'onreadystatechange';
var $location, defer, channel, port;

try {
  // Deno throws a ReferenceError on `location` access without `--location` flag
  $location = global_1.location;
} catch (error) { /* empty */ }

var run = function (id) {
  if (hasOwnProperty_1(queue, id)) {
    var fn = queue[id];
    delete queue[id];
    fn();
  }
};

var runner = function (id) {
  return function () {
    run(id);
  };
};

var listener = function (event) {
  run(event.data);
};

var post = function (id) {
  // old engines have not location.origin
  global_1.postMessage(String$1(id), $location.protocol + '//' + $location.host);
};

// Node.js 0.9+ & IE10+ has setImmediate, otherwise:
if (!set$1 || !clear) {
  set$1 = function setImmediate(handler) {
    validateArgumentsLength(arguments.length, 1);
    var fn = isCallable(handler) ? handler : Function$1(handler);
    var args = arraySlice(arguments, 1);
    queue[++counter] = function () {
      functionApply(fn, undefined, args);
    };
    defer(counter);
    return counter;
  };
  clear = function clearImmediate(id) {
    delete queue[id];
  };
  // Node.js 0.8-
  if (engineIsNode) {
    defer = function (id) {
      process$2.nextTick(runner(id));
    };
  // Sphere (JS game engine) Dispatch API
  } else if (Dispatch && Dispatch.now) {
    defer = function (id) {
      Dispatch.now(runner(id));
    };
  // Browsers with MessageChannel, includes WebWorkers
  // except iOS - https://github.com/zloirock/core-js/issues/624
  } else if (MessageChannel && !engineIsIos) {
    channel = new MessageChannel();
    port = channel.port2;
    channel.port1.onmessage = listener;
    defer = functionBindContext(port.postMessage, port);
  // Browsers with postMessage, skip WebWorkers
  // IE8 has postMessage, but it's sync & typeof its postMessage is 'object'
  } else if (
    global_1.addEventListener &&
    isCallable(global_1.postMessage) &&
    !global_1.importScripts &&
    $location && $location.protocol !== 'file:' &&
    !fails(post)
  ) {
    defer = post;
    global_1.addEventListener('message', listener, false);
  // IE8-
  } else if (ONREADYSTATECHANGE in documentCreateElement('script')) {
    defer = function (id) {
      html.appendChild(documentCreateElement('script'))[ONREADYSTATECHANGE] = function () {
        html.removeChild(this);
        run(id);
      };
    };
  // Rest old browsers
  } else {
    defer = function (id) {
      setTimeout(runner(id), 0);
    };
  }
}

var task = {
  set: set$1,
  clear: clear
};

var engineIsIosPebble = /ipad|iphone|ipod/i.test(engineUserAgent) && global_1.Pebble !== undefined;

var engineIsWebosWebkit = /web0s(?!.*chrome)/i.test(engineUserAgent);

var getOwnPropertyDescriptor$3 = objectGetOwnPropertyDescriptor.f;
var macrotask = task.set;





var MutationObserver = global_1.MutationObserver || global_1.WebKitMutationObserver;
var document$2 = global_1.document;
var process$3 = global_1.process;
var Promise$1 = global_1.Promise;
// Node.js 11 shows ExperimentalWarning on getting `queueMicrotask`
var queueMicrotaskDescriptor = getOwnPropertyDescriptor$3(global_1, 'queueMicrotask');
var queueMicrotask = queueMicrotaskDescriptor && queueMicrotaskDescriptor.value;

var flush, head, last, notify, toggle, node, promise, then;

// modern engines have queueMicrotask method
if (!queueMicrotask) {
  flush = function () {
    var parent, fn;
    if (engineIsNode && (parent = process$3.domain)) parent.exit();
    while (head) {
      fn = head.fn;
      head = head.next;
      try {
        fn();
      } catch (error) {
        if (head) notify();
        else last = undefined;
        throw error;
      }
    } last = undefined;
    if (parent) parent.enter();
  };

  // browsers with MutationObserver, except iOS - https://github.com/zloirock/core-js/issues/339
  // also except WebOS Webkit https://github.com/zloirock/core-js/issues/898
  if (!engineIsIos && !engineIsNode && !engineIsWebosWebkit && MutationObserver && document$2) {
    toggle = true;
    node = document$2.createTextNode('');
    new MutationObserver(flush).observe(node, { characterData: true });
    notify = function () {
      node.data = toggle = !toggle;
    };
  // environments with maybe non-completely correct, but existent Promise
  } else if (!engineIsIosPebble && Promise$1 && Promise$1.resolve) {
    // Promise.resolve without an argument throws an error in LG WebOS 2
    promise = Promise$1.resolve(undefined);
    // workaround of WebKit ~ iOS Safari 10.1 bug
    promise.constructor = Promise$1;
    then = functionBindContext(promise.then, promise);
    notify = function () {
      then(flush);
    };
  // Node.js without promises
  } else if (engineIsNode) {
    notify = function () {
      process$3.nextTick(flush);
    };
  // for other environments - macrotask based on:
  // - setImmediate
  // - MessageChannel
  // - window.postMessage
  // - onreadystatechange
  // - setTimeout
  } else {
    // strange IE + webpack dev server bug - use .bind(global)
    macrotask = functionBindContext(macrotask, global_1);
    notify = function () {
      macrotask(flush);
    };
  }
}

var microtask = queueMicrotask || function (fn) {
  var task = { fn: fn, next: undefined };
  if (last) last.next = task;
  if (!head) {
    head = task;
    notify();
  } last = task;
};

var hostReportErrors = function (a, b) {
  var console = global_1.console;
  if (console && console.error) {
    arguments.length == 1 ? console.error(a) : console.error(a, b);
  }
};

var perform = function (exec) {
  try {
    return { error: false, value: exec() };
  } catch (error) {
    return { error: true, value: error };
  }
};

var Queue = function () {
  this.head = null;
  this.tail = null;
};

Queue.prototype = {
  add: function (item) {
    var entry = { item: item, next: null };
    if (this.head) this.tail.next = entry;
    else this.head = entry;
    this.tail = entry;
  },
  get: function () {
    var entry = this.head;
    if (entry) {
      this.head = entry.next;
      if (this.tail === entry) this.tail = null;
      return entry.item;
    }
  }
};

var queue$1 = Queue;

var promiseNativeConstructor = global_1.Promise;

/* global Deno -- Deno case */
var engineIsDeno = typeof Deno == 'object' && Deno && typeof Deno.version == 'object';

var engineIsBrowser = !engineIsDeno && !engineIsNode
  && typeof window == 'object'
  && typeof document == 'object';

var NativePromisePrototype = promiseNativeConstructor && promiseNativeConstructor.prototype;
var SPECIES$2 = wellKnownSymbol('species');
var SUBCLASSING = false;
var NATIVE_PROMISE_REJECTION_EVENT = isCallable(global_1.PromiseRejectionEvent);

var FORCED_PROMISE_CONSTRUCTOR = isForced_1('Promise', function () {
  var PROMISE_CONSTRUCTOR_SOURCE = inspectSource(promiseNativeConstructor);
  var GLOBAL_CORE_JS_PROMISE = PROMISE_CONSTRUCTOR_SOURCE !== String(promiseNativeConstructor);
  // V8 6.6 (Node 10 and Chrome 66) have a bug with resolving custom thenables
  // https://bugs.chromium.org/p/chromium/issues/detail?id=830565
  // We can't detect it synchronously, so just check versions
  if (!GLOBAL_CORE_JS_PROMISE && engineV8Version === 66) return true;
  // We can't use @@species feature detection in V8 since it causes
  // deoptimization and performance degradation
  // https://github.com/zloirock/core-js/issues/679
  if (!engineV8Version || engineV8Version < 51 || !/native code/.test(PROMISE_CONSTRUCTOR_SOURCE)) {
    // Detect correctness of subclassing with @@species support
    var promise = new promiseNativeConstructor(function (resolve) { resolve(1); });
    var FakePromise = function (exec) {
      exec(function () { /* empty */ }, function () { /* empty */ });
    };
    var constructor = promise.constructor = {};
    constructor[SPECIES$2] = FakePromise;
    SUBCLASSING = promise.then(function () { /* empty */ }) instanceof FakePromise;
    if (!SUBCLASSING) return true;
  // Unhandled rejections tracking support, NodeJS Promise without it fails @@species test
  } return !GLOBAL_CORE_JS_PROMISE && (engineIsBrowser || engineIsDeno) && !NATIVE_PROMISE_REJECTION_EVENT;
});

var promiseConstructorDetection = {
  CONSTRUCTOR: FORCED_PROMISE_CONSTRUCTOR,
  REJECTION_EVENT: NATIVE_PROMISE_REJECTION_EVENT,
  SUBCLASSING: SUBCLASSING
};

var $TypeError$b = TypeError;

var PromiseCapability = function (C) {
  var resolve, reject;
  this.promise = new C(function ($$resolve, $$reject) {
    if (resolve !== undefined || reject !== undefined) throw $TypeError$b('Bad Promise constructor');
    resolve = $$resolve;
    reject = $$reject;
  });
  this.resolve = aCallable(resolve);
  this.reject = aCallable(reject);
};

// `NewPromiseCapability` abstract operation
// https://tc39.es/ecma262/#sec-newpromisecapability
var f$6 = function (C) {
  return new PromiseCapability(C);
};

var newPromiseCapability = {
	f: f$6
};

var task$1 = task.set;









var PROMISE = 'Promise';
var FORCED_PROMISE_CONSTRUCTOR$1 = promiseConstructorDetection.CONSTRUCTOR;
var NATIVE_PROMISE_REJECTION_EVENT$1 = promiseConstructorDetection.REJECTION_EVENT;
var NATIVE_PROMISE_SUBCLASSING = promiseConstructorDetection.SUBCLASSING;
var getInternalPromiseState = internalState.getterFor(PROMISE);
var setInternalState$2 = internalState.set;
var NativePromisePrototype$1 = promiseNativeConstructor && promiseNativeConstructor.prototype;
var PromiseConstructor = promiseNativeConstructor;
var PromisePrototype = NativePromisePrototype$1;
var TypeError$3 = global_1.TypeError;
var document$3 = global_1.document;
var process$4 = global_1.process;
var newPromiseCapability$1 = newPromiseCapability.f;
var newGenericPromiseCapability = newPromiseCapability$1;

var DISPATCH_EVENT = !!(document$3 && document$3.createEvent && global_1.dispatchEvent);
var UNHANDLED_REJECTION = 'unhandledrejection';
var REJECTION_HANDLED = 'rejectionhandled';
var PENDING = 0;
var FULFILLED = 1;
var REJECTED = 2;
var HANDLED = 1;
var UNHANDLED = 2;

var Internal, OwnPromiseCapability, PromiseWrapper, nativeThen;

// helpers
var isThenable = function (it) {
  var then;
  return isObject(it) && isCallable(then = it.then) ? then : false;
};

var callReaction = function (reaction, state) {
  var value = state.value;
  var ok = state.state == FULFILLED;
  var handler = ok ? reaction.ok : reaction.fail;
  var resolve = reaction.resolve;
  var reject = reaction.reject;
  var domain = reaction.domain;
  var result, then, exited;
  try {
    if (handler) {
      if (!ok) {
        if (state.rejection === UNHANDLED) onHandleUnhandled(state);
        state.rejection = HANDLED;
      }
      if (handler === true) result = value;
      else {
        if (domain) domain.enter();
        result = handler(value); // can throw
        if (domain) {
          domain.exit();
          exited = true;
        }
      }
      if (result === reaction.promise) {
        reject(TypeError$3('Promise-chain cycle'));
      } else if (then = isThenable(result)) {
        functionCall(then, result, resolve, reject);
      } else resolve(result);
    } else reject(value);
  } catch (error) {
    if (domain && !exited) domain.exit();
    reject(error);
  }
};

var notify$1 = function (state, isReject) {
  if (state.notified) return;
  state.notified = true;
  microtask(function () {
    var reactions = state.reactions;
    var reaction;
    while (reaction = reactions.get()) {
      callReaction(reaction, state);
    }
    state.notified = false;
    if (isReject && !state.rejection) onUnhandled(state);
  });
};

var dispatchEvent = function (name, promise, reason) {
  var event, handler;
  if (DISPATCH_EVENT) {
    event = document$3.createEvent('Event');
    event.promise = promise;
    event.reason = reason;
    event.initEvent(name, false, true);
    global_1.dispatchEvent(event);
  } else event = { promise: promise, reason: reason };
  if (!NATIVE_PROMISE_REJECTION_EVENT$1 && (handler = global_1['on' + name])) handler(event);
  else if (name === UNHANDLED_REJECTION) hostReportErrors('Unhandled promise rejection', reason);
};

var onUnhandled = function (state) {
  functionCall(task$1, global_1, function () {
    var promise = state.facade;
    var value = state.value;
    var IS_UNHANDLED = isUnhandled(state);
    var result;
    if (IS_UNHANDLED) {
      result = perform(function () {
        if (engineIsNode) {
          process$4.emit('unhandledRejection', value, promise);
        } else dispatchEvent(UNHANDLED_REJECTION, promise, value);
      });
      // Browsers should not trigger `rejectionHandled` event if it was handled here, NodeJS - should
      state.rejection = engineIsNode || isUnhandled(state) ? UNHANDLED : HANDLED;
      if (result.error) throw result.value;
    }
  });
};

var isUnhandled = function (state) {
  return state.rejection !== HANDLED && !state.parent;
};

var onHandleUnhandled = function (state) {
  functionCall(task$1, global_1, function () {
    var promise = state.facade;
    if (engineIsNode) {
      process$4.emit('rejectionHandled', promise);
    } else dispatchEvent(REJECTION_HANDLED, promise, state.value);
  });
};

var bind$1 = function (fn, state, unwrap) {
  return function (value) {
    fn(state, value, unwrap);
  };
};

var internalReject = function (state, value, unwrap) {
  if (state.done) return;
  state.done = true;
  if (unwrap) state = unwrap;
  state.value = value;
  state.state = REJECTED;
  notify$1(state, true);
};

var internalResolve = function (state, value, unwrap) {
  if (state.done) return;
  state.done = true;
  if (unwrap) state = unwrap;
  try {
    if (state.facade === value) throw TypeError$3("Promise can't be resolved itself");
    var then = isThenable(value);
    if (then) {
      microtask(function () {
        var wrapper = { done: false };
        try {
          functionCall(then, value,
            bind$1(internalResolve, wrapper, state),
            bind$1(internalReject, wrapper, state)
          );
        } catch (error) {
          internalReject(wrapper, error, state);
        }
      });
    } else {
      state.value = value;
      state.state = FULFILLED;
      notify$1(state, false);
    }
  } catch (error) {
    internalReject({ done: false }, error, state);
  }
};

// constructor polyfill
if (FORCED_PROMISE_CONSTRUCTOR$1) {
  // 25.4.3.1 Promise(executor)
  PromiseConstructor = function Promise(executor) {
    anInstance(this, PromisePrototype);
    aCallable(executor);
    functionCall(Internal, this);
    var state = getInternalPromiseState(this);
    try {
      executor(bind$1(internalResolve, state), bind$1(internalReject, state));
    } catch (error) {
      internalReject(state, error);
    }
  };

  PromisePrototype = PromiseConstructor.prototype;

  // eslint-disable-next-line no-unused-vars -- required for `.length`
  Internal = function Promise(executor) {
    setInternalState$2(this, {
      type: PROMISE,
      done: false,
      notified: false,
      parent: false,
      reactions: new queue$1(),
      rejection: false,
      state: PENDING,
      value: undefined
    });
  };

  // `Promise.prototype.then` method
  // https://tc39.es/ecma262/#sec-promise.prototype.then
  Internal.prototype = defineBuiltIn(PromisePrototype, 'then', function then(onFulfilled, onRejected) {
    var state = getInternalPromiseState(this);
    var reaction = newPromiseCapability$1(speciesConstructor(this, PromiseConstructor));
    state.parent = true;
    reaction.ok = isCallable(onFulfilled) ? onFulfilled : true;
    reaction.fail = isCallable(onRejected) && onRejected;
    reaction.domain = engineIsNode ? process$4.domain : undefined;
    if (state.state == PENDING) state.reactions.add(reaction);
    else microtask(function () {
      callReaction(reaction, state);
    });
    return reaction.promise;
  });

  OwnPromiseCapability = function () {
    var promise = new Internal();
    var state = getInternalPromiseState(promise);
    this.promise = promise;
    this.resolve = bind$1(internalResolve, state);
    this.reject = bind$1(internalReject, state);
  };

  newPromiseCapability.f = newPromiseCapability$1 = function (C) {
    return C === PromiseConstructor || C === PromiseWrapper
      ? new OwnPromiseCapability(C)
      : newGenericPromiseCapability(C);
  };

  if ( isCallable(promiseNativeConstructor) && NativePromisePrototype$1 !== Object.prototype) {
    nativeThen = NativePromisePrototype$1.then;

    if (!NATIVE_PROMISE_SUBCLASSING) {
      // make `Promise#then` return a polyfilled `Promise` for native promise-based APIs
      defineBuiltIn(NativePromisePrototype$1, 'then', function then(onFulfilled, onRejected) {
        var that = this;
        return new PromiseConstructor(function (resolve, reject) {
          functionCall(nativeThen, that, resolve, reject);
        }).then(onFulfilled, onRejected);
      // https://github.com/zloirock/core-js/issues/640
      }, { unsafe: true });
    }

    // make `.constructor === Promise` work for native promise-based APIs
    try {
      delete NativePromisePrototype$1.constructor;
    } catch (error) { /* empty */ }

    // make `instanceof Promise` work for native promise-based APIs
    if (objectSetPrototypeOf) {
      objectSetPrototypeOf(NativePromisePrototype$1, PromisePrototype);
    }
  }
}

_export({ global: true, constructor: true, wrap: true, forced: FORCED_PROMISE_CONSTRUCTOR$1 }, {
  Promise: PromiseConstructor
});

setToStringTag(PromiseConstructor, PROMISE, false);
setSpecies(PROMISE);

var ITERATOR$5 = wellKnownSymbol('iterator');
var ArrayPrototype$1 = Array.prototype;

// check on default Array iterator
var isArrayIteratorMethod = function (it) {
  return it !== undefined && (iterators.Array === it || ArrayPrototype$1[ITERATOR$5] === it);
};

var iteratorClose = function (iterator, kind, value) {
  var innerResult, innerError;
  anObject(iterator);
  try {
    innerResult = getMethod(iterator, 'return');
    if (!innerResult) {
      if (kind === 'throw') throw value;
      return value;
    }
    innerResult = functionCall(innerResult, iterator);
  } catch (error) {
    innerError = true;
    innerResult = error;
  }
  if (kind === 'throw') throw value;
  if (innerError) throw innerResult;
  anObject(innerResult);
  return value;
};

var $TypeError$c = TypeError;

var Result = function (stopped, result) {
  this.stopped = stopped;
  this.result = result;
};

var ResultPrototype = Result.prototype;

var iterate = function (iterable, unboundFunction, options) {
  var that = options && options.that;
  var AS_ENTRIES = !!(options && options.AS_ENTRIES);
  var IS_RECORD = !!(options && options.IS_RECORD);
  var IS_ITERATOR = !!(options && options.IS_ITERATOR);
  var INTERRUPTED = !!(options && options.INTERRUPTED);
  var fn = functionBindContext(unboundFunction, that);
  var iterator, iterFn, index, length, result, next, step;

  var stop = function (condition) {
    if (iterator) iteratorClose(iterator, 'normal', condition);
    return new Result(true, condition);
  };

  var callFn = function (value) {
    if (AS_ENTRIES) {
      anObject(value);
      return INTERRUPTED ? fn(value[0], value[1], stop) : fn(value[0], value[1]);
    } return INTERRUPTED ? fn(value, stop) : fn(value);
  };

  if (IS_RECORD) {
    iterator = iterable.iterator;
  } else if (IS_ITERATOR) {
    iterator = iterable;
  } else {
    iterFn = getIteratorMethod(iterable);
    if (!iterFn) throw $TypeError$c(tryToString(iterable) + ' is not iterable');
    // optimisation for array iterators
    if (isArrayIteratorMethod(iterFn)) {
      for (index = 0, length = lengthOfArrayLike(iterable); length > index; index++) {
        result = callFn(iterable[index]);
        if (result && objectIsPrototypeOf(ResultPrototype, result)) return result;
      } return new Result(false);
    }
    iterator = getIterator(iterable, iterFn);
  }

  next = IS_RECORD ? iterable.next : iterator.next;
  while (!(step = functionCall(next, iterator)).done) {
    try {
      result = callFn(step.value);
    } catch (error) {
      iteratorClose(iterator, 'throw', error);
    }
    if (typeof result == 'object' && result && objectIsPrototypeOf(ResultPrototype, result)) return result;
  } return new Result(false);
};

var ITERATOR$6 = wellKnownSymbol('iterator');
var SAFE_CLOSING = false;

try {
  var called = 0;
  var iteratorWithReturn = {
    next: function () {
      return { done: !!called++ };
    },
    'return': function () {
      SAFE_CLOSING = true;
    }
  };
  iteratorWithReturn[ITERATOR$6] = function () {
    return this;
  };
  // eslint-disable-next-line es/no-array-from, no-throw-literal -- required for testing
  Array.from(iteratorWithReturn, function () { throw 2; });
} catch (error) { /* empty */ }

var checkCorrectnessOfIteration = function (exec, SKIP_CLOSING) {
  if (!SKIP_CLOSING && !SAFE_CLOSING) return false;
  var ITERATION_SUPPORT = false;
  try {
    var object = {};
    object[ITERATOR$6] = function () {
      return {
        next: function () {
          return { done: ITERATION_SUPPORT = true };
        }
      };
    };
    exec(object);
  } catch (error) { /* empty */ }
  return ITERATION_SUPPORT;
};

var FORCED_PROMISE_CONSTRUCTOR$2 = promiseConstructorDetection.CONSTRUCTOR;

var promiseStaticsIncorrectIteration = FORCED_PROMISE_CONSTRUCTOR$2 || !checkCorrectnessOfIteration(function (iterable) {
  promiseNativeConstructor.all(iterable).then(undefined, function () { /* empty */ });
});

// `Promise.all` method
// https://tc39.es/ecma262/#sec-promise.all
_export({ target: 'Promise', stat: true, forced: promiseStaticsIncorrectIteration }, {
  all: function all(iterable) {
    var C = this;
    var capability = newPromiseCapability.f(C);
    var resolve = capability.resolve;
    var reject = capability.reject;
    var result = perform(function () {
      var $promiseResolve = aCallable(C.resolve);
      var values = [];
      var counter = 0;
      var remaining = 1;
      iterate(iterable, function (promise) {
        var index = counter++;
        var alreadyCalled = false;
        remaining++;
        functionCall($promiseResolve, C, promise).then(function (value) {
          if (alreadyCalled) return;
          alreadyCalled = true;
          values[index] = value;
          --remaining || resolve(values);
        }, reject);
      });
      --remaining || resolve(values);
    });
    if (result.error) reject(result.value);
    return capability.promise;
  }
});

var FORCED_PROMISE_CONSTRUCTOR$3 = promiseConstructorDetection.CONSTRUCTOR;





var NativePromisePrototype$2 = promiseNativeConstructor && promiseNativeConstructor.prototype;

// `Promise.prototype.catch` method
// https://tc39.es/ecma262/#sec-promise.prototype.catch
_export({ target: 'Promise', proto: true, forced: FORCED_PROMISE_CONSTRUCTOR$3, real: true }, {
  'catch': function (onRejected) {
    return this.then(undefined, onRejected);
  }
});

// makes sure that native promise-based APIs `Promise#catch` properly works with patched `Promise#then`
if ( isCallable(promiseNativeConstructor)) {
  var method = getBuiltIn('Promise').prototype['catch'];
  if (NativePromisePrototype$2['catch'] !== method) {
    defineBuiltIn(NativePromisePrototype$2, 'catch', method, { unsafe: true });
  }
}

// `Promise.race` method
// https://tc39.es/ecma262/#sec-promise.race
_export({ target: 'Promise', stat: true, forced: promiseStaticsIncorrectIteration }, {
  race: function race(iterable) {
    var C = this;
    var capability = newPromiseCapability.f(C);
    var reject = capability.reject;
    var result = perform(function () {
      var $promiseResolve = aCallable(C.resolve);
      iterate(iterable, function (promise) {
        functionCall($promiseResolve, C, promise).then(capability.resolve, reject);
      });
    });
    if (result.error) reject(result.value);
    return capability.promise;
  }
});

var FORCED_PROMISE_CONSTRUCTOR$4 = promiseConstructorDetection.CONSTRUCTOR;

// `Promise.reject` method
// https://tc39.es/ecma262/#sec-promise.reject
_export({ target: 'Promise', stat: true, forced: FORCED_PROMISE_CONSTRUCTOR$4 }, {
  reject: function reject(r) {
    var capability = newPromiseCapability.f(this);
    functionCall(capability.reject, undefined, r);
    return capability.promise;
  }
});

var promiseResolve = function (C, x) {
  anObject(C);
  if (isObject(x) && x.constructor === C) return x;
  var promiseCapability = newPromiseCapability.f(C);
  var resolve = promiseCapability.resolve;
  resolve(x);
  return promiseCapability.promise;
};

var FORCED_PROMISE_CONSTRUCTOR$5 = promiseConstructorDetection.CONSTRUCTOR;


var PromiseConstructorWrapper = getBuiltIn('Promise');

// `Promise.resolve` method
// https://tc39.es/ecma262/#sec-promise.resolve
_export({ target: 'Promise', stat: true, forced:  FORCED_PROMISE_CONSTRUCTOR$5 }, {
  resolve: function resolve(x) {
    return promiseResolve( this, x);
  }
});

/*
object-assign
(c) Sindre Sorhus
@license MIT
*/
/* eslint-disable no-unused-vars */

var getOwnPropertySymbols = Object.getOwnPropertySymbols;
var hasOwnProperty$1 = Object.prototype.hasOwnProperty;
var propIsEnumerable = Object.prototype.propertyIsEnumerable;

function toObject$1(val) {
  if (val === null || val === undefined) {
    throw new TypeError('Object.assign cannot be called with null or undefined');
  }

  return Object(val);
}

function shouldUseNative() {
  try {
    if (!Object.assign) {
      return false;
    } // Detect buggy property enumeration order in older V8 versions.
    // https://bugs.chromium.org/p/v8/issues/detail?id=4118


    var test1 = new String('abc'); // eslint-disable-line no-new-wrappers

    test1[5] = 'de';

    if (Object.getOwnPropertyNames(test1)[0] === '5') {
      return false;
    } // https://bugs.chromium.org/p/v8/issues/detail?id=3056


    var test2 = {};

    for (var i = 0; i < 10; i++) {
      test2['_' + String.fromCharCode(i)] = i;
    }

    var order2 = Object.getOwnPropertyNames(test2).map(function (n) {
      return test2[n];
    });

    if (order2.join('') !== '0123456789') {
      return false;
    } // https://bugs.chromium.org/p/v8/issues/detail?id=3056


    var test3 = {};
    'abcdefghijklmnopqrst'.split('').forEach(function (letter) {
      test3[letter] = letter;
    });

    if (Object.keys(Object.assign({}, test3)).join('') !== 'abcdefghijklmnopqrst') {
      return false;
    }

    return true;
  } catch (err) {
    // We don't expect any of the above to throw, but better to be safe.
    return false;
  }
}

var objectAssign = shouldUseNative() ? Object.assign : function (target, source) {
  var from;
  var to = toObject$1(target);
  var symbols;

  for (var s = 1; s < arguments.length; s++) {
    from = Object(arguments[s]);

    for (var key in from) {
      if (hasOwnProperty$1.call(from, key)) {
        to[key] = from[key];
      }
    }

    if (getOwnPropertySymbols) {
      symbols = getOwnPropertySymbols(from);

      for (var i = 0; i < symbols.length; i++) {
        if (propIsEnumerable.call(from, symbols[i])) {
          to[symbols[i]] = from[symbols[i]];
        }
      }
    }
  }

  return to;
};

var reactorObjectAssign = objectAssign;

/**
 * Checks if `value` is `null` or `undefined`.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is nullish, else `false`.
 * @example
 *
 * _.isNil(null);
 * // => true
 *
 * _.isNil(void 0);
 * // => true
 *
 * _.isNil(NaN);
 * // => false
 */
function isNil(value) {
  return value == null;
}

/**
 * Checks if `value` is classified as an `Array` object.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an array, else `false`.
 * @example
 *
 * _.isArray([1, 2, 3]);
 * // => true
 *
 * _.isArray(document.body.children);
 * // => false
 *
 * _.isArray('abc');
 * // => false
 *
 * _.isArray(_.noop);
 * // => false
 */
const {
  isArray
} = Array;

const {
  prototype: objectProto
} = Object;
const {
  toString: nativeObjectToString
} = objectProto;

function objectToString(value) {
  return nativeObjectToString.call(value);
}
/**
 * The base implementation of `getTag` without fallbacks for buggy environments.
 *
 * @private
 * @param {*} value The value to query.
 * @returns {string} Returns the `toStringTag`.
 */


function baseGetTag(value) {
  return objectToString(value);
}

/**
 * Checks if `value` is the
 * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)
 * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an object, else `false`.
 * @example
 *
 * _.isObject({});
 * // => true
 *
 * _.isObject([1, 2, 3]);
 * // => true
 *
 * _.isObject(_.noop);
 * // => true
 *
 * _.isObject(null);
 * // => false
 */
function isObject$1(value) {
  const type = typeof value;
  /* eslint-disable */

  const notNull = value != null;
  /* eslint-enable */

  return notNull && (type === "object" || type === "function");
}

/** `Object#toString` result references. */

const funcTag = "[object Function]";
/**
 * Checks if `value` is classified as a `Function` object.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a function, else `false`.
 * @example
 *
 * _.isFunction(_);
 * // => true
 *
 * _.isFunction(/abc/);
 * // => false
 */

function isFunction(value) {
  if (!isObject$1(value)) {
    return false;
  } // The use of `Object#toString` avoids issues with the `typeof` operator
  // in Safari 9 which returns 'object' for typed arrays and other constructors.


  return baseGetTag(value) === funcTag;
}

/**
 * This method returns the first argument it receives.
 *
 * @static
 * @since 0.1.0
 * @memberOf _
 * @category Util
 * @param {*} value Any value.
 * @returns {*} Returns `value`.
 * @example
 *
 * var object = { 'a': 1 };
 *
 * console.log(_.identity(object) === object);
 * // => true
 */
function identity(value) {
  return value;
}

/**
 * Casts `value` to `identity` if it's not a function.
 *
 * @private
 * @param {*} value The value to inspect.
 * @returns {Function} Returns cast function.
 */

function castFunction(value) {
  return isFunction(value) ? value : identity;
}

/**
 * Creates an array of the own enumerable property names of `object`.
 *
 * **Note:** Non-object values are coerced to objects. See the
 * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)
 * for more details.
 *
 * @static
 * @since 0.1.0
 * @memberOf _
 * @category Object
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property names.
 * @example
 *
 * function Foo() {
 *   this.a = 1;
 *   this.b = 2;
 * }
 *
 * Foo.prototype.c = 3;
 *
 * _.keys(new Foo);
 * // => ['a', 'b'] (iteration order is not guaranteed)
 *
 * _.keys('hi');
 * // => ['0', '1']
 */

function keys$1(object) {
  if (isNil(object)) {
    return [];
  }

  return Object.keys(object);
}

const arrayEach = (iteratee, collection) => collection.forEach(iteratee);

const baseEach = (iteratee, collection) => {
  arrayEach(key => iteratee(collection[key], key), keys$1(collection));
};

/**
 * Flattens `array` a single level deep.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Array
 * @param {Array} array The array to flatten.
 * @returns {Array} Returns the new flattened array.
 * @example
 *
 * _.flatten([1, [2, [3, [4]], 5]]);
 * // => [1, 2, [3, [4]], 5]
 */

function flatten(array) {
  if (isNil(array)) {
    return [];
  }
  /* eslint-disable */


  return [].concat.apply([], array);
  /* eslint-enable */
}

/**
 * Checks if `value` is object-like. A value is object-like if it's not `null`
 * and has a `typeof` result of "object".
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is object-like, else `false`.
 * @example
 *
 * _.isObjectLike({});
 * // => true
 *
 * _.isObjectLike([1, 2, 3]);
 * // => true
 *
 * _.isObjectLike(_.noop);
 * // => false
 *
 * _.isObjectLike(null);
 * // => false
 */
function isObjectLike(value) {
  /* eslint-disable */
  const notNull = value != null;
  /* eslint-enable */

  return notNull && typeof value === "object";
}

/** `Object#toString` result references. */

const stringTag = "[object String]";
/**
 * Checks if `value` is classified as a `String` primitive or object.
 *
 * @static
 * @since 0.1.0
 * @memberOf _
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a string, else `false`.
 * @example
 *
 * _.isString('abc');
 * // => true
 *
 * _.isString(1);
 * // => false
 */

function isString(value) {
  return typeof value === "string" || !isArray(value) && isObjectLike(value) && baseGetTag(value) === stringTag;
}

/** Used as references for various `Number` constants. */
const MAX_SAFE_INTEGER = 9007199254740991;
/**
 * Checks if `value` is a valid array-like length.
 *
 * **Note:** This method is loosely based on
 * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.
 * @example
 *
 * _.isLength(3);
 * // => true
 *
 * _.isLength(Number.MIN_VALUE);
 * // => false
 *
 * _.isLength(Infinity);
 * // => false
 *
 * _.isLength('3');
 * // => false
 */

function isLength(value) {
  return typeof value === "number" && value > -1 && value % 1 === 0 && value <= MAX_SAFE_INTEGER;
}

/**
 * Checks if `value` is array-like. A value is considered array-like if it's
 * not a function and has a `value.length` that's an integer greater than or
 * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is array-like, else `false`.
 * @example
 *
 * _.isArrayLike([1, 2, 3]);
 * // => true
 *
 * _.isArrayLike(document.body.children);
 * // => true
 *
 * _.isArrayLike('abc');
 * // => true
 *
 * _.isArrayLike(_.noop);
 * // => false
 */

function isArrayLike(value) {
  return value != null && isLength(value.length) && !isFunction(value);
}

const arrayMap = (iteratee, collection) => collection.map(iteratee);

function baseValues(props, object) {
  return arrayMap(key => object[key], props);
}

function copyArray(source) {
  let index = 0;
  const {
    length
  } = source;
  const array = Array(length);

  while (index < length) {
    array[index] = source[index];
    index += 1;
  }

  return array;
}

function stringToArray(str) {
  return str.split("");
}
/**
 * Converts `value` to an array.
 *
 * @static
 * @since 0.1.0
 * @memberOf _
 * @category Lang
 * @param {*} value The value to convert.
 * @returns {Array} Returns the converted array.
 * @example
 *
 * _.toArray({ 'a': 1, 'b': 2 });
 * // => [1, 2]
 *
 * _.toArray('abc');
 * // => ['a', 'b', 'c']
 *
 * _.toArray(1);
 * // => []
 *
 * _.toArray(null);
 * // => []
 */


function toArray(value) {
  if (isNil(value)) {
    return [];
  }

  if (isArrayLike(value)) {
    return isString(value) ? stringToArray(value) : copyArray(value);
  }

  return baseValues(keys$1(value), value);
}

/**
 * Checks if `value` is in `collection`.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Collection
 * @param {Array|Object} collection The collection to inspect.
 * @param {*} value The value to search for.
 * @returns {boolean} Returns `true` if `value` is found, else `false`.
 * @example
 *
 * _.includes([1, 2, 3], 1);
 * // => true
 *
 * _.includes([1, 2, 3], 1, 2);
 * // => false
 *
 * _.includes({ 'a': 1, 'b': 2 }, 1);
 * // => true
 *
 */

function includes(value, collection) {
  const coll = isArrayLike(collection) ? collection : toArray(collection);
  return coll.indexOf(value) > -1;
}

const {
  prototype: objectProto$1
} = Object;
const {
  hasOwnProperty: hasOwnProperty$2
} = objectProto$1;
/**
 * Checks if `value` is an empty object, collection, map, or set.
 *
 * Objects are considered empty if they have no own enumerable string keyed
 * properties.
 *
 * Array-like values such as `arguments` objects, arrays, buffers, strings, or
 * jQuery-like collections are considered empty if they have a `length` of `0`.
 * Similarly, maps and sets are considered empty if they have a `size` of `0`.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is empty, else `false`.
 * @example
 *
 * _.isEmpty(null);
 * // => true
 *
 * _.isEmpty(true);
 * // => true
 *
 * _.isEmpty(1);
 * // => true
 *
 * _.isEmpty([1, 2, 3]);
 * // => false
 *
 * _.isEmpty({ 'a': 1 });
 * // => false
 */

function isEmpty(value) {
  if (value == null) {
    return true;
  }

  if (isArrayLike(value) && (isArray(value) || isString(value) || isFunction(value.splice))) {
    return !value.length;
  }
  /* eslint-disable */


  for (const key in value) {
    if (hasOwnProperty$2.call(value, key)) {
      return false;
    }
  }
  /* eslint-enable */


  return true;
}

var check$1 = function (it) {
  return it && it.Math == Math && it;
};

// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028
var global_1$1 =
  // eslint-disable-next-line es/no-global-this -- safe
  check$1(typeof globalThis == 'object' && globalThis) ||
  check$1(typeof window == 'object' && window) ||
  // eslint-disable-next-line no-restricted-globals -- safe
  check$1(typeof self == 'object' && self) ||
  check$1(typeof commonjsGlobal == 'object' && commonjsGlobal) ||
  // eslint-disable-next-line no-new-func -- fallback
  (function () { return this; })() || Function('return this')();

var fails$1 = function (exec) {
  try {
    return !!exec();
  } catch (error) {
    return true;
  }
};

// Detect IE8's incomplete defineProperty implementation
var descriptors$1 = !fails$1(function () {
  // eslint-disable-next-line es/no-object-defineproperty -- required for testing
  return Object.defineProperty({}, 1, { get: function () { return 7; } })[1] != 7;
});

var functionBindNative$1 = !fails$1(function () {
  // eslint-disable-next-line es/no-function-prototype-bind -- safe
  var test = (function () { /* empty */ }).bind();
  // eslint-disable-next-line no-prototype-builtins -- safe
  return typeof test != 'function' || test.hasOwnProperty('prototype');
});

var call$3 = Function.prototype.call;

var functionCall$1 = functionBindNative$1 ? call$3.bind(call$3) : function () {
  return call$3.apply(call$3, arguments);
};

var $propertyIsEnumerable$1 = {}.propertyIsEnumerable;
// eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe
var getOwnPropertyDescriptor$4 = Object.getOwnPropertyDescriptor;

// Nashorn ~ JDK8 bug
var NASHORN_BUG$1 = getOwnPropertyDescriptor$4 && !$propertyIsEnumerable$1.call({ 1: 2 }, 1);

// `Object.prototype.propertyIsEnumerable` method implementation
// https://tc39.es/ecma262/#sec-object.prototype.propertyisenumerable
var f$7 = NASHORN_BUG$1 ? function propertyIsEnumerable(V) {
  var descriptor = getOwnPropertyDescriptor$4(this, V);
  return !!descriptor && descriptor.enumerable;
} : $propertyIsEnumerable$1;

var objectPropertyIsEnumerable$1 = {
	f: f$7
};

var createPropertyDescriptor$1 = function (bitmap, value) {
  return {
    enumerable: !(bitmap & 1),
    configurable: !(bitmap & 2),
    writable: !(bitmap & 4),
    value: value
  };
};

var FunctionPrototype$3 = Function.prototype;
var call$4 = FunctionPrototype$3.call;
var uncurryThisWithBind$1 = functionBindNative$1 && FunctionPrototype$3.bind.bind(call$4, call$4);

var functionUncurryThisRaw$1 = function (fn) {
  return functionBindNative$1 ? uncurryThisWithBind$1(fn) : function () {
    return call$4.apply(fn, arguments);
  };
};

var toString$2 = functionUncurryThisRaw$1({}.toString);
var stringSlice$2 = functionUncurryThisRaw$1(''.slice);

var classofRaw$1 = function (it) {
  return stringSlice$2(toString$2(it), 8, -1);
};

var functionUncurryThis$1 = function (fn) {
  // Nashorn bug:
  //   https://github.com/zloirock/core-js/issues/1128
  //   https://github.com/zloirock/core-js/issues/1130
  if (classofRaw$1(fn) === 'Function') return functionUncurryThisRaw$1(fn);
};

var $Object$5 = Object;
var split$2 = functionUncurryThis$1(''.split);

// fallback for non-array-like ES3 and non-enumerable old V8 strings
var indexedObject$1 = fails$1(function () {
  // throws an error in rhino, see https://github.com/mozilla/rhino/issues/346
  // eslint-disable-next-line no-prototype-builtins -- safe
  return !$Object$5('z').propertyIsEnumerable(0);
}) ? function (it) {
  return classofRaw$1(it) == 'String' ? split$2(it, '') : $Object$5(it);
} : $Object$5;

// we can't use just `it == null` since of `document.all` special case
// https://tc39.es/ecma262/#sec-IsHTMLDDA-internal-slot-aec
var isNullOrUndefined$1 = function (it) {
  return it === null || it === undefined;
};

var $TypeError$d = TypeError;

// `RequireObjectCoercible` abstract operation
// https://tc39.es/ecma262/#sec-requireobjectcoercible
var requireObjectCoercible$1 = function (it) {
  if (isNullOrUndefined$1(it)) throw $TypeError$d("Can't call method on " + it);
  return it;
};

// toObject with fallback for non-array-like ES3 strings



var toIndexedObject$1 = function (it) {
  return indexedObject$1(requireObjectCoercible$1(it));
};

var documentAll$3 = typeof document == 'object' && document.all;

// https://tc39.es/ecma262/#sec-IsHTMLDDA-internal-slot
var IS_HTMLDDA$1 = typeof documentAll$3 == 'undefined' && documentAll$3 !== undefined;

var documentAll_1$1 = {
  all: documentAll$3,
  IS_HTMLDDA: IS_HTMLDDA$1
};

var documentAll$4 = documentAll_1$1.all;

// `IsCallable` abstract operation
// https://tc39.es/ecma262/#sec-iscallable
var isCallable$1 = documentAll_1$1.IS_HTMLDDA ? function (argument) {
  return typeof argument == 'function' || argument === documentAll$4;
} : function (argument) {
  return typeof argument == 'function';
};

var documentAll$5 = documentAll_1$1.all;

var isObject$2 = documentAll_1$1.IS_HTMLDDA ? function (it) {
  return typeof it == 'object' ? it !== null : isCallable$1(it) || it === documentAll$5;
} : function (it) {
  return typeof it == 'object' ? it !== null : isCallable$1(it);
};

var aFunction$1 = function (argument) {
  return isCallable$1(argument) ? argument : undefined;
};

var getBuiltIn$1 = function (namespace, method) {
  return arguments.length < 2 ? aFunction$1(global_1$1[namespace]) : global_1$1[namespace] && global_1$1[namespace][method];
};

var objectIsPrototypeOf$1 = functionUncurryThis$1({}.isPrototypeOf);

var engineUserAgent$1 = getBuiltIn$1('navigator', 'userAgent') || '';

var process$5 = global_1$1.process;
var Deno$2 = global_1$1.Deno;
var versions$1 = process$5 && process$5.versions || Deno$2 && Deno$2.version;
var v8$1 = versions$1 && versions$1.v8;
var match$1, version$1;

if (v8$1) {
  match$1 = v8$1.split('.');
  // in old Chrome, versions of V8 isn't V8 = Chrome / 10
  // but their correct versions are not interesting for us
  version$1 = match$1[0] > 0 && match$1[0] < 4 ? 1 : +(match$1[0] + match$1[1]);
}

// BrowserFS NodeJS `process` polyfill incorrectly set `.v8` to `0.0`
// so check `userAgent` even if `.v8` exists, but 0
if (!version$1 && engineUserAgent$1) {
  match$1 = engineUserAgent$1.match(/Edge\/(\d+)/);
  if (!match$1 || match$1[1] >= 74) {
    match$1 = engineUserAgent$1.match(/Chrome\/(\d+)/);
    if (match$1) version$1 = +match$1[1];
  }
}

var engineV8Version$1 = version$1;

/* eslint-disable es/no-symbol -- required for testing */



// eslint-disable-next-line es/no-object-getownpropertysymbols -- required for testing
var symbolConstructorDetection$1 = !!Object.getOwnPropertySymbols && !fails$1(function () {
  var symbol = Symbol();
  // Chrome 38 Symbol has incorrect toString conversion
  // `get-own-property-symbols` polyfill symbols converted to object are not Symbol instances
  return !String(symbol) || !(Object(symbol) instanceof Symbol) ||
    // Chrome 38-40 symbols are not inherited from DOM collections prototypes to instances
    !Symbol.sham && engineV8Version$1 && engineV8Version$1 < 41;
});

/* eslint-disable es/no-symbol -- required for testing */


var useSymbolAsUid$1 = symbolConstructorDetection$1
  && !Symbol.sham
  && typeof Symbol.iterator == 'symbol';

var $Object$6 = Object;

var isSymbol$1 = useSymbolAsUid$1 ? function (it) {
  return typeof it == 'symbol';
} : function (it) {
  var $Symbol = getBuiltIn$1('Symbol');
  return isCallable$1($Symbol) && objectIsPrototypeOf$1($Symbol.prototype, $Object$6(it));
};

var $String$4 = String;

var tryToString$1 = function (argument) {
  try {
    return $String$4(argument);
  } catch (error) {
    return 'Object';
  }
};

var $TypeError$e = TypeError;

// `Assert: IsCallable(argument) is true`
var aCallable$1 = function (argument) {
  if (isCallable$1(argument)) return argument;
  throw $TypeError$e(tryToString$1(argument) + ' is not a function');
};

// `GetMethod` abstract operation
// https://tc39.es/ecma262/#sec-getmethod
var getMethod$1 = function (V, P) {
  var func = V[P];
  return isNullOrUndefined$1(func) ? undefined : aCallable$1(func);
};

var $TypeError$f = TypeError;

// `OrdinaryToPrimitive` abstract operation
// https://tc39.es/ecma262/#sec-ordinarytoprimitive
var ordinaryToPrimitive$1 = function (input, pref) {
  var fn, val;
  if (pref === 'string' && isCallable$1(fn = input.toString) && !isObject$2(val = functionCall$1(fn, input))) return val;
  if (isCallable$1(fn = input.valueOf) && !isObject$2(val = functionCall$1(fn, input))) return val;
  if (pref !== 'string' && isCallable$1(fn = input.toString) && !isObject$2(val = functionCall$1(fn, input))) return val;
  throw $TypeError$f("Can't convert object to primitive value");
};

var isPure$1 = false;

// eslint-disable-next-line es/no-object-defineproperty -- safe
var defineProperty$4 = Object.defineProperty;

var defineGlobalProperty$1 = function (key, value) {
  try {
    defineProperty$4(global_1$1, key, { value: value, configurable: true, writable: true });
  } catch (error) {
    global_1$1[key] = value;
  } return value;
};

var SHARED$1 = '__core-js_shared__';
var store$2 = global_1$1[SHARED$1] || defineGlobalProperty$1(SHARED$1, {});

var sharedStore$1 = store$2;

var shared$1 = createCommonjsModule(function (module) {
(module.exports = function (key, value) {
  return sharedStore$1[key] || (sharedStore$1[key] = value !== undefined ? value : {});
})('versions', []).push({
  version: '3.25.5',
  mode:  'global',
  copyright: 'Â© 2014-2022 Denis Pushkarev (zloirock.ru)',
  license: 'https://github.com/zloirock/core-js/blob/v3.25.5/LICENSE',
  source: 'https://github.com/zloirock/core-js'
});
});

var $Object$7 = Object;

// `ToObject` abstract operation
// https://tc39.es/ecma262/#sec-toobject
var toObject$2 = function (argument) {
  return $Object$7(requireObjectCoercible$1(argument));
};

var hasOwnProperty$3 = functionUncurryThis$1({}.hasOwnProperty);

// `HasOwnProperty` abstract operation
// https://tc39.es/ecma262/#sec-hasownproperty
// eslint-disable-next-line es/no-object-hasown -- safe
var hasOwnProperty_1$1 = Object.hasOwn || function hasOwn(it, key) {
  return hasOwnProperty$3(toObject$2(it), key);
};

var id$1 = 0;
var postfix$1 = Math.random();
var toString$3 = functionUncurryThis$1(1.0.toString);

var uid$1 = function (key) {
  return 'Symbol(' + (key === undefined ? '' : key) + ')_' + toString$3(++id$1 + postfix$1, 36);
};

var WellKnownSymbolsStore$1 = shared$1('wks');
var Symbol$2 = global_1$1.Symbol;
var symbolFor$1 = Symbol$2 && Symbol$2['for'];
var createWellKnownSymbol$1 = useSymbolAsUid$1 ? Symbol$2 : Symbol$2 && Symbol$2.withoutSetter || uid$1;

var wellKnownSymbol$1 = function (name) {
  if (!hasOwnProperty_1$1(WellKnownSymbolsStore$1, name) || !(symbolConstructorDetection$1 || typeof WellKnownSymbolsStore$1[name] == 'string')) {
    var description = 'Symbol.' + name;
    if (symbolConstructorDetection$1 && hasOwnProperty_1$1(Symbol$2, name)) {
      WellKnownSymbolsStore$1[name] = Symbol$2[name];
    } else if (useSymbolAsUid$1 && symbolFor$1) {
      WellKnownSymbolsStore$1[name] = symbolFor$1(description);
    } else {
      WellKnownSymbolsStore$1[name] = createWellKnownSymbol$1(description);
    }
  } return WellKnownSymbolsStore$1[name];
};

var $TypeError$g = TypeError;
var TO_PRIMITIVE$1 = wellKnownSymbol$1('toPrimitive');

// `ToPrimitive` abstract operation
// https://tc39.es/ecma262/#sec-toprimitive
var toPrimitive$1 = function (input, pref) {
  if (!isObject$2(input) || isSymbol$1(input)) return input;
  var exoticToPrim = getMethod$1(input, TO_PRIMITIVE$1);
  var result;
  if (exoticToPrim) {
    if (pref === undefined) pref = 'default';
    result = functionCall$1(exoticToPrim, input, pref);
    if (!isObject$2(result) || isSymbol$1(result)) return result;
    throw $TypeError$g("Can't convert object to primitive value");
  }
  if (pref === undefined) pref = 'number';
  return ordinaryToPrimitive$1(input, pref);
};

// `ToPropertyKey` abstract operation
// https://tc39.es/ecma262/#sec-topropertykey
var toPropertyKey$1 = function (argument) {
  var key = toPrimitive$1(argument, 'string');
  return isSymbol$1(key) ? key : key + '';
};

var document$4 = global_1$1.document;
// typeof document.createElement is 'object' in old IE
var EXISTS$2 = isObject$2(document$4) && isObject$2(document$4.createElement);

var documentCreateElement$1 = function (it) {
  return EXISTS$2 ? document$4.createElement(it) : {};
};

// Thanks to IE8 for its funny defineProperty
var ie8DomDefine$1 = !descriptors$1 && !fails$1(function () {
  // eslint-disable-next-line es/no-object-defineproperty -- required for testing
  return Object.defineProperty(documentCreateElement$1('div'), 'a', {
    get: function () { return 7; }
  }).a != 7;
});

// eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe
var $getOwnPropertyDescriptor$2 = Object.getOwnPropertyDescriptor;

// `Object.getOwnPropertyDescriptor` method
// https://tc39.es/ecma262/#sec-object.getownpropertydescriptor
var f$8 = descriptors$1 ? $getOwnPropertyDescriptor$2 : function getOwnPropertyDescriptor(O, P) {
  O = toIndexedObject$1(O);
  P = toPropertyKey$1(P);
  if (ie8DomDefine$1) try {
    return $getOwnPropertyDescriptor$2(O, P);
  } catch (error) { /* empty */ }
  if (hasOwnProperty_1$1(O, P)) return createPropertyDescriptor$1(!functionCall$1(objectPropertyIsEnumerable$1.f, O, P), O[P]);
};

var objectGetOwnPropertyDescriptor$1 = {
	f: f$8
};

// V8 ~ Chrome 36-
// https://bugs.chromium.org/p/v8/issues/detail?id=3334
var v8PrototypeDefineBug$1 = descriptors$1 && fails$1(function () {
  // eslint-disable-next-line es/no-object-defineproperty -- required for testing
  return Object.defineProperty(function () { /* empty */ }, 'prototype', {
    value: 42,
    writable: false
  }).prototype != 42;
});

var $String$5 = String;
var $TypeError$h = TypeError;

// `Assert: Type(argument) is Object`
var anObject$1 = function (argument) {
  if (isObject$2(argument)) return argument;
  throw $TypeError$h($String$5(argument) + ' is not an object');
};

var $TypeError$i = TypeError;
// eslint-disable-next-line es/no-object-defineproperty -- safe
var $defineProperty$1 = Object.defineProperty;
// eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe
var $getOwnPropertyDescriptor$3 = Object.getOwnPropertyDescriptor;
var ENUMERABLE$1 = 'enumerable';
var CONFIGURABLE$2 = 'configurable';
var WRITABLE$1 = 'writable';

// `Object.defineProperty` method
// https://tc39.es/ecma262/#sec-object.defineproperty
var f$9 = descriptors$1 ? v8PrototypeDefineBug$1 ? function defineProperty(O, P, Attributes) {
  anObject$1(O);
  P = toPropertyKey$1(P);
  anObject$1(Attributes);
  if (typeof O === 'function' && P === 'prototype' && 'value' in Attributes && WRITABLE$1 in Attributes && !Attributes[WRITABLE$1]) {
    var current = $getOwnPropertyDescriptor$3(O, P);
    if (current && current[WRITABLE$1]) {
      O[P] = Attributes.value;
      Attributes = {
        configurable: CONFIGURABLE$2 in Attributes ? Attributes[CONFIGURABLE$2] : current[CONFIGURABLE$2],
        enumerable: ENUMERABLE$1 in Attributes ? Attributes[ENUMERABLE$1] : current[ENUMERABLE$1],
        writable: false
      };
    }
  } return $defineProperty$1(O, P, Attributes);
} : $defineProperty$1 : function defineProperty(O, P, Attributes) {
  anObject$1(O);
  P = toPropertyKey$1(P);
  anObject$1(Attributes);
  if (ie8DomDefine$1) try {
    return $defineProperty$1(O, P, Attributes);
  } catch (error) { /* empty */ }
  if ('get' in Attributes || 'set' in Attributes) throw $TypeError$i('Accessors not supported');
  if ('value' in Attributes) O[P] = Attributes.value;
  return O;
};

var objectDefineProperty$1 = {
	f: f$9
};

var createNonEnumerableProperty$1 = descriptors$1 ? function (object, key, value) {
  return objectDefineProperty$1.f(object, key, createPropertyDescriptor$1(1, value));
} : function (object, key, value) {
  object[key] = value;
  return object;
};

var FunctionPrototype$4 = Function.prototype;
// eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe
var getDescriptor$1 = descriptors$1 && Object.getOwnPropertyDescriptor;

var EXISTS$3 = hasOwnProperty_1$1(FunctionPrototype$4, 'name');
// additional protection from minified / mangled / dropped function names
var PROPER$1 = EXISTS$3 && (function something() { /* empty */ }).name === 'something';
var CONFIGURABLE$3 = EXISTS$3 && (!descriptors$1 || (descriptors$1 && getDescriptor$1(FunctionPrototype$4, 'name').configurable));

var functionName$1 = {
  EXISTS: EXISTS$3,
  PROPER: PROPER$1,
  CONFIGURABLE: CONFIGURABLE$3
};

var functionToString$1 = functionUncurryThis$1(Function.toString);

// this helper broken in `core-js@3.4.1-3.4.4`, so we can't use `shared` helper
if (!isCallable$1(sharedStore$1.inspectSource)) {
  sharedStore$1.inspectSource = function (it) {
    return functionToString$1(it);
  };
}

var inspectSource$1 = sharedStore$1.inspectSource;

var WeakMap$2 = global_1$1.WeakMap;

var weakMapBasicDetection$1 = isCallable$1(WeakMap$2) && /native code/.test(String(WeakMap$2));

var keys$2 = shared$1('keys');

var sharedKey$1 = function (key) {
  return keys$2[key] || (keys$2[key] = uid$1(key));
};

var hiddenKeys$2 = {};

var OBJECT_ALREADY_INITIALIZED$1 = 'Object already initialized';
var TypeError$4 = global_1$1.TypeError;
var WeakMap$3 = global_1$1.WeakMap;
var set$2, get$1, has$1;

var enforce$1 = function (it) {
  return has$1(it) ? get$1(it) : set$2(it, {});
};

var getterFor$1 = function (TYPE) {
  return function (it) {
    var state;
    if (!isObject$2(it) || (state = get$1(it)).type !== TYPE) {
      throw TypeError$4('Incompatible receiver, ' + TYPE + ' required');
    } return state;
  };
};

if (weakMapBasicDetection$1 || sharedStore$1.state) {
  var store$3 = sharedStore$1.state || (sharedStore$1.state = new WeakMap$3());
  /* eslint-disable no-self-assign -- prototype methods protection */
  store$3.get = store$3.get;
  store$3.has = store$3.has;
  store$3.set = store$3.set;
  /* eslint-enable no-self-assign -- prototype methods protection */
  set$2 = function (it, metadata) {
    if (store$3.has(it)) throw TypeError$4(OBJECT_ALREADY_INITIALIZED$1);
    metadata.facade = it;
    store$3.set(it, metadata);
    return metadata;
  };
  get$1 = function (it) {
    return store$3.get(it) || {};
  };
  has$1 = function (it) {
    return store$3.has(it);
  };
} else {
  var STATE$1 = sharedKey$1('state');
  hiddenKeys$2[STATE$1] = true;
  set$2 = function (it, metadata) {
    if (hasOwnProperty_1$1(it, STATE$1)) throw TypeError$4(OBJECT_ALREADY_INITIALIZED$1);
    metadata.facade = it;
    createNonEnumerableProperty$1(it, STATE$1, metadata);
    return metadata;
  };
  get$1 = function (it) {
    return hasOwnProperty_1$1(it, STATE$1) ? it[STATE$1] : {};
  };
  has$1 = function (it) {
    return hasOwnProperty_1$1(it, STATE$1);
  };
}

var internalState$1 = {
  set: set$2,
  get: get$1,
  has: has$1,
  enforce: enforce$1,
  getterFor: getterFor$1
};

var makeBuiltIn_1$1 = createCommonjsModule(function (module) {
var CONFIGURABLE_FUNCTION_NAME = functionName$1.CONFIGURABLE;



var enforceInternalState = internalState$1.enforce;
var getInternalState = internalState$1.get;
// eslint-disable-next-line es/no-object-defineproperty -- safe
var defineProperty = Object.defineProperty;

var CONFIGURABLE_LENGTH = descriptors$1 && !fails$1(function () {
  return defineProperty(function () { /* empty */ }, 'length', { value: 8 }).length !== 8;
});

var TEMPLATE = String(String).split('String');

var makeBuiltIn = module.exports = function (value, name, options) {
  if (String(name).slice(0, 7) === 'Symbol(') {
    name = '[' + String(name).replace(/^Symbol\(([^)]*)\)/, '$1') + ']';
  }
  if (options && options.getter) name = 'get ' + name;
  if (options && options.setter) name = 'set ' + name;
  if (!hasOwnProperty_1$1(value, 'name') || (CONFIGURABLE_FUNCTION_NAME && value.name !== name)) {
    if (descriptors$1) defineProperty(value, 'name', { value: name, configurable: true });
    else value.name = name;
  }
  if (CONFIGURABLE_LENGTH && options && hasOwnProperty_1$1(options, 'arity') && value.length !== options.arity) {
    defineProperty(value, 'length', { value: options.arity });
  }
  try {
    if (options && hasOwnProperty_1$1(options, 'constructor') && options.constructor) {
      if (descriptors$1) defineProperty(value, 'prototype', { writable: false });
    // in V8 ~ Chrome 53, prototypes of some methods, like `Array.prototype.values`, are non-writable
    } else if (value.prototype) value.prototype = undefined;
  } catch (error) { /* empty */ }
  var state = enforceInternalState(value);
  if (!hasOwnProperty_1$1(state, 'source')) {
    state.source = TEMPLATE.join(typeof name == 'string' ? name : '');
  } return value;
};

// add fake Function#toString for correct work wrapped methods / constructors with methods like LoDash isNative
// eslint-disable-next-line no-extend-native -- required
Function.prototype.toString = makeBuiltIn(function toString() {
  return isCallable$1(this) && getInternalState(this).source || inspectSource$1(this);
}, 'toString');
});

var defineBuiltIn$1 = function (O, key, value, options) {
  if (!options) options = {};
  var simple = options.enumerable;
  var name = options.name !== undefined ? options.name : key;
  if (isCallable$1(value)) makeBuiltIn_1$1(value, name, options);
  if (options.global) {
    if (simple) O[key] = value;
    else defineGlobalProperty$1(key, value);
  } else {
    try {
      if (!options.unsafe) delete O[key];
      else if (O[key]) simple = true;
    } catch (error) { /* empty */ }
    if (simple) O[key] = value;
    else objectDefineProperty$1.f(O, key, {
      value: value,
      enumerable: false,
      configurable: !options.nonConfigurable,
      writable: !options.nonWritable
    });
  } return O;
};

var ceil$1 = Math.ceil;
var floor$2 = Math.floor;

// `Math.trunc` method
// https://tc39.es/ecma262/#sec-math.trunc
// eslint-disable-next-line es/no-math-trunc -- safe
var mathTrunc$1 = Math.trunc || function trunc(x) {
  var n = +x;
  return (n > 0 ? floor$2 : ceil$1)(n);
};

// `ToIntegerOrInfinity` abstract operation
// https://tc39.es/ecma262/#sec-tointegerorinfinity
var toIntegerOrInfinity$1 = function (argument) {
  var number = +argument;
  // eslint-disable-next-line no-self-compare -- NaN check
  return number !== number || number === 0 ? 0 : mathTrunc$1(number);
};

var max$2 = Math.max;
var min$2 = Math.min;

// Helper for a popular repeating case of the spec:
// Let integer be ? ToInteger(index).
// If integer < 0, let result be max((length + integer), 0); else let result be min(integer, length).
var toAbsoluteIndex$1 = function (index, length) {
  var integer = toIntegerOrInfinity$1(index);
  return integer < 0 ? max$2(integer + length, 0) : min$2(integer, length);
};

var min$3 = Math.min;

// `ToLength` abstract operation
// https://tc39.es/ecma262/#sec-tolength
var toLength$1 = function (argument) {
  return argument > 0 ? min$3(toIntegerOrInfinity$1(argument), 0x1FFFFFFFFFFFFF) : 0; // 2 ** 53 - 1 == 9007199254740991
};

// `LengthOfArrayLike` abstract operation
// https://tc39.es/ecma262/#sec-lengthofarraylike
var lengthOfArrayLike$1 = function (obj) {
  return toLength$1(obj.length);
};

// `Array.prototype.{ indexOf, includes }` methods implementation
var createMethod$1 = function (IS_INCLUDES) {
  return function ($this, el, fromIndex) {
    var O = toIndexedObject$1($this);
    var length = lengthOfArrayLike$1(O);
    var index = toAbsoluteIndex$1(fromIndex, length);
    var value;
    // Array#includes uses SameValueZero equality algorithm
    // eslint-disable-next-line no-self-compare -- NaN check
    if (IS_INCLUDES && el != el) while (length > index) {
      value = O[index++];
      // eslint-disable-next-line no-self-compare -- NaN check
      if (value != value) return true;
    // Array#indexOf ignores holes, Array#includes - not
    } else for (;length > index; index++) {
      if ((IS_INCLUDES || index in O) && O[index] === el) return IS_INCLUDES || index || 0;
    } return !IS_INCLUDES && -1;
  };
};

var arrayIncludes$1 = {
  // `Array.prototype.includes` method
  // https://tc39.es/ecma262/#sec-array.prototype.includes
  includes: createMethod$1(true),
  // `Array.prototype.indexOf` method
  // https://tc39.es/ecma262/#sec-array.prototype.indexof
  indexOf: createMethod$1(false)
};

var indexOf$1 = arrayIncludes$1.indexOf;


var push$2 = functionUncurryThis$1([].push);

var objectKeysInternal$1 = function (object, names) {
  var O = toIndexedObject$1(object);
  var i = 0;
  var result = [];
  var key;
  for (key in O) !hasOwnProperty_1$1(hiddenKeys$2, key) && hasOwnProperty_1$1(O, key) && push$2(result, key);
  // Don't enum bug & hidden keys
  while (names.length > i) if (hasOwnProperty_1$1(O, key = names[i++])) {
    ~indexOf$1(result, key) || push$2(result, key);
  }
  return result;
};

// IE8- don't enum bug keys
var enumBugKeys$1 = [
  'constructor',
  'hasOwnProperty',
  'isPrototypeOf',
  'propertyIsEnumerable',
  'toLocaleString',
  'toString',
  'valueOf'
];

var hiddenKeys$3 = enumBugKeys$1.concat('length', 'prototype');

// `Object.getOwnPropertyNames` method
// https://tc39.es/ecma262/#sec-object.getownpropertynames
// eslint-disable-next-line es/no-object-getownpropertynames -- safe
var f$a = Object.getOwnPropertyNames || function getOwnPropertyNames(O) {
  return objectKeysInternal$1(O, hiddenKeys$3);
};

var objectGetOwnPropertyNames$1 = {
	f: f$a
};

// eslint-disable-next-line es/no-object-getownpropertysymbols -- safe
var f$b = Object.getOwnPropertySymbols;

var objectGetOwnPropertySymbols$1 = {
	f: f$b
};

var concat$1 = functionUncurryThis$1([].concat);

// all object keys, includes non-enumerable and symbols
var ownKeys$1 = getBuiltIn$1('Reflect', 'ownKeys') || function ownKeys(it) {
  var keys = objectGetOwnPropertyNames$1.f(anObject$1(it));
  var getOwnPropertySymbols = objectGetOwnPropertySymbols$1.f;
  return getOwnPropertySymbols ? concat$1(keys, getOwnPropertySymbols(it)) : keys;
};

var copyConstructorProperties$1 = function (target, source, exceptions) {
  var keys = ownKeys$1(source);
  var defineProperty = objectDefineProperty$1.f;
  var getOwnPropertyDescriptor = objectGetOwnPropertyDescriptor$1.f;
  for (var i = 0; i < keys.length; i++) {
    var key = keys[i];
    if (!hasOwnProperty_1$1(target, key) && !(exceptions && hasOwnProperty_1$1(exceptions, key))) {
      defineProperty(target, key, getOwnPropertyDescriptor(source, key));
    }
  }
};

var replacement$1 = /#|\.prototype\./;

var isForced$1 = function (feature, detection) {
  var value = data$1[normalize$1(feature)];
  return value == POLYFILL$1 ? true
    : value == NATIVE$1 ? false
    : isCallable$1(detection) ? fails$1(detection)
    : !!detection;
};

var normalize$1 = isForced$1.normalize = function (string) {
  return String(string).replace(replacement$1, '.').toLowerCase();
};

var data$1 = isForced$1.data = {};
var NATIVE$1 = isForced$1.NATIVE = 'N';
var POLYFILL$1 = isForced$1.POLYFILL = 'P';

var isForced_1$1 = isForced$1;

var getOwnPropertyDescriptor$5 = objectGetOwnPropertyDescriptor$1.f;






/*
  options.target         - name of the target object
  options.global         - target is the global object
  options.stat           - export as static methods of target
  options.proto          - export as prototype methods of target
  options.real           - real prototype method for the `pure` version
  options.forced         - export even if the native feature is available
  options.bind           - bind methods to the target, required for the `pure` version
  options.wrap           - wrap constructors to preventing global pollution, required for the `pure` version
  options.unsafe         - use the simple assignment of property instead of delete + defineProperty
  options.sham           - add a flag to not completely full polyfills
  options.enumerable     - export as enumerable property
  options.dontCallGetSet - prevent calling a getter on target
  options.name           - the .name of the function if it does not match the key
*/
var _export$1 = function (options, source) {
  var TARGET = options.target;
  var GLOBAL = options.global;
  var STATIC = options.stat;
  var FORCED, target, key, targetProperty, sourceProperty, descriptor;
  if (GLOBAL) {
    target = global_1$1;
  } else if (STATIC) {
    target = global_1$1[TARGET] || defineGlobalProperty$1(TARGET, {});
  } else {
    target = (global_1$1[TARGET] || {}).prototype;
  }
  if (target) for (key in source) {
    sourceProperty = source[key];
    if (options.dontCallGetSet) {
      descriptor = getOwnPropertyDescriptor$5(target, key);
      targetProperty = descriptor && descriptor.value;
    } else targetProperty = target[key];
    FORCED = isForced_1$1(GLOBAL ? key : TARGET + (STATIC ? '.' : '#') + key, options.forced);
    // contained in target
    if (!FORCED && targetProperty !== undefined) {
      if (typeof sourceProperty == typeof targetProperty) continue;
      copyConstructorProperties$1(sourceProperty, targetProperty);
    }
    // add a flag to not completely full polyfills
    if (options.sham || (targetProperty && targetProperty.sham)) {
      createNonEnumerableProperty$1(sourceProperty, 'sham', true);
    }
    defineBuiltIn$1(target, key, sourceProperty, options);
  }
};

var TO_STRING_TAG$3 = wellKnownSymbol$1('toStringTag');
var test$1 = {};

test$1[TO_STRING_TAG$3] = 'z';

var toStringTagSupport$1 = String(test$1) === '[object z]';

var TO_STRING_TAG$4 = wellKnownSymbol$1('toStringTag');
var $Object$8 = Object;

// ES3 wrong here
var CORRECT_ARGUMENTS$1 = classofRaw$1(function () { return arguments; }()) == 'Arguments';

// fallback for IE11 Script Access Denied error
var tryGet$1 = function (it, key) {
  try {
    return it[key];
  } catch (error) { /* empty */ }
};

// getting tag from ES6+ `Object.prototype.toString`
var classof$1 = toStringTagSupport$1 ? classofRaw$1 : function (it) {
  var O, tag, result;
  return it === undefined ? 'Undefined' : it === null ? 'Null'
    // @@toStringTag case
    : typeof (tag = tryGet$1(O = $Object$8(it), TO_STRING_TAG$4)) == 'string' ? tag
    // builtinTag case
    : CORRECT_ARGUMENTS$1 ? classofRaw$1(O)
    // ES3 arguments fallback
    : (result = classofRaw$1(O)) == 'Object' && isCallable$1(O.callee) ? 'Arguments' : result;
};

var $String$6 = String;

var toString_1$1 = function (argument) {
  if (classof$1(argument) === 'Symbol') throw TypeError('Cannot convert a Symbol value to a string');
  return $String$6(argument);
};

// a string of all valid unicode whitespaces
var whitespaces = '\u0009\u000A\u000B\u000C\u000D\u0020\u00A0\u1680\u2000\u2001\u2002' +
  '\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200A\u202F\u205F\u3000\u2028\u2029\uFEFF';

var replace$1 = functionUncurryThis$1(''.replace);
var whitespace = '[' + whitespaces + ']';
var ltrim = RegExp('^' + whitespace + whitespace + '*');
var rtrim = RegExp(whitespace + whitespace + '*$');

// `String.prototype.{ trim, trimStart, trimEnd, trimLeft, trimRight }` methods implementation
var createMethod$2 = function (TYPE) {
  return function ($this) {
    var string = toString_1$1(requireObjectCoercible$1($this));
    if (TYPE & 1) string = replace$1(string, ltrim, '');
    if (TYPE & 2) string = replace$1(string, rtrim, '');
    return string;
  };
};

var stringTrim = {
  // `String.prototype.{ trimLeft, trimStart }` methods
  // https://tc39.es/ecma262/#sec-string.prototype.trimstart
  start: createMethod$2(1),
  // `String.prototype.{ trimRight, trimEnd }` methods
  // https://tc39.es/ecma262/#sec-string.prototype.trimend
  end: createMethod$2(2),
  // `String.prototype.trim` method
  // https://tc39.es/ecma262/#sec-string.prototype.trim
  trim: createMethod$2(3)
};

var PROPER_FUNCTION_NAME$1 = functionName$1.PROPER;



var non = '\u200B\u0085\u180E';

// check that a method works with the correct list
// of whitespaces and has a correct name
var stringTrimForced = function (METHOD_NAME) {
  return fails$1(function () {
    return !!whitespaces[METHOD_NAME]()
      || non[METHOD_NAME]() !== non
      || (PROPER_FUNCTION_NAME$1 && whitespaces[METHOD_NAME].name !== METHOD_NAME);
  });
};

var $trim = stringTrim.trim;


// `String.prototype.trim` method
// https://tc39.es/ecma262/#sec-string.prototype.trim
_export$1({ target: 'String', proto: true, forced: stringTrimForced('trim') }, {
  trim: function trim() {
    return $trim(this);
  }
});

const {
  prototype: stringProto
} = String;
const {
  trim: nativeStringTrim
} = stringProto;

function trim(string) {
  return isNil(string) ? "" : nativeStringTrim.call(string);
}

/**
 * Checks if `value` is a blank string.
 *
 * Objects are considered empty if they have no own enumerable string keyed
 * properties.
 *
 * Array-like values such as `arguments` objects, arrays, buffers, strings, or
 * jQuery-like collections are considered empty if they have a `length` of `0`.
 * Similarly, maps and sets are considered empty if they have a `size` of `0`.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is empty, else `false`.
 * @example
 *
 * _.isBlank(null);
 * // => true
 *
 * _.isBlank(undefined);
 * // => true
 *
 * _.isBlank('');
 * // => true
 *
 * * _.isBlank('   ');
 * // => true
 */

function isBlank(value) {
  return isString(value) ? !trim(value) : isEmpty(value);
}

/** `Object#toString` result references. */

const numberTag = "[object Number]";
/**
 * Checks if `value` is classified as a `Number` primitive or object.
 *
 * **Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are
 * classified as numbers, use the `_.isFinite` method.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a number, else `false`.
 * @example
 *
 * _.isNumber(3);
 * // => true
 *
 * _.isNumber(Number.MIN_VALUE);
 * // => true
 *
 * _.isNumber(Infinity);
 * // => true
 *
 * _.isNumber('3');
 * // => false
 */

function isNumber(value) {
  return typeof value === "number" || isObjectLike(value) && baseGetTag(value) === numberTag;
}

const objectTag = "[object Object]";
const {
  prototype: funcProto
} = Function;
const {
  prototype: objectProto$2
} = Object;
const {
  toString: funcToString
} = funcProto;
const {
  hasOwnProperty: hasOwnProperty$4
} = objectProto$2;
const objectCtorString = funcToString.call(Object);

function getPrototype(value) {
  return Object.getPrototypeOf(Object(value));
}
/**
 * Checks if `value` is a plain object, that is, an object created by the
 * `Object` constructor or one with a `[[Prototype]]` of `null`.
 *
 * @static
 * @memberOf _
 * @since 0.8.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.
 * @example
 *
 * function Foo() {
 *   this.a = 1;
 * }
 *
 * _.isPlainObject(new Foo);
 * // => false
 *
 * _.isPlainObject([1, 2, 3]);
 * // => false
 *
 * _.isPlainObject({ 'x': 0, 'y': 0 });
 * // => true
 *
 * _.isPlainObject(Object.create(null));
 * // => true
 */


function isPlainObject(value) {
  if (!isObjectLike(value) || baseGetTag(value) !== objectTag) {
    return false;
  }

  const proto = getPrototype(value);

  if (proto === null) {
    return true;
  }

  const Ctor = hasOwnProperty$4.call(proto, "constructor") && proto.constructor;
  return typeof Ctor === "function" && Ctor instanceof Ctor && funcToString.call(Ctor) === objectCtorString;
}

function join$1(joiner, collection) {
  if (!isArray(collection)) {
    return "";
  }

  return collection.join(joiner || "");
}

function now() {
  return new Date().getTime();
}

const arrayReduce = (iteratee, accumulator, collection) => collection.reduce(iteratee, accumulator);

const baseReduce = (iteratee, accumulator, collection) => {
  let localAcc = accumulator;
  baseEach((value, key) => {
    localAcc = iteratee(localAcc, value, key);
  }, collection);
  return localAcc;
};
/**
 * Reduces `collection` to a value which is the accumulated result of running
 * each element in `collection` thru `iteratee`, where each successive
 * invocation is supplied the return value of the previous. If `accumulator`
 * is not given, the first element of `collection` is used as the initial
 * value. The iteratee is invoked with four arguments:
 * (accumulator, value, index|key, collection).
 *
 * Many lodash methods are guarded to work as iteratees for methods like
 * `_.reduce`, `_.reduceRight`, and `_.transform`.
 *
 * The guarded methods are:
 * `assign`, `defaults`, `defaultsDeep`, `includes`, `merge`, `orderBy`,
 * and `sortBy`
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Collection
 * @param {Function} [iteratee=_.identity] The function invoked per iteration.
 * @param {*} [accumulator] The initial value.
 * @param {Array|Object} collection The collection to iterate over.
 * @returns {*} Returns the accumulated value.
 * @see _.reduceRight
 * @example
 *
 * _.reduce(function(sum, n) {
 *   return sum + n;
 * }, 0, [1, 2]);
 * // => 3
 *
 * _.reduce(function(result, value, key) {
 *   (result[value] || (result[value] = [])).push(key);
 *   return result;
 * }, {}, { 'a': 1, 'b': 2, 'c': 1 });
 * // => { '1': ['a', 'c'], '2': ['b'] } (iteration order is not guaranteed)
 */


function reduce(iteratee, accumulator, collection) {
  if (isNil(collection)) {
    return accumulator;
  }

  const func = isArray(collection) ? arrayReduce : baseReduce;
  return func(castFunction(iteratee), accumulator, collection);
}

// `RegExp.prototype.flags` getter implementation
// https://tc39.es/ecma262/#sec-get-regexp.prototype.flags
var regexpFlags = function () {
  var that = anObject$1(this);
  var result = '';
  if (that.hasIndices) result += 'd';
  if (that.global) result += 'g';
  if (that.ignoreCase) result += 'i';
  if (that.multiline) result += 'm';
  if (that.dotAll) result += 's';
  if (that.unicode) result += 'u';
  if (that.unicodeSets) result += 'v';
  if (that.sticky) result += 'y';
  return result;
};

// babel-minify and Closure Compiler transpiles RegExp('a', 'y') -> /a/y and it causes SyntaxError
var $RegExp = global_1$1.RegExp;

var UNSUPPORTED_Y = fails$1(function () {
  var re = $RegExp('a', 'y');
  re.lastIndex = 2;
  return re.exec('abcd') != null;
});

// UC Browser bug
// https://github.com/zloirock/core-js/issues/1008
var MISSED_STICKY = UNSUPPORTED_Y || fails$1(function () {
  return !$RegExp('a', 'y').sticky;
});

var BROKEN_CARET = UNSUPPORTED_Y || fails$1(function () {
  // https://bugzilla.mozilla.org/show_bug.cgi?id=773687
  var re = $RegExp('^r', 'gy');
  re.lastIndex = 2;
  return re.exec('str') != null;
});

var regexpStickyHelpers = {
  BROKEN_CARET: BROKEN_CARET,
  MISSED_STICKY: MISSED_STICKY,
  UNSUPPORTED_Y: UNSUPPORTED_Y
};

// `Object.keys` method
// https://tc39.es/ecma262/#sec-object.keys
// eslint-disable-next-line es/no-object-keys -- safe
var objectKeys$1 = Object.keys || function keys(O) {
  return objectKeysInternal$1(O, enumBugKeys$1);
};

// `Object.defineProperties` method
// https://tc39.es/ecma262/#sec-object.defineproperties
// eslint-disable-next-line es/no-object-defineproperties -- safe
var f$c = descriptors$1 && !v8PrototypeDefineBug$1 ? Object.defineProperties : function defineProperties(O, Properties) {
  anObject$1(O);
  var props = toIndexedObject$1(Properties);
  var keys = objectKeys$1(Properties);
  var length = keys.length;
  var index = 0;
  var key;
  while (length > index) objectDefineProperty$1.f(O, key = keys[index++], props[key]);
  return O;
};

var objectDefineProperties$1 = {
	f: f$c
};

var html$1 = getBuiltIn$1('document', 'documentElement');

/* global ActiveXObject -- old IE, WSH */








var GT$1 = '>';
var LT$1 = '<';
var PROTOTYPE$1 = 'prototype';
var SCRIPT$1 = 'script';
var IE_PROTO$2 = sharedKey$1('IE_PROTO');

var EmptyConstructor$1 = function () { /* empty */ };

var scriptTag$1 = function (content) {
  return LT$1 + SCRIPT$1 + GT$1 + content + LT$1 + '/' + SCRIPT$1 + GT$1;
};

// Create object with fake `null` prototype: use ActiveX Object with cleared prototype
var NullProtoObjectViaActiveX$1 = function (activeXDocument) {
  activeXDocument.write(scriptTag$1(''));
  activeXDocument.close();
  var temp = activeXDocument.parentWindow.Object;
  activeXDocument = null; // avoid memory leak
  return temp;
};

// Create object with fake `null` prototype: use iframe Object with cleared prototype
var NullProtoObjectViaIFrame$1 = function () {
  // Thrash, waste and sodomy: IE GC bug
  var iframe = documentCreateElement$1('iframe');
  var JS = 'java' + SCRIPT$1 + ':';
  var iframeDocument;
  iframe.style.display = 'none';
  html$1.appendChild(iframe);
  // https://github.com/zloirock/core-js/issues/475
  iframe.src = String(JS);
  iframeDocument = iframe.contentWindow.document;
  iframeDocument.open();
  iframeDocument.write(scriptTag$1('document.F=Object'));
  iframeDocument.close();
  return iframeDocument.F;
};

// Check for document.domain and active x support
// No need to use active x approach when document.domain is not set
// see https://github.com/es-shims/es5-shim/issues/150
// variation of https://github.com/kitcambridge/es5-shim/commit/4f738ac066346
// avoid IE GC bug
var activeXDocument$1;
var NullProtoObject$1 = function () {
  try {
    activeXDocument$1 = new ActiveXObject('htmlfile');
  } catch (error) { /* ignore */ }
  NullProtoObject$1 = typeof document != 'undefined'
    ? document.domain && activeXDocument$1
      ? NullProtoObjectViaActiveX$1(activeXDocument$1) // old IE
      : NullProtoObjectViaIFrame$1()
    : NullProtoObjectViaActiveX$1(activeXDocument$1); // WSH
  var length = enumBugKeys$1.length;
  while (length--) delete NullProtoObject$1[PROTOTYPE$1][enumBugKeys$1[length]];
  return NullProtoObject$1();
};

hiddenKeys$2[IE_PROTO$2] = true;

// `Object.create` method
// https://tc39.es/ecma262/#sec-object.create
// eslint-disable-next-line es/no-object-create -- safe
var objectCreate$1 = Object.create || function create(O, Properties) {
  var result;
  if (O !== null) {
    EmptyConstructor$1[PROTOTYPE$1] = anObject$1(O);
    result = new EmptyConstructor$1();
    EmptyConstructor$1[PROTOTYPE$1] = null;
    // add "__proto__" for Object.getPrototypeOf polyfill
    result[IE_PROTO$2] = O;
  } else result = NullProtoObject$1();
  return Properties === undefined ? result : objectDefineProperties$1.f(result, Properties);
};

// babel-minify and Closure Compiler transpiles RegExp('.', 's') -> /./s and it causes SyntaxError
var $RegExp$1 = global_1$1.RegExp;

var regexpUnsupportedDotAll = fails$1(function () {
  var re = $RegExp$1('.', 's');
  return !(re.dotAll && re.exec('\n') && re.flags === 's');
});

// babel-minify and Closure Compiler transpiles RegExp('(?<a>b)', 'g') -> /(?<a>b)/g and it causes SyntaxError
var $RegExp$2 = global_1$1.RegExp;

var regexpUnsupportedNcg = fails$1(function () {
  var re = $RegExp$2('(?<a>b)', 'g');
  return re.exec('b').groups.a !== 'b' ||
    'b'.replace(re, '$<a>c') !== 'bc';
});

/* eslint-disable regexp/no-empty-capturing-group, regexp/no-empty-group, regexp/no-lazy-ends -- testing */
/* eslint-disable regexp/no-useless-quantifier -- testing */







var getInternalState$1 = internalState$1.get;



var nativeReplace = shared$1('native-string-replace', String.prototype.replace);
var nativeExec = RegExp.prototype.exec;
var patchedExec = nativeExec;
var charAt$1 = functionUncurryThis$1(''.charAt);
var indexOf$2 = functionUncurryThis$1(''.indexOf);
var replace$2 = functionUncurryThis$1(''.replace);
var stringSlice$3 = functionUncurryThis$1(''.slice);

var UPDATES_LAST_INDEX_WRONG = (function () {
  var re1 = /a/;
  var re2 = /b*/g;
  functionCall$1(nativeExec, re1, 'a');
  functionCall$1(nativeExec, re2, 'a');
  return re1.lastIndex !== 0 || re2.lastIndex !== 0;
})();

var UNSUPPORTED_Y$1 = regexpStickyHelpers.BROKEN_CARET;

// nonparticipating capturing group, copied from es5-shim's String#split patch.
var NPCG_INCLUDED = /()??/.exec('')[1] !== undefined;

var PATCH = UPDATES_LAST_INDEX_WRONG || NPCG_INCLUDED || UNSUPPORTED_Y$1 || regexpUnsupportedDotAll || regexpUnsupportedNcg;

if (PATCH) {
  patchedExec = function exec(string) {
    var re = this;
    var state = getInternalState$1(re);
    var str = toString_1$1(string);
    var raw = state.raw;
    var result, reCopy, lastIndex, match, i, object, group;

    if (raw) {
      raw.lastIndex = re.lastIndex;
      result = functionCall$1(patchedExec, raw, str);
      re.lastIndex = raw.lastIndex;
      return result;
    }

    var groups = state.groups;
    var sticky = UNSUPPORTED_Y$1 && re.sticky;
    var flags = functionCall$1(regexpFlags, re);
    var source = re.source;
    var charsAdded = 0;
    var strCopy = str;

    if (sticky) {
      flags = replace$2(flags, 'y', '');
      if (indexOf$2(flags, 'g') === -1) {
        flags += 'g';
      }

      strCopy = stringSlice$3(str, re.lastIndex);
      // Support anchored sticky behavior.
      if (re.lastIndex > 0 && (!re.multiline || re.multiline && charAt$1(str, re.lastIndex - 1) !== '\n')) {
        source = '(?: ' + source + ')';
        strCopy = ' ' + strCopy;
        charsAdded++;
      }
      // ^(? + rx + ) is needed, in combination with some str slicing, to
      // simulate the 'y' flag.
      reCopy = new RegExp('^(?:' + source + ')', flags);
    }

    if (NPCG_INCLUDED) {
      reCopy = new RegExp('^' + source + '$(?!\\s)', flags);
    }
    if (UPDATES_LAST_INDEX_WRONG) lastIndex = re.lastIndex;

    match = functionCall$1(nativeExec, sticky ? reCopy : re, strCopy);

    if (sticky) {
      if (match) {
        match.input = stringSlice$3(match.input, charsAdded);
        match[0] = stringSlice$3(match[0], charsAdded);
        match.index = re.lastIndex;
        re.lastIndex += match[0].length;
      } else re.lastIndex = 0;
    } else if (UPDATES_LAST_INDEX_WRONG && match) {
      re.lastIndex = re.global ? match.index + match[0].length : lastIndex;
    }
    if (NPCG_INCLUDED && match && match.length > 1) {
      // Fix browsers whose `exec` methods don't consistently return `undefined`
      // for NPCG, like IE8. NOTE: This doesn't work for /(.?)?/
      functionCall$1(nativeReplace, match[0], reCopy, function () {
        for (i = 1; i < arguments.length - 2; i++) {
          if (arguments[i] === undefined) match[i] = undefined;
        }
      });
    }

    if (match && groups) {
      match.groups = object = objectCreate$1(null);
      for (i = 0; i < groups.length; i++) {
        group = groups[i];
        object[group[0]] = match[group[1]];
      }
    }

    return match;
  };
}

var regexpExec = patchedExec;

// `RegExp.prototype.exec` method
// https://tc39.es/ecma262/#sec-regexp.prototype.exec
_export$1({ target: 'RegExp', proto: true, forced: /./.exec !== regexpExec }, {
  exec: regexpExec
});

/**
 *
 * @param {Object<any,any>} obj
 * @return {Array<any>}
 */
function values$1(obj) {
  if (obj === null || typeof obj !== "object") {
    return [];
  }

  return Object.keys(obj).map(key => obj[key]);
}

function ownKeys$2(object, enumerableOnly) {
  var keys = Object.keys(object);

  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    enumerableOnly && (symbols = symbols.filter(function (sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    })), keys.push.apply(keys, symbols);
  }

  return keys;
}

function _objectSpread2(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = null != arguments[i] ? arguments[i] : {};
    i % 2 ? ownKeys$2(Object(source), !0).forEach(function (key) {
      _defineProperty(target, key, source[key]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys$2(Object(source)).forEach(function (key) {
      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
    });
  }

  return target;
}

function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
}

var defineProperty$5 = objectDefineProperty$1.f;

var UNSCOPABLES$1 = wellKnownSymbol$1('unscopables');
var ArrayPrototype$2 = Array.prototype;

// Array.prototype[@@unscopables]
// https://tc39.es/ecma262/#sec-array.prototype-@@unscopables
if (ArrayPrototype$2[UNSCOPABLES$1] == undefined) {
  defineProperty$5(ArrayPrototype$2, UNSCOPABLES$1, {
    configurable: true,
    value: objectCreate$1(null)
  });
}

// add a key to Array.prototype[@@unscopables]
var addToUnscopables$1 = function (key) {
  ArrayPrototype$2[UNSCOPABLES$1][key] = true;
};

var iterators$1 = {};

var correctPrototypeGetter$1 = !fails$1(function () {
  function F() { /* empty */ }
  F.prototype.constructor = null;
  // eslint-disable-next-line es/no-object-getprototypeof -- required for testing
  return Object.getPrototypeOf(new F()) !== F.prototype;
});

var IE_PROTO$3 = sharedKey$1('IE_PROTO');
var $Object$9 = Object;
var ObjectPrototype$1 = $Object$9.prototype;

// `Object.getPrototypeOf` method
// https://tc39.es/ecma262/#sec-object.getprototypeof
// eslint-disable-next-line es/no-object-getprototypeof -- safe
var objectGetPrototypeOf$1 = correctPrototypeGetter$1 ? $Object$9.getPrototypeOf : function (O) {
  var object = toObject$2(O);
  if (hasOwnProperty_1$1(object, IE_PROTO$3)) return object[IE_PROTO$3];
  var constructor = object.constructor;
  if (isCallable$1(constructor) && object instanceof constructor) {
    return constructor.prototype;
  } return object instanceof $Object$9 ? ObjectPrototype$1 : null;
};

var ITERATOR$7 = wellKnownSymbol$1('iterator');
var BUGGY_SAFARI_ITERATORS$2 = false;

// `%IteratorPrototype%` object
// https://tc39.es/ecma262/#sec-%iteratorprototype%-object
var IteratorPrototype$3, PrototypeOfArrayIteratorPrototype$1, arrayIterator$1;

/* eslint-disable es/no-array-prototype-keys -- safe */
if ([].keys) {
  arrayIterator$1 = [].keys();
  // Safari 8 has buggy iterators w/o `next`
  if (!('next' in arrayIterator$1)) BUGGY_SAFARI_ITERATORS$2 = true;
  else {
    PrototypeOfArrayIteratorPrototype$1 = objectGetPrototypeOf$1(objectGetPrototypeOf$1(arrayIterator$1));
    if (PrototypeOfArrayIteratorPrototype$1 !== Object.prototype) IteratorPrototype$3 = PrototypeOfArrayIteratorPrototype$1;
  }
}

var NEW_ITERATOR_PROTOTYPE$1 = !isObject$2(IteratorPrototype$3) || fails$1(function () {
  var test = {};
  // FF44- legacy iterators case
  return IteratorPrototype$3[ITERATOR$7].call(test) !== test;
});

if (NEW_ITERATOR_PROTOTYPE$1) IteratorPrototype$3 = {};

// `%IteratorPrototype%[@@iterator]()` method
// https://tc39.es/ecma262/#sec-%iteratorprototype%-@@iterator
if (!isCallable$1(IteratorPrototype$3[ITERATOR$7])) {
  defineBuiltIn$1(IteratorPrototype$3, ITERATOR$7, function () {
    return this;
  });
}

var iteratorsCore$1 = {
  IteratorPrototype: IteratorPrototype$3,
  BUGGY_SAFARI_ITERATORS: BUGGY_SAFARI_ITERATORS$2
};

var defineProperty$6 = objectDefineProperty$1.f;



var TO_STRING_TAG$5 = wellKnownSymbol$1('toStringTag');

var setToStringTag$1 = function (target, TAG, STATIC) {
  if (target && !STATIC) target = target.prototype;
  if (target && !hasOwnProperty_1$1(target, TO_STRING_TAG$5)) {
    defineProperty$6(target, TO_STRING_TAG$5, { configurable: true, value: TAG });
  }
};

var IteratorPrototype$4 = iteratorsCore$1.IteratorPrototype;





var returnThis$2 = function () { return this; };

var iteratorCreateConstructor$1 = function (IteratorConstructor, NAME, next, ENUMERABLE_NEXT) {
  var TO_STRING_TAG = NAME + ' Iterator';
  IteratorConstructor.prototype = objectCreate$1(IteratorPrototype$4, { next: createPropertyDescriptor$1(+!ENUMERABLE_NEXT, next) });
  setToStringTag$1(IteratorConstructor, TO_STRING_TAG, false);
  iterators$1[TO_STRING_TAG] = returnThis$2;
  return IteratorConstructor;
};

var $String$7 = String;
var $TypeError$j = TypeError;

var aPossiblePrototype$1 = function (argument) {
  if (typeof argument == 'object' || isCallable$1(argument)) return argument;
  throw $TypeError$j("Can't set " + $String$7(argument) + ' as a prototype');
};

/* eslint-disable no-proto -- safe */




// `Object.setPrototypeOf` method
// https://tc39.es/ecma262/#sec-object.setprototypeof
// Works with __proto__ only. Old v8 can't work with null proto objects.
// eslint-disable-next-line es/no-object-setprototypeof -- safe
var objectSetPrototypeOf$1 = Object.setPrototypeOf || ('__proto__' in {} ? function () {
  var CORRECT_SETTER = false;
  var test = {};
  var setter;
  try {
    // eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe
    setter = functionUncurryThis$1(Object.getOwnPropertyDescriptor(Object.prototype, '__proto__').set);
    setter(test, []);
    CORRECT_SETTER = test instanceof Array;
  } catch (error) { /* empty */ }
  return function setPrototypeOf(O, proto) {
    anObject$1(O);
    aPossiblePrototype$1(proto);
    if (CORRECT_SETTER) setter(O, proto);
    else O.__proto__ = proto;
    return O;
  };
}() : undefined);

var PROPER_FUNCTION_NAME$2 = functionName$1.PROPER;
var CONFIGURABLE_FUNCTION_NAME$1 = functionName$1.CONFIGURABLE;
var IteratorPrototype$5 = iteratorsCore$1.IteratorPrototype;
var BUGGY_SAFARI_ITERATORS$3 = iteratorsCore$1.BUGGY_SAFARI_ITERATORS;
var ITERATOR$8 = wellKnownSymbol$1('iterator');
var KEYS$1 = 'keys';
var VALUES$1 = 'values';
var ENTRIES$1 = 'entries';

var returnThis$3 = function () { return this; };

var iteratorDefine$1 = function (Iterable, NAME, IteratorConstructor, next, DEFAULT, IS_SET, FORCED) {
  iteratorCreateConstructor$1(IteratorConstructor, NAME, next);

  var getIterationMethod = function (KIND) {
    if (KIND === DEFAULT && defaultIterator) return defaultIterator;
    if (!BUGGY_SAFARI_ITERATORS$3 && KIND in IterablePrototype) return IterablePrototype[KIND];
    switch (KIND) {
      case KEYS$1: return function keys() { return new IteratorConstructor(this, KIND); };
      case VALUES$1: return function values() { return new IteratorConstructor(this, KIND); };
      case ENTRIES$1: return function entries() { return new IteratorConstructor(this, KIND); };
    } return function () { return new IteratorConstructor(this); };
  };

  var TO_STRING_TAG = NAME + ' Iterator';
  var INCORRECT_VALUES_NAME = false;
  var IterablePrototype = Iterable.prototype;
  var nativeIterator = IterablePrototype[ITERATOR$8]
    || IterablePrototype['@@iterator']
    || DEFAULT && IterablePrototype[DEFAULT];
  var defaultIterator = !BUGGY_SAFARI_ITERATORS$3 && nativeIterator || getIterationMethod(DEFAULT);
  var anyNativeIterator = NAME == 'Array' ? IterablePrototype.entries || nativeIterator : nativeIterator;
  var CurrentIteratorPrototype, methods, KEY;

  // fix native
  if (anyNativeIterator) {
    CurrentIteratorPrototype = objectGetPrototypeOf$1(anyNativeIterator.call(new Iterable()));
    if (CurrentIteratorPrototype !== Object.prototype && CurrentIteratorPrototype.next) {
      if ( objectGetPrototypeOf$1(CurrentIteratorPrototype) !== IteratorPrototype$5) {
        if (objectSetPrototypeOf$1) {
          objectSetPrototypeOf$1(CurrentIteratorPrototype, IteratorPrototype$5);
        } else if (!isCallable$1(CurrentIteratorPrototype[ITERATOR$8])) {
          defineBuiltIn$1(CurrentIteratorPrototype, ITERATOR$8, returnThis$3);
        }
      }
      // Set @@toStringTag to native iterators
      setToStringTag$1(CurrentIteratorPrototype, TO_STRING_TAG, true);
    }
  }

  // fix Array.prototype.{ values, @@iterator }.name in V8 / FF
  if (PROPER_FUNCTION_NAME$2 && DEFAULT == VALUES$1 && nativeIterator && nativeIterator.name !== VALUES$1) {
    if ( CONFIGURABLE_FUNCTION_NAME$1) {
      createNonEnumerableProperty$1(IterablePrototype, 'name', VALUES$1);
    } else {
      INCORRECT_VALUES_NAME = true;
      defaultIterator = function values() { return functionCall$1(nativeIterator, this); };
    }
  }

  // export additional methods
  if (DEFAULT) {
    methods = {
      values: getIterationMethod(VALUES$1),
      keys: IS_SET ? defaultIterator : getIterationMethod(KEYS$1),
      entries: getIterationMethod(ENTRIES$1)
    };
    if (FORCED) for (KEY in methods) {
      if (BUGGY_SAFARI_ITERATORS$3 || INCORRECT_VALUES_NAME || !(KEY in IterablePrototype)) {
        defineBuiltIn$1(IterablePrototype, KEY, methods[KEY]);
      }
    } else _export$1({ target: NAME, proto: true, forced: BUGGY_SAFARI_ITERATORS$3 || INCORRECT_VALUES_NAME }, methods);
  }

  // define iterator
  if ( IterablePrototype[ITERATOR$8] !== defaultIterator) {
    defineBuiltIn$1(IterablePrototype, ITERATOR$8, defaultIterator, { name: DEFAULT });
  }
  iterators$1[NAME] = defaultIterator;

  return methods;
};

// `CreateIterResultObject` abstract operation
// https://tc39.es/ecma262/#sec-createiterresultobject
var createIterResultObject$1 = function (value, done) {
  return { value: value, done: done };
};

var defineProperty$7 = objectDefineProperty$1.f;





var ARRAY_ITERATOR$1 = 'Array Iterator';
var setInternalState$3 = internalState$1.set;
var getInternalState$2 = internalState$1.getterFor(ARRAY_ITERATOR$1);

// `Array.prototype.entries` method
// https://tc39.es/ecma262/#sec-array.prototype.entries
// `Array.prototype.keys` method
// https://tc39.es/ecma262/#sec-array.prototype.keys
// `Array.prototype.values` method
// https://tc39.es/ecma262/#sec-array.prototype.values
// `Array.prototype[@@iterator]` method
// https://tc39.es/ecma262/#sec-array.prototype-@@iterator
// `CreateArrayIterator` internal method
// https://tc39.es/ecma262/#sec-createarrayiterator
var es_array_iterator$1 = iteratorDefine$1(Array, 'Array', function (iterated, kind) {
  setInternalState$3(this, {
    type: ARRAY_ITERATOR$1,
    target: toIndexedObject$1(iterated), // target
    index: 0,                          // next index
    kind: kind                         // kind
  });
// `%ArrayIteratorPrototype%.next` method
// https://tc39.es/ecma262/#sec-%arrayiteratorprototype%.next
}, function () {
  var state = getInternalState$2(this);
  var target = state.target;
  var kind = state.kind;
  var index = state.index++;
  if (!target || index >= target.length) {
    state.target = undefined;
    return createIterResultObject$1(undefined, true);
  }
  if (kind == 'keys') return createIterResultObject$1(index, false);
  if (kind == 'values') return createIterResultObject$1(target[index], false);
  return createIterResultObject$1([index, target[index]], false);
}, 'values');

// argumentsList[@@iterator] is %ArrayProto_values%
// https://tc39.es/ecma262/#sec-createunmappedargumentsobject
// https://tc39.es/ecma262/#sec-createmappedargumentsobject
var values$2 = iterators$1.Arguments = iterators$1.Array;

// https://tc39.es/ecma262/#sec-array.prototype-@@unscopables
addToUnscopables$1('keys');
addToUnscopables$1('values');
addToUnscopables$1('entries');

// V8 ~ Chrome 45- bug
if ( descriptors$1 && values$2.name !== 'values') try {
  defineProperty$7(values$2, 'name', { value: 'values' });
} catch (error) { /* empty */ }

var engineIsNode$1 = classofRaw$1(global_1$1.process) == 'process';

var SPECIES$3 = wellKnownSymbol$1('species');

var setSpecies$1 = function (CONSTRUCTOR_NAME) {
  var Constructor = getBuiltIn$1(CONSTRUCTOR_NAME);
  var defineProperty = objectDefineProperty$1.f;

  if (descriptors$1 && Constructor && !Constructor[SPECIES$3]) {
    defineProperty(Constructor, SPECIES$3, {
      configurable: true,
      get: function () { return this; }
    });
  }
};

var $TypeError$k = TypeError;

var anInstance$1 = function (it, Prototype) {
  if (objectIsPrototypeOf$1(Prototype, it)) return it;
  throw $TypeError$k('Incorrect invocation');
};

var noop$1 = function () { /* empty */ };
var empty$1 = [];
var construct$1 = getBuiltIn$1('Reflect', 'construct');
var constructorRegExp$1 = /^\s*(?:class|function)\b/;
var exec$1 = functionUncurryThis$1(constructorRegExp$1.exec);
var INCORRECT_TO_STRING$1 = !constructorRegExp$1.exec(noop$1);

var isConstructorModern$1 = function isConstructor(argument) {
  if (!isCallable$1(argument)) return false;
  try {
    construct$1(noop$1, empty$1, argument);
    return true;
  } catch (error) {
    return false;
  }
};

var isConstructorLegacy$1 = function isConstructor(argument) {
  if (!isCallable$1(argument)) return false;
  switch (classof$1(argument)) {
    case 'AsyncFunction':
    case 'GeneratorFunction':
    case 'AsyncGeneratorFunction': return false;
  }
  try {
    // we can't check .prototype since constructors produced by .bind haven't it
    // `Function#toString` throws on some built-it function in some legacy engines
    // (for example, `DOMQuad` and similar in FF41-)
    return INCORRECT_TO_STRING$1 || !!exec$1(constructorRegExp$1, inspectSource$1(argument));
  } catch (error) {
    return true;
  }
};

isConstructorLegacy$1.sham = true;

// `IsConstructor` abstract operation
// https://tc39.es/ecma262/#sec-isconstructor
var isConstructor$1 = !construct$1 || fails$1(function () {
  var called;
  return isConstructorModern$1(isConstructorModern$1.call)
    || !isConstructorModern$1(Object)
    || !isConstructorModern$1(function () { called = true; })
    || called;
}) ? isConstructorLegacy$1 : isConstructorModern$1;

var $TypeError$l = TypeError;

// `Assert: IsConstructor(argument) is true`
var aConstructor$1 = function (argument) {
  if (isConstructor$1(argument)) return argument;
  throw $TypeError$l(tryToString$1(argument) + ' is not a constructor');
};

var SPECIES$4 = wellKnownSymbol$1('species');

// `SpeciesConstructor` abstract operation
// https://tc39.es/ecma262/#sec-speciesconstructor
var speciesConstructor$1 = function (O, defaultConstructor) {
  var C = anObject$1(O).constructor;
  var S;
  return C === undefined || isNullOrUndefined$1(S = anObject$1(C)[SPECIES$4]) ? defaultConstructor : aConstructor$1(S);
};

var FunctionPrototype$5 = Function.prototype;
var apply$1 = FunctionPrototype$5.apply;
var call$5 = FunctionPrototype$5.call;

// eslint-disable-next-line es/no-reflect -- safe
var functionApply$1 = typeof Reflect == 'object' && Reflect.apply || (functionBindNative$1 ? call$5.bind(apply$1) : function () {
  return call$5.apply(apply$1, arguments);
});

var bind$2 = functionUncurryThis$1(functionUncurryThis$1.bind);

// optional / simple context binding
var functionBindContext$1 = function (fn, that) {
  aCallable$1(fn);
  return that === undefined ? fn : functionBindNative$1 ? bind$2(fn, that) : function (/* ...args */) {
    return fn.apply(that, arguments);
  };
};

var arraySlice$1 = functionUncurryThis$1([].slice);

var $TypeError$m = TypeError;

var validateArgumentsLength$1 = function (passed, required) {
  if (passed < required) throw $TypeError$m('Not enough arguments');
  return passed;
};

var engineIsIos$1 = /(?:ipad|iphone|ipod).*applewebkit/i.test(engineUserAgent$1);

var set$3 = global_1$1.setImmediate;
var clear$1 = global_1$1.clearImmediate;
var process$6 = global_1$1.process;
var Dispatch$1 = global_1$1.Dispatch;
var Function$2 = global_1$1.Function;
var MessageChannel$1 = global_1$1.MessageChannel;
var String$2 = global_1$1.String;
var counter$1 = 0;
var queue$2 = {};
var ONREADYSTATECHANGE$1 = 'onreadystatechange';
var $location$1, defer$1, channel$1, port$1;

try {
  // Deno throws a ReferenceError on `location` access without `--location` flag
  $location$1 = global_1$1.location;
} catch (error) { /* empty */ }

var run$1 = function (id) {
  if (hasOwnProperty_1$1(queue$2, id)) {
    var fn = queue$2[id];
    delete queue$2[id];
    fn();
  }
};

var runner$1 = function (id) {
  return function () {
    run$1(id);
  };
};

var listener$1 = function (event) {
  run$1(event.data);
};

var post$1 = function (id) {
  // old engines have not location.origin
  global_1$1.postMessage(String$2(id), $location$1.protocol + '//' + $location$1.host);
};

// Node.js 0.9+ & IE10+ has setImmediate, otherwise:
if (!set$3 || !clear$1) {
  set$3 = function setImmediate(handler) {
    validateArgumentsLength$1(arguments.length, 1);
    var fn = isCallable$1(handler) ? handler : Function$2(handler);
    var args = arraySlice$1(arguments, 1);
    queue$2[++counter$1] = function () {
      functionApply$1(fn, undefined, args);
    };
    defer$1(counter$1);
    return counter$1;
  };
  clear$1 = function clearImmediate(id) {
    delete queue$2[id];
  };
  // Node.js 0.8-
  if (engineIsNode$1) {
    defer$1 = function (id) {
      process$6.nextTick(runner$1(id));
    };
  // Sphere (JS game engine) Dispatch API
  } else if (Dispatch$1 && Dispatch$1.now) {
    defer$1 = function (id) {
      Dispatch$1.now(runner$1(id));
    };
  // Browsers with MessageChannel, includes WebWorkers
  // except iOS - https://github.com/zloirock/core-js/issues/624
  } else if (MessageChannel$1 && !engineIsIos$1) {
    channel$1 = new MessageChannel$1();
    port$1 = channel$1.port2;
    channel$1.port1.onmessage = listener$1;
    defer$1 = functionBindContext$1(port$1.postMessage, port$1);
  // Browsers with postMessage, skip WebWorkers
  // IE8 has postMessage, but it's sync & typeof its postMessage is 'object'
  } else if (
    global_1$1.addEventListener &&
    isCallable$1(global_1$1.postMessage) &&
    !global_1$1.importScripts &&
    $location$1 && $location$1.protocol !== 'file:' &&
    !fails$1(post$1)
  ) {
    defer$1 = post$1;
    global_1$1.addEventListener('message', listener$1, false);
  // IE8-
  } else if (ONREADYSTATECHANGE$1 in documentCreateElement$1('script')) {
    defer$1 = function (id) {
      html$1.appendChild(documentCreateElement$1('script'))[ONREADYSTATECHANGE$1] = function () {
        html$1.removeChild(this);
        run$1(id);
      };
    };
  // Rest old browsers
  } else {
    defer$1 = function (id) {
      setTimeout(runner$1(id), 0);
    };
  }
}

var task$2 = {
  set: set$3,
  clear: clear$1
};

var engineIsIosPebble$1 = /ipad|iphone|ipod/i.test(engineUserAgent$1) && global_1$1.Pebble !== undefined;

var engineIsWebosWebkit$1 = /web0s(?!.*chrome)/i.test(engineUserAgent$1);

var getOwnPropertyDescriptor$6 = objectGetOwnPropertyDescriptor$1.f;
var macrotask$1 = task$2.set;





var MutationObserver$1 = global_1$1.MutationObserver || global_1$1.WebKitMutationObserver;
var document$5 = global_1$1.document;
var process$7 = global_1$1.process;
var Promise$2 = global_1$1.Promise;
// Node.js 11 shows ExperimentalWarning on getting `queueMicrotask`
var queueMicrotaskDescriptor$1 = getOwnPropertyDescriptor$6(global_1$1, 'queueMicrotask');
var queueMicrotask$1 = queueMicrotaskDescriptor$1 && queueMicrotaskDescriptor$1.value;

var flush$1, head$1, last$1, notify$2, toggle$1, node$1, promise$1, then$1;

// modern engines have queueMicrotask method
if (!queueMicrotask$1) {
  flush$1 = function () {
    var parent, fn;
    if (engineIsNode$1 && (parent = process$7.domain)) parent.exit();
    while (head$1) {
      fn = head$1.fn;
      head$1 = head$1.next;
      try {
        fn();
      } catch (error) {
        if (head$1) notify$2();
        else last$1 = undefined;
        throw error;
      }
    } last$1 = undefined;
    if (parent) parent.enter();
  };

  // browsers with MutationObserver, except iOS - https://github.com/zloirock/core-js/issues/339
  // also except WebOS Webkit https://github.com/zloirock/core-js/issues/898
  if (!engineIsIos$1 && !engineIsNode$1 && !engineIsWebosWebkit$1 && MutationObserver$1 && document$5) {
    toggle$1 = true;
    node$1 = document$5.createTextNode('');
    new MutationObserver$1(flush$1).observe(node$1, { characterData: true });
    notify$2 = function () {
      node$1.data = toggle$1 = !toggle$1;
    };
  // environments with maybe non-completely correct, but existent Promise
  } else if (!engineIsIosPebble$1 && Promise$2 && Promise$2.resolve) {
    // Promise.resolve without an argument throws an error in LG WebOS 2
    promise$1 = Promise$2.resolve(undefined);
    // workaround of WebKit ~ iOS Safari 10.1 bug
    promise$1.constructor = Promise$2;
    then$1 = functionBindContext$1(promise$1.then, promise$1);
    notify$2 = function () {
      then$1(flush$1);
    };
  // Node.js without promises
  } else if (engineIsNode$1) {
    notify$2 = function () {
      process$7.nextTick(flush$1);
    };
  // for other environments - macrotask based on:
  // - setImmediate
  // - MessageChannel
  // - window.postMessage
  // - onreadystatechange
  // - setTimeout
  } else {
    // strange IE + webpack dev server bug - use .bind(global)
    macrotask$1 = functionBindContext$1(macrotask$1, global_1$1);
    notify$2 = function () {
      macrotask$1(flush$1);
    };
  }
}

var microtask$1 = queueMicrotask$1 || function (fn) {
  var task = { fn: fn, next: undefined };
  if (last$1) last$1.next = task;
  if (!head$1) {
    head$1 = task;
    notify$2();
  } last$1 = task;
};

var hostReportErrors$1 = function (a, b) {
  var console = global_1$1.console;
  if (console && console.error) {
    arguments.length == 1 ? console.error(a) : console.error(a, b);
  }
};

var perform$1 = function (exec) {
  try {
    return { error: false, value: exec() };
  } catch (error) {
    return { error: true, value: error };
  }
};

var Queue$1 = function () {
  this.head = null;
  this.tail = null;
};

Queue$1.prototype = {
  add: function (item) {
    var entry = { item: item, next: null };
    if (this.head) this.tail.next = entry;
    else this.head = entry;
    this.tail = entry;
  },
  get: function () {
    var entry = this.head;
    if (entry) {
      this.head = entry.next;
      if (this.tail === entry) this.tail = null;
      return entry.item;
    }
  }
};

var queue$3 = Queue$1;

var promiseNativeConstructor$1 = global_1$1.Promise;

/* global Deno -- Deno case */
var engineIsDeno$1 = typeof Deno == 'object' && Deno && typeof Deno.version == 'object';

var engineIsBrowser$1 = !engineIsDeno$1 && !engineIsNode$1
  && typeof window == 'object'
  && typeof document == 'object';

var NativePromisePrototype$3 = promiseNativeConstructor$1 && promiseNativeConstructor$1.prototype;
var SPECIES$5 = wellKnownSymbol$1('species');
var SUBCLASSING$1 = false;
var NATIVE_PROMISE_REJECTION_EVENT$2 = isCallable$1(global_1$1.PromiseRejectionEvent);

var FORCED_PROMISE_CONSTRUCTOR$6 = isForced_1$1('Promise', function () {
  var PROMISE_CONSTRUCTOR_SOURCE = inspectSource$1(promiseNativeConstructor$1);
  var GLOBAL_CORE_JS_PROMISE = PROMISE_CONSTRUCTOR_SOURCE !== String(promiseNativeConstructor$1);
  // V8 6.6 (Node 10 and Chrome 66) have a bug with resolving custom thenables
  // https://bugs.chromium.org/p/chromium/issues/detail?id=830565
  // We can't detect it synchronously, so just check versions
  if (!GLOBAL_CORE_JS_PROMISE && engineV8Version$1 === 66) return true;
  // We can't use @@species feature detection in V8 since it causes
  // deoptimization and performance degradation
  // https://github.com/zloirock/core-js/issues/679
  if (!engineV8Version$1 || engineV8Version$1 < 51 || !/native code/.test(PROMISE_CONSTRUCTOR_SOURCE)) {
    // Detect correctness of subclassing with @@species support
    var promise = new promiseNativeConstructor$1(function (resolve) { resolve(1); });
    var FakePromise = function (exec) {
      exec(function () { /* empty */ }, function () { /* empty */ });
    };
    var constructor = promise.constructor = {};
    constructor[SPECIES$5] = FakePromise;
    SUBCLASSING$1 = promise.then(function () { /* empty */ }) instanceof FakePromise;
    if (!SUBCLASSING$1) return true;
  // Unhandled rejections tracking support, NodeJS Promise without it fails @@species test
  } return !GLOBAL_CORE_JS_PROMISE && (engineIsBrowser$1 || engineIsDeno$1) && !NATIVE_PROMISE_REJECTION_EVENT$2;
});

var promiseConstructorDetection$1 = {
  CONSTRUCTOR: FORCED_PROMISE_CONSTRUCTOR$6,
  REJECTION_EVENT: NATIVE_PROMISE_REJECTION_EVENT$2,
  SUBCLASSING: SUBCLASSING$1
};

var $TypeError$n = TypeError;

var PromiseCapability$1 = function (C) {
  var resolve, reject;
  this.promise = new C(function ($$resolve, $$reject) {
    if (resolve !== undefined || reject !== undefined) throw $TypeError$n('Bad Promise constructor');
    resolve = $$resolve;
    reject = $$reject;
  });
  this.resolve = aCallable$1(resolve);
  this.reject = aCallable$1(reject);
};

// `NewPromiseCapability` abstract operation
// https://tc39.es/ecma262/#sec-newpromisecapability
var f$d = function (C) {
  return new PromiseCapability$1(C);
};

var newPromiseCapability$2 = {
	f: f$d
};

var task$3 = task$2.set;









var PROMISE$1 = 'Promise';
var FORCED_PROMISE_CONSTRUCTOR$7 = promiseConstructorDetection$1.CONSTRUCTOR;
var NATIVE_PROMISE_REJECTION_EVENT$3 = promiseConstructorDetection$1.REJECTION_EVENT;
var NATIVE_PROMISE_SUBCLASSING$1 = promiseConstructorDetection$1.SUBCLASSING;
var getInternalPromiseState$1 = internalState$1.getterFor(PROMISE$1);
var setInternalState$4 = internalState$1.set;
var NativePromisePrototype$4 = promiseNativeConstructor$1 && promiseNativeConstructor$1.prototype;
var PromiseConstructor$1 = promiseNativeConstructor$1;
var PromisePrototype$1 = NativePromisePrototype$4;
var TypeError$5 = global_1$1.TypeError;
var document$6 = global_1$1.document;
var process$8 = global_1$1.process;
var newPromiseCapability$3 = newPromiseCapability$2.f;
var newGenericPromiseCapability$1 = newPromiseCapability$3;

var DISPATCH_EVENT$1 = !!(document$6 && document$6.createEvent && global_1$1.dispatchEvent);
var UNHANDLED_REJECTION$1 = 'unhandledrejection';
var REJECTION_HANDLED$1 = 'rejectionhandled';
var PENDING$1 = 0;
var FULFILLED$1 = 1;
var REJECTED$1 = 2;
var HANDLED$1 = 1;
var UNHANDLED$1 = 2;

var Internal$1, OwnPromiseCapability$1, PromiseWrapper$1, nativeThen$1;

// helpers
var isThenable$1 = function (it) {
  var then;
  return isObject$2(it) && isCallable$1(then = it.then) ? then : false;
};

var callReaction$1 = function (reaction, state) {
  var value = state.value;
  var ok = state.state == FULFILLED$1;
  var handler = ok ? reaction.ok : reaction.fail;
  var resolve = reaction.resolve;
  var reject = reaction.reject;
  var domain = reaction.domain;
  var result, then, exited;
  try {
    if (handler) {
      if (!ok) {
        if (state.rejection === UNHANDLED$1) onHandleUnhandled$1(state);
        state.rejection = HANDLED$1;
      }
      if (handler === true) result = value;
      else {
        if (domain) domain.enter();
        result = handler(value); // can throw
        if (domain) {
          domain.exit();
          exited = true;
        }
      }
      if (result === reaction.promise) {
        reject(TypeError$5('Promise-chain cycle'));
      } else if (then = isThenable$1(result)) {
        functionCall$1(then, result, resolve, reject);
      } else resolve(result);
    } else reject(value);
  } catch (error) {
    if (domain && !exited) domain.exit();
    reject(error);
  }
};

var notify$3 = function (state, isReject) {
  if (state.notified) return;
  state.notified = true;
  microtask$1(function () {
    var reactions = state.reactions;
    var reaction;
    while (reaction = reactions.get()) {
      callReaction$1(reaction, state);
    }
    state.notified = false;
    if (isReject && !state.rejection) onUnhandled$1(state);
  });
};

var dispatchEvent$1 = function (name, promise, reason) {
  var event, handler;
  if (DISPATCH_EVENT$1) {
    event = document$6.createEvent('Event');
    event.promise = promise;
    event.reason = reason;
    event.initEvent(name, false, true);
    global_1$1.dispatchEvent(event);
  } else event = { promise: promise, reason: reason };
  if (!NATIVE_PROMISE_REJECTION_EVENT$3 && (handler = global_1$1['on' + name])) handler(event);
  else if (name === UNHANDLED_REJECTION$1) hostReportErrors$1('Unhandled promise rejection', reason);
};

var onUnhandled$1 = function (state) {
  functionCall$1(task$3, global_1$1, function () {
    var promise = state.facade;
    var value = state.value;
    var IS_UNHANDLED = isUnhandled$1(state);
    var result;
    if (IS_UNHANDLED) {
      result = perform$1(function () {
        if (engineIsNode$1) {
          process$8.emit('unhandledRejection', value, promise);
        } else dispatchEvent$1(UNHANDLED_REJECTION$1, promise, value);
      });
      // Browsers should not trigger `rejectionHandled` event if it was handled here, NodeJS - should
      state.rejection = engineIsNode$1 || isUnhandled$1(state) ? UNHANDLED$1 : HANDLED$1;
      if (result.error) throw result.value;
    }
  });
};

var isUnhandled$1 = function (state) {
  return state.rejection !== HANDLED$1 && !state.parent;
};

var onHandleUnhandled$1 = function (state) {
  functionCall$1(task$3, global_1$1, function () {
    var promise = state.facade;
    if (engineIsNode$1) {
      process$8.emit('rejectionHandled', promise);
    } else dispatchEvent$1(REJECTION_HANDLED$1, promise, state.value);
  });
};

var bind$3 = function (fn, state, unwrap) {
  return function (value) {
    fn(state, value, unwrap);
  };
};

var internalReject$1 = function (state, value, unwrap) {
  if (state.done) return;
  state.done = true;
  if (unwrap) state = unwrap;
  state.value = value;
  state.state = REJECTED$1;
  notify$3(state, true);
};

var internalResolve$1 = function (state, value, unwrap) {
  if (state.done) return;
  state.done = true;
  if (unwrap) state = unwrap;
  try {
    if (state.facade === value) throw TypeError$5("Promise can't be resolved itself");
    var then = isThenable$1(value);
    if (then) {
      microtask$1(function () {
        var wrapper = { done: false };
        try {
          functionCall$1(then, value,
            bind$3(internalResolve$1, wrapper, state),
            bind$3(internalReject$1, wrapper, state)
          );
        } catch (error) {
          internalReject$1(wrapper, error, state);
        }
      });
    } else {
      state.value = value;
      state.state = FULFILLED$1;
      notify$3(state, false);
    }
  } catch (error) {
    internalReject$1({ done: false }, error, state);
  }
};

// constructor polyfill
if (FORCED_PROMISE_CONSTRUCTOR$7) {
  // 25.4.3.1 Promise(executor)
  PromiseConstructor$1 = function Promise(executor) {
    anInstance$1(this, PromisePrototype$1);
    aCallable$1(executor);
    functionCall$1(Internal$1, this);
    var state = getInternalPromiseState$1(this);
    try {
      executor(bind$3(internalResolve$1, state), bind$3(internalReject$1, state));
    } catch (error) {
      internalReject$1(state, error);
    }
  };

  PromisePrototype$1 = PromiseConstructor$1.prototype;

  // eslint-disable-next-line no-unused-vars -- required for `.length`
  Internal$1 = function Promise(executor) {
    setInternalState$4(this, {
      type: PROMISE$1,
      done: false,
      notified: false,
      parent: false,
      reactions: new queue$3(),
      rejection: false,
      state: PENDING$1,
      value: undefined
    });
  };

  // `Promise.prototype.then` method
  // https://tc39.es/ecma262/#sec-promise.prototype.then
  Internal$1.prototype = defineBuiltIn$1(PromisePrototype$1, 'then', function then(onFulfilled, onRejected) {
    var state = getInternalPromiseState$1(this);
    var reaction = newPromiseCapability$3(speciesConstructor$1(this, PromiseConstructor$1));
    state.parent = true;
    reaction.ok = isCallable$1(onFulfilled) ? onFulfilled : true;
    reaction.fail = isCallable$1(onRejected) && onRejected;
    reaction.domain = engineIsNode$1 ? process$8.domain : undefined;
    if (state.state == PENDING$1) state.reactions.add(reaction);
    else microtask$1(function () {
      callReaction$1(reaction, state);
    });
    return reaction.promise;
  });

  OwnPromiseCapability$1 = function () {
    var promise = new Internal$1();
    var state = getInternalPromiseState$1(promise);
    this.promise = promise;
    this.resolve = bind$3(internalResolve$1, state);
    this.reject = bind$3(internalReject$1, state);
  };

  newPromiseCapability$2.f = newPromiseCapability$3 = function (C) {
    return C === PromiseConstructor$1 || C === PromiseWrapper$1
      ? new OwnPromiseCapability$1(C)
      : newGenericPromiseCapability$1(C);
  };

  if ( isCallable$1(promiseNativeConstructor$1) && NativePromisePrototype$4 !== Object.prototype) {
    nativeThen$1 = NativePromisePrototype$4.then;

    if (!NATIVE_PROMISE_SUBCLASSING$1) {
      // make `Promise#then` return a polyfilled `Promise` for native promise-based APIs
      defineBuiltIn$1(NativePromisePrototype$4, 'then', function then(onFulfilled, onRejected) {
        var that = this;
        return new PromiseConstructor$1(function (resolve, reject) {
          functionCall$1(nativeThen$1, that, resolve, reject);
        }).then(onFulfilled, onRejected);
      // https://github.com/zloirock/core-js/issues/640
      }, { unsafe: true });
    }

    // make `.constructor === Promise` work for native promise-based APIs
    try {
      delete NativePromisePrototype$4.constructor;
    } catch (error) { /* empty */ }

    // make `instanceof Promise` work for native promise-based APIs
    if (objectSetPrototypeOf$1) {
      objectSetPrototypeOf$1(NativePromisePrototype$4, PromisePrototype$1);
    }
  }
}

_export$1({ global: true, constructor: true, wrap: true, forced: FORCED_PROMISE_CONSTRUCTOR$7 }, {
  Promise: PromiseConstructor$1
});

setToStringTag$1(PromiseConstructor$1, PROMISE$1, false);
setSpecies$1(PROMISE$1);

var ITERATOR$9 = wellKnownSymbol$1('iterator');
var ArrayPrototype$3 = Array.prototype;

// check on default Array iterator
var isArrayIteratorMethod$1 = function (it) {
  return it !== undefined && (iterators$1.Array === it || ArrayPrototype$3[ITERATOR$9] === it);
};

var ITERATOR$a = wellKnownSymbol$1('iterator');

var getIteratorMethod$1 = function (it) {
  if (!isNullOrUndefined$1(it)) return getMethod$1(it, ITERATOR$a)
    || getMethod$1(it, '@@iterator')
    || iterators$1[classof$1(it)];
};

var $TypeError$o = TypeError;

var getIterator$1 = function (argument, usingIterator) {
  var iteratorMethod = arguments.length < 2 ? getIteratorMethod$1(argument) : usingIterator;
  if (aCallable$1(iteratorMethod)) return anObject$1(functionCall$1(iteratorMethod, argument));
  throw $TypeError$o(tryToString$1(argument) + ' is not iterable');
};

var iteratorClose$1 = function (iterator, kind, value) {
  var innerResult, innerError;
  anObject$1(iterator);
  try {
    innerResult = getMethod$1(iterator, 'return');
    if (!innerResult) {
      if (kind === 'throw') throw value;
      return value;
    }
    innerResult = functionCall$1(innerResult, iterator);
  } catch (error) {
    innerError = true;
    innerResult = error;
  }
  if (kind === 'throw') throw value;
  if (innerError) throw innerResult;
  anObject$1(innerResult);
  return value;
};

var $TypeError$p = TypeError;

var Result$1 = function (stopped, result) {
  this.stopped = stopped;
  this.result = result;
};

var ResultPrototype$1 = Result$1.prototype;

var iterate$1 = function (iterable, unboundFunction, options) {
  var that = options && options.that;
  var AS_ENTRIES = !!(options && options.AS_ENTRIES);
  var IS_RECORD = !!(options && options.IS_RECORD);
  var IS_ITERATOR = !!(options && options.IS_ITERATOR);
  var INTERRUPTED = !!(options && options.INTERRUPTED);
  var fn = functionBindContext$1(unboundFunction, that);
  var iterator, iterFn, index, length, result, next, step;

  var stop = function (condition) {
    if (iterator) iteratorClose$1(iterator, 'normal', condition);
    return new Result$1(true, condition);
  };

  var callFn = function (value) {
    if (AS_ENTRIES) {
      anObject$1(value);
      return INTERRUPTED ? fn(value[0], value[1], stop) : fn(value[0], value[1]);
    } return INTERRUPTED ? fn(value, stop) : fn(value);
  };

  if (IS_RECORD) {
    iterator = iterable.iterator;
  } else if (IS_ITERATOR) {
    iterator = iterable;
  } else {
    iterFn = getIteratorMethod$1(iterable);
    if (!iterFn) throw $TypeError$p(tryToString$1(iterable) + ' is not iterable');
    // optimisation for array iterators
    if (isArrayIteratorMethod$1(iterFn)) {
      for (index = 0, length = lengthOfArrayLike$1(iterable); length > index; index++) {
        result = callFn(iterable[index]);
        if (result && objectIsPrototypeOf$1(ResultPrototype$1, result)) return result;
      } return new Result$1(false);
    }
    iterator = getIterator$1(iterable, iterFn);
  }

  next = IS_RECORD ? iterable.next : iterator.next;
  while (!(step = functionCall$1(next, iterator)).done) {
    try {
      result = callFn(step.value);
    } catch (error) {
      iteratorClose$1(iterator, 'throw', error);
    }
    if (typeof result == 'object' && result && objectIsPrototypeOf$1(ResultPrototype$1, result)) return result;
  } return new Result$1(false);
};

var ITERATOR$b = wellKnownSymbol$1('iterator');
var SAFE_CLOSING$1 = false;

try {
  var called$1 = 0;
  var iteratorWithReturn$1 = {
    next: function () {
      return { done: !!called$1++ };
    },
    'return': function () {
      SAFE_CLOSING$1 = true;
    }
  };
  iteratorWithReturn$1[ITERATOR$b] = function () {
    return this;
  };
  // eslint-disable-next-line es/no-array-from, no-throw-literal -- required for testing
  Array.from(iteratorWithReturn$1, function () { throw 2; });
} catch (error) { /* empty */ }

var checkCorrectnessOfIteration$1 = function (exec, SKIP_CLOSING) {
  if (!SKIP_CLOSING && !SAFE_CLOSING$1) return false;
  var ITERATION_SUPPORT = false;
  try {
    var object = {};
    object[ITERATOR$b] = function () {
      return {
        next: function () {
          return { done: ITERATION_SUPPORT = true };
        }
      };
    };
    exec(object);
  } catch (error) { /* empty */ }
  return ITERATION_SUPPORT;
};

var FORCED_PROMISE_CONSTRUCTOR$8 = promiseConstructorDetection$1.CONSTRUCTOR;

var promiseStaticsIncorrectIteration$1 = FORCED_PROMISE_CONSTRUCTOR$8 || !checkCorrectnessOfIteration$1(function (iterable) {
  promiseNativeConstructor$1.all(iterable).then(undefined, function () { /* empty */ });
});

// `Promise.all` method
// https://tc39.es/ecma262/#sec-promise.all
_export$1({ target: 'Promise', stat: true, forced: promiseStaticsIncorrectIteration$1 }, {
  all: function all(iterable) {
    var C = this;
    var capability = newPromiseCapability$2.f(C);
    var resolve = capability.resolve;
    var reject = capability.reject;
    var result = perform$1(function () {
      var $promiseResolve = aCallable$1(C.resolve);
      var values = [];
      var counter = 0;
      var remaining = 1;
      iterate$1(iterable, function (promise) {
        var index = counter++;
        var alreadyCalled = false;
        remaining++;
        functionCall$1($promiseResolve, C, promise).then(function (value) {
          if (alreadyCalled) return;
          alreadyCalled = true;
          values[index] = value;
          --remaining || resolve(values);
        }, reject);
      });
      --remaining || resolve(values);
    });
    if (result.error) reject(result.value);
    return capability.promise;
  }
});

var FORCED_PROMISE_CONSTRUCTOR$9 = promiseConstructorDetection$1.CONSTRUCTOR;





var NativePromisePrototype$5 = promiseNativeConstructor$1 && promiseNativeConstructor$1.prototype;

// `Promise.prototype.catch` method
// https://tc39.es/ecma262/#sec-promise.prototype.catch
_export$1({ target: 'Promise', proto: true, forced: FORCED_PROMISE_CONSTRUCTOR$9, real: true }, {
  'catch': function (onRejected) {
    return this.then(undefined, onRejected);
  }
});

// makes sure that native promise-based APIs `Promise#catch` properly works with patched `Promise#then`
if ( isCallable$1(promiseNativeConstructor$1)) {
  var method$1 = getBuiltIn$1('Promise').prototype['catch'];
  if (NativePromisePrototype$5['catch'] !== method$1) {
    defineBuiltIn$1(NativePromisePrototype$5, 'catch', method$1, { unsafe: true });
  }
}

// `Promise.race` method
// https://tc39.es/ecma262/#sec-promise.race
_export$1({ target: 'Promise', stat: true, forced: promiseStaticsIncorrectIteration$1 }, {
  race: function race(iterable) {
    var C = this;
    var capability = newPromiseCapability$2.f(C);
    var reject = capability.reject;
    var result = perform$1(function () {
      var $promiseResolve = aCallable$1(C.resolve);
      iterate$1(iterable, function (promise) {
        functionCall$1($promiseResolve, C, promise).then(capability.resolve, reject);
      });
    });
    if (result.error) reject(result.value);
    return capability.promise;
  }
});

var FORCED_PROMISE_CONSTRUCTOR$a = promiseConstructorDetection$1.CONSTRUCTOR;

// `Promise.reject` method
// https://tc39.es/ecma262/#sec-promise.reject
_export$1({ target: 'Promise', stat: true, forced: FORCED_PROMISE_CONSTRUCTOR$a }, {
  reject: function reject(r) {
    var capability = newPromiseCapability$2.f(this);
    functionCall$1(capability.reject, undefined, r);
    return capability.promise;
  }
});

var promiseResolve$1 = function (C, x) {
  anObject$1(C);
  if (isObject$2(x) && x.constructor === C) return x;
  var promiseCapability = newPromiseCapability$2.f(C);
  var resolve = promiseCapability.resolve;
  resolve(x);
  return promiseCapability.promise;
};

var FORCED_PROMISE_CONSTRUCTOR$b = promiseConstructorDetection$1.CONSTRUCTOR;


var PromiseConstructorWrapper$1 = getBuiltIn$1('Promise');

// `Promise.resolve` method
// https://tc39.es/ecma262/#sec-promise.resolve
_export$1({ target: 'Promise', stat: true, forced:  FORCED_PROMISE_CONSTRUCTOR$b }, {
  resolve: function resolve(x) {
    return promiseResolve$1( this, x);
  }
});

/* eslint-disable import/prefer-default-export */
const DECISIONING_METHOD = {
  ON_DEVICE: "on-device",
  SERVER_SIDE: "server-side",
  HYBRID: "hybrid"
};
const EXECUTION_MODE = {
  EDGE: "edge",
  LOCAL: "local"
};

const AT_PREFIX = "AT:";
const NOOP_LOGGER = {
  // eslint-disable-next-line no-unused-vars
  debug(...messages) {},

  // eslint-disable-next-line no-unused-vars
  error(...messages) {}

};
function getLogger(logger = {}) {
  // don't do anything if the logger was previously built
  if (logger.built) {
    return logger;
  }

  const {
    debug,
    error
  } = logger;
  const targetLogger = reactorObjectAssign({
    built: true
  }, NOOP_LOGGER);

  if (isFunction(debug)) {
    targetLogger.debug = (...messages) => {
      logger.debug.apply(null, [AT_PREFIX, ...messages]);
    };
  }

  if (isFunction(error)) {
    targetLogger.error = (...messages) => {
      logger.error.apply(null, [AT_PREFIX, ...messages]);
    };
  }

  return targetLogger;
}

/* eslint-disable import/prefer-default-export */
const ATTRIBUTE_NOT_EXIST = (keyName, mboxName) => `Attribute '${keyName}' does not exist for mbox '${mboxName}'`;
const DECISIONING_ENGINE_NOT_READY = "Unable to fulfill request; decisioning engine not ready.";
const PROPERTY_TOKEN_MISMATCH = (requestProperty, configProperty) => `The property token specified in the request "${requestProperty}" does not match the one specified in the config "${configProperty}".`;
const NOTIFICATIONS_REQUIRED = "Notifications array is required in request";

/* eslint-disable import/prefer-default-export */
const DEFAULT_GLOBAL_MBOX = "target-global-mbox";
const DEFAULT_NUM_FETCH_RETRIES = 10;

/**
 *
 * @type {{Web: string, Mobile: string}}
 */

const ChannelType = {
  Mobile: "mobile",
  Web: "web"
};
/**
 *
 * @type {{Click: string, Display: string}}
 */

const MetricType = {
  Click: "click",
  Display: "display"
};
/**
 *
 * @type {{Authenticated: string, Unknown: string, LoggedOut: string}}
 */

const AuthenticatedState = {
  Unknown: "unknown",
  Authenticated: "authenticated",
  LoggedOut: "logged_out"
};
const EMPTY_REQUEST = {
  context: {
    channel: ChannelType.Web
  }
};
const ENVIRONMENT_PROD = "production";
const UNKNOWN_IP_ADDRESS = "unknownIpAddress";

const VIEWS = "views";
const MBOXES = "mboxes";
function isUndefined(value) {
  return typeof value === "undefined";
}
function isDefined(value) {
  return !isUndefined(value);
}
function isPojo(obj) {
  if (isUndefined(obj) || obj === null || !isObject$1(obj)) {
    return false;
  }

  return Object.getPrototypeOf(obj) === Object.prototype;
}
/**
 *
 * @param {"mboxes"|"views"} itemsKey
 * @param {import("../delivery-api-client/models/DeliveryRequest").DeliveryRequest} deliveryRequest Target Delivery API request
 * @returns {Set<String>} Set of names
 */

function getNamesForRequested(itemsKey, deliveryRequest) {
  const resultSet = new Set();
  ["prefetch", "execute"].forEach(type => {
    if (!deliveryRequest || !deliveryRequest[type]) {
      return;
    }

    const items = deliveryRequest[type][itemsKey] instanceof Array ? deliveryRequest[type][itemsKey] : [];
    items.filter(item => isDefined(item.name)).forEach(item => {
      resultSet.add(item.name);
    });
  });
  return resultSet;
}
/**
 * @param {import("../delivery-api-client/models/DeliveryRequest").DeliveryRequest} deliveryRequest Target Delivery API request, required
 * @returns {Set<String>} Set of mbox names
 */


function getMboxNames(deliveryRequest) {
  return getNamesForRequested(MBOXES, deliveryRequest);
}
/**
 * @param {import("../delivery-api-client/models/DeliveryRequest").DeliveryRequest} deliveryRequest Target Delivery API request, required
 * @returns {Set<String>} Set of view names
 */

function getViewNames(deliveryRequest) {
  return getNamesForRequested(VIEWS, deliveryRequest);
}
/**
 * @param {"mboxes"|"views"} itemsKey
 * @param {import("../delivery-api-client/models/DeliveryRequest").DeliveryRequest} deliveryRequest Target Delivery API request, required
 * @returns {boolean}
 */

function hasRequested(itemsKey, deliveryRequest) {
  const types = ["prefetch", "execute"];

  for (let i = 0; i < types.length; i += 1) {
    const type = types[i];
    const items = deliveryRequest && deliveryRequest[type] && deliveryRequest[type][itemsKey] instanceof Array ? deliveryRequest[type][itemsKey] : undefined;

    if (isDefined(items) && items instanceof Array) {
      return true;
    }
  }

  return false;
}
/**
 *
 * @param {import("../delivery-api-client/models/DeliveryRequest").DeliveryRequest} deliveryRequest Target Delivery API request, required
 * @returns {boolean}
 */


function hasRequestedViews(deliveryRequest) {
  return hasRequested(VIEWS, deliveryRequest);
}
/**
 * addMboxesToRequest method.  Ensures the mboxes specified are part of the returned delivery request
 * @param {Array<String>} mboxNames A list of mbox names that contains JSON content attributes, required
 * @param {import("../delivery-api-client/models/DeliveryRequest").DeliveryRequest} request Target View Delivery API request, required
 * @param { 'execute'|'prefetch' } requestType
 */

function addMboxesToRequest(mboxNames, request, requestType = "execute") {
  const requestedMboxes = getMboxNames(request); // returns a set

  const mboxes = [];

  if (request && request[requestType] && request[requestType].mboxes instanceof Array) {
    Array.prototype.push.apply(mboxes, request[requestType].mboxes);
  }

  const highestUserSpecifiedIndex = mboxes.reduce((highest, mbox) => Math.max(highest, isNumber(mbox.index) ? mbox.index : 0), 0);
  let nextIndex = highestUserSpecifiedIndex + 1;
  mboxNames.filter(mboxName => !requestedMboxes.has(mboxName)).forEach(mboxName => {
    mboxes.push({
      name: mboxName,
      index: nextIndex
    });
    nextIndex += 1;
  });

  const result = _objectSpread2({}, request);

  result[requestType] = _objectSpread2(_objectSpread2({}, request[requestType]), {}, {
    mboxes
  });
  return result;
}
function isBrowser() {
  return typeof window !== "undefined";
}
function isNodeJS() {
  return typeof global !== "undefined";
}
const noop$2 = () => undefined;
const noopPromise = value => Promise.resolve(value);
function requiresDecisioningEngine(decisioningMethod) {
  return includes(decisioningMethod, [DECISIONING_METHOD.ON_DEVICE, DECISIONING_METHOD.HYBRID]);
}
function decisioningEngineReady(decisioningEngine) {
  return isDefined(decisioningEngine) && decisioningEngine.isReady();
}
function objectWithoutUndefinedValues(obj) {
  const result = _objectSpread2({}, obj);

  Object.keys(result).forEach(key => {
    if (isUndefined(result[key])) {
      delete result[key];
    }
  });
  return result;
}
/**
 *
 * @param { import("../delivery-api-client/models/Property").Property } property
 */

function getPropertyToken(property = {
  token: undefined
}) {
  const {
    token = undefined
  } = property;
  return token;
}
function getProperty(config = {}, request = {}, logger) {
  const configPropertyToken = config.propertyToken;
  const requestPropertyToken = getPropertyToken(request.property);
  const propertyToken = requestPropertyToken || configPropertyToken;

  if (isDefined(requestPropertyToken) && requestPropertyToken !== configPropertyToken) {
    getLogger(logger).debug(PROPERTY_TOKEN_MISMATCH(requestPropertyToken, configPropertyToken));
  }

  return propertyToken ? {
    token: propertyToken
  } : undefined;
}
function isValidIpAddress(ipAddress) {
  const IP_ADDRESS = /((^\s*((([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5]))\s*$)|(^\s*((([0-9A-Fa-f]{1,4}:){7}([0-9A-Fa-f]{1,4}|:))|(([0-9A-Fa-f]{1,4}:){6}(:[0-9A-Fa-f]{1,4}|((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){5}(((:[0-9A-Fa-f]{1,4}){1,2})|:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){4}(((:[0-9A-Fa-f]{1,4}){1,3})|((:[0-9A-Fa-f]{1,4})?:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){3}(((:[0-9A-Fa-f]{1,4}){1,4})|((:[0-9A-Fa-f]{1,4}){0,2}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){2}(((:[0-9A-Fa-f]{1,4}){1,5})|((:[0-9A-Fa-f]{1,4}){0,3}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){1}(((:[0-9A-Fa-f]{1,4}){1,6})|((:[0-9A-Fa-f]{1,4}){0,4}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(:(((:[0-9A-Fa-f]{1,4}){1,7})|((:[0-9A-Fa-f]{1,4}){0,5}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:)))(%.+)?\s*$))/g;
  return isString(ipAddress) && IP_ADDRESS.test(ipAddress);
}
function memoize(func, keyResolverFunc = arr => arr[0]) {
  const memoizedValues = {};
  return function memoized(...funcArgs) {
    const key = keyResolverFunc.call(this, funcArgs);

    if (!isDefined(memoizedValues[key])) {
      memoizedValues[key] = func.call(null, ...funcArgs);
    }

    return memoizedValues[key];
  };
}
function isExecutePageLoad(request) {
  return !!request.execute && !!request.execute.pageLoad;
}
function executeMboxCount(request) {
  return !!request.execute && !!request.execute.mboxes && request.execute.mboxes.length || 0;
}
function isPrefetchPageLoad(request) {
  return !!request.prefetch && !!request.prefetch.pageLoad;
}
function prefetchMboxCount(request) {
  return !!request.prefetch && !!request.prefetch.mboxes && request.prefetch.mboxes.length || 0;
}
function prefetchViewCount(request) {
  return !!request.prefetch && !!request.prefetch.views && request.prefetch.views.length || 0;
}
function formatDecimal(value, digits = 2) {
  if (!value || !isNumber(value)) {
    return undefined;
  }

  return +value.toFixed(digits);
}

const NOT_MODIFIED = 304;
function getFetchApi(fetchApi) {
  if (isFunction(fetchApi)) {
    return fetchApi;
  }

  let api;

  if (isNodeJS() && typeof global.fetch === "function") {
    api = global.fetch;
  } else if (isBrowser() && // eslint-disable-next-line no-undef
  typeof window.fetch === "function") {
    // eslint-disable-next-line no-undef
    api = window.fetch.bind(window);
  }

  return api;
}
function getFetchWithRetry(fetchApi, maxRetries = DEFAULT_NUM_FETCH_RETRIES, errorFunc = errorMessage => errorMessage, incidentalFailureCallback = noop$2) {
  return function fetchWithRetry(url, options, numRetries = maxRetries) {
    return fetchApi(url, options).then(res => {
      if (!res.ok && res.status !== NOT_MODIFIED) {
        throw Error(res.statusText);
      }

      return res;
    }).catch(err => {
      if (isFunction(incidentalFailureCallback)) {
        incidentalFailureCallback.call(undefined, err);
      }

      if (numRetries < 1) {
        throw new Error(errorFunc(err.message));
      } // TODO: Enhance this to do Exponential Backoff


      return fetchWithRetry(url, options, numRetries - 1);
    });
  };
}

/**
 * @param {import("../delivery-api-client/models/DeliveryResponse").DeliveryResponse} response
 */

function createIndexed(response) {
  const result = {};
  ["prefetch", "execute"].forEach(requestType => {
    if (isDefined(response[requestType]) && isDefined(response[requestType].mboxes) && response[requestType].mboxes instanceof Array) {
      response[requestType].mboxes.forEach(mbox => {
        const {
          name,
          options = []
        } = mbox;
        options.forEach(option => {
          const {
            type,
            content
          } = option;

          if (type === "json" && isDefined(content)) {
            result[name] = reactorObjectAssign({}, result[name], content);
          }
        });
      });
    }
  });
  return result;
}
/**
 * @param { TargetDeliveryResponse } offersResponse
 */


function AttributesProvider(offersResponse) {
  const indexed = createIndexed(offersResponse.response);

  function getValue(mboxName, key) {
    if (!Object.prototype.hasOwnProperty.call(indexed, mboxName) || !Object.prototype.hasOwnProperty.call(indexed[mboxName], key)) {
      return new Error(ATTRIBUTE_NOT_EXIST(key, mboxName));
    }

    return indexed[mboxName][key];
  }
  /**
   * @param {string} mboxName
   */


  function getAsObject(mboxName) {
    if (isUndefined(mboxName)) {
      return _objectSpread2({}, indexed);
    }

    return _objectSpread2({}, indexed[mboxName]);
  }

  return {
    getValue: (mboxName, key) => getValue(mboxName, key),
    asObject: mboxName => getAsObject(mboxName),
    toJSON: () => getAsObject(undefined),
    getResponse: () => offersResponse
  };
}

function TargetEvent(type, payload = {}) {
  this.type = type;
  Object.keys(payload).forEach(key => {
    this[key] = payload[key];
  });
}
/**
 *
 * @param {Object.<String, Function>} events
 */


function EventProvider(events = {}) {
  const subscriptions = {};
  let subscriptionCount = 0;
  /**
   *
   * @param {String} eventName
   * @param {Function} callbackFunc
   * @return {string}
   */

  function subscribe(eventName, callbackFunc) {
    subscriptionCount += 1;

    if (isUndefined(subscriptions[eventName])) {
      subscriptions[eventName] = {};
    }

    subscriptions[eventName][subscriptionCount] = callbackFunc;
    return `${eventName}:${subscriptionCount}`;
  }
  /**
   *
   * @param {String} id
   */


  function unsubscribe(id) {
    const [eventName, eventId] = id.split(":");

    if (isDefined(subscriptions[eventName])) {
      delete subscriptions[eventName][eventId];
    }
  }
  /**
   *
   * @param {String} eventName
   * @param {Object} payload
   */


  function emit(eventName, payload = {}) {
    const subscribed = subscriptions[eventName] || [];
    values$1(subscribed).forEach(subscriber => subscriber.call(undefined, new TargetEvent(eventName, payload)));
  }

  Object.keys(events).forEach(eventName => subscribe(eventName, events[eventName]));
  return {
    subscribe,
    unsubscribe,
    emit
  };
}

/*
Copyright 2021 Adobe. All rights reserved.
This file is licensed to you under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License. You may obtain a copy
of the License at http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software distributed under
the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS
OF ANY KIND, either express or implied. See the License for the specific language
governing permissions and limitations under the License.
*/
function InMemoryTelemetryStore() {
  let telemetryEntries = [];

  function addEntry(entry) {
    telemetryEntries.push(entry);
  }

  function getAndClearEntries() {
    const allEntries = telemetryEntries;
    telemetryEntries = [];
    return allEntries;
  }

  function hasEntries() {
    return telemetryEntries.length > 0;
  }

  return {
    addEntry,
    getAndClearEntries,
    hasEntries
  };
}

/* eslint-disable import/prefer-default-export */
/**
 * The get TelemetryProvider initialization method
 * @param {Boolean} telemetryEnabled whether or not the SDK will collect telemetry data - default: true, optional
 * @param {String} method offer decisioning method that was configured during TargetClient.create() - default: server-side, optional
 * @param {Function} telemetryStore data store for collected telemetry - default: InMemoryTelemetryStore, optional
 */

function TelemetryProvider(telemetryEnabled = true, method = DECISIONING_METHOD.SERVER_SIDE, telemetryStore = InMemoryTelemetryStore()) {
  function getMode(response) {
    return response.edgeHost ? EXECUTION_MODE.EDGE : EXECUTION_MODE.LOCAL;
  }

  function getFeatures(request) {
    const features = {};
    const executePageLoad = isExecutePageLoad(request);
    const executeMbox = executeMboxCount(request);
    const prefetchPageLoad = isPrefetchPageLoad(request);
    const prefetchMbox = prefetchMboxCount(request);
    const prefetchView = prefetchViewCount(request);

    if (executePageLoad) {
      features.executePageLoad = executePageLoad;
    }

    if (executeMbox) {
      features.executeMboxCount = executeMbox;
    }

    if (prefetchPageLoad) {
      features.prefetchPageLoad = prefetchPageLoad;
    }

    if (prefetchMbox) {
      features.prefetchMboxCount = prefetchMbox;
    }

    if (prefetchView) {
      features.prefetchViewCount = prefetchView;
    }

    return features;
  }

  function normalizeEntryRequest(entryRequest) {
    const normalized = {};

    if (entryRequest.dns) {
      normalized.dns = formatDecimal(entryRequest.dns);
    }

    if (entryRequest.tls) {
      normalized.tls = formatDecimal(entryRequest.tls);
    }

    if (entryRequest.timeToFirstByte) {
      normalized.timeToFirstByte = formatDecimal(entryRequest.timeToFirstByte);
    }

    if (entryRequest.download) {
      normalized.download = formatDecimal(entryRequest.download);
    }

    if (entryRequest.responseSize) {
      normalized.responseSize = formatDecimal(entryRequest.responseSize);
    }

    return normalized;
  }

  function normalizeEntry(entry) {
    const normalized = {};

    if (entry.execution) {
      normalized.execution = formatDecimal(entry.execution);
    }

    if (entry.parsing) {
      normalized.parsing = formatDecimal(entry.parsing);
    }

    if (entry.request) {
      normalized.request = normalizeEntryRequest(entry.request);
    }

    return reactorObjectAssign(entry, normalized);
  }

  function normalizeAndAddEntry(entry) {
    telemetryStore.addEntry(normalizeEntry(entry));
  }

  function addServerStateEntry(request) {
    if (!telemetryEnabled) {
      return;
    }

    normalizeAndAddEntry({
      requestId: request.requestId,
      timestamp: now()
    });
  }

  function addRenderEntry(renderId, execution) {
    if (!telemetryEnabled) {
      return;
    }

    normalizeAndAddEntry({
      requestId: renderId,
      timestamp: now(),
      execution
    });
  }

  function addRequestEntry(requestId, entry) {
    const requestEntry = reactorObjectAssign(entry, {
      requestId,
      timestamp: now()
    });
    normalizeAndAddEntry(requestEntry);
  }
  /**
   * @param requestId
   * @param {import("@adobe/target-tools/delivery-api-client/models/TelemetryEntry").TelemetryEntry} entry
   */


  function addArtifactRequestEntry(requestId, entry) {
    if (!telemetryEnabled || !entry) {
      return;
    }

    addRequestEntry(requestId, entry);
  }
  /**
   * @param request
   * @param {import("@adobe/target-tools/delivery-api-client/models/TelemetryEntry").TelemetryEntry} entry
   * @param response
   * @param decisioningMethod
   */


  function addDeliveryRequestEntry(request, entry, response, decisioningMethod = method) {
    if (!telemetryEnabled || !entry) {
      return;
    }

    const {
      requestId
    } = request;
    const features = reactorObjectAssign(getFeatures(request), {
      decisioningMethod
    });
    const baseEntry = {
      mode: getMode(response),
      features
    };
    const deliveryRequestEntry = reactorObjectAssign(entry, baseEntry);
    addRequestEntry(requestId, deliveryRequestEntry);
  }

  function getAndClearEntries() {
    return telemetryStore.getAndClearEntries();
  }

  function hasEntries() {
    return telemetryStore.hasEntries();
  }

  function addTelemetryToDeliveryRequest(deliveryRequest) {
    if (hasEntries()) {
      return reactorObjectAssign(deliveryRequest, {
        telemetry: {
          entries: getAndClearEntries()
        }
      });
    }

    return deliveryRequest;
  }

  return {
    addDeliveryRequestEntry,
    addArtifactRequestEntry,
    addRenderEntry,
    addServerStateEntry,
    getAndClearEntries,
    hasEntries,
    addTelemetryToDeliveryRequest
  };
}

const UNKNOWN = "unknown";

const withVersion = (matcher, matches) => {
  const version = (matches && matches.length > matcher.versionGroupIndex ? matches[matcher.versionGroupIndex] : matcher.version) || "-1";
  const majorVersion = typeof version === "string" ? parseInt(version.split(".")[0], 10) : -1;
  return {
    name: matcher.name,
    version: majorVersion
  };
};
/**
 *
 * @param {Array<Object>} matchersList
 */


function matchUserAgent(matchersList, processFunc) {
  // eslint-disable-next-line no-param-reassign
  processFunc = typeof processFunc === "function" ? processFunc : matcher => matcher.name;
  return function checkMatches(userAgent) {
    for (let i = 0; i < matchersList.length; i += 1) {
      const matcher = matchersList[i];
      const matches = userAgent.match(matcher.regex);

      if (matches) {
        return processFunc(matcher, matches);
      }
    }

    return processFunc({
      name: UNKNOWN
    });
  };
}
/**
 *
 * @param {string} userAgent
 * @return {{name: string, version: number}}
 */


const browserFromUserAgent = (userAgent = "") => matchUserAgent([{
  name: "Edge",
  regex: /(edge|edgios|edga|edg)\/((\d+)?[\w.]+)/i,
  versionGroupIndex: 2
}, {
  name: "Mobile Safari",
  regex: /version\/([\w.]+).+?mobile\/\w+\s(safari)/i,
  versionGroupIndex: 1
}, {
  name: "Safari",
  regex: /version\/([\w.]+).+?(mobile\s?safari|safari)/i,
  versionGroupIndex: 1
}, {
  name: "Chrome",
  regex: /(chrome)\/v?([\w.]+)/i,
  versionGroupIndex: 2
}, {
  name: "Firefox",
  regex: /(firefox)\/([\w.-]+)$/i,
  versionGroupIndex: 2
}, {
  name: "IE",
  regex: /(?:ms|\()(ie)\s([\w.]+)/i,
  versionGroupIndex: 2
}, {
  name: "IE",
  regex: /(trident).+rv[:\s]([\w.]+).+like\sgecko/i,
  versionGroupIndex: 2,
  version: 11
}], withVersion)(userAgent);
/**
 *
 * @param {string} userAgent
 * @return {string}
 */

const operatingSystemFromUserAgent = userAgent => matchUserAgent([{
  name: "iOS",
  regex: /iPhone|iPad|iPod/
}, {
  name: "Android",
  regex: /Android [0-9.]+;/
}, {
  name: "Linux",
  regex: / Linux /
}, {
  name: "Unix",
  regex: /FreeBSD|OpenBSD|CrOS/
}, {
  name: "Windows",
  regex: /[( ]Windows /
}, {
  name: "Mac OS",
  regex: /Macintosh;/
}])(userAgent);
/**
 *
 * @param {string} browserUAWithVersion Sec-CH-UA or Sec-CH-UA-Full-Version-List
 * @return {{name: string, version: number}}
 */

const browserFromClientHintsUA = (browserUAWithVersion = "") => matchUserAgent([{
  name: "Chrome",
  versionGroupIndex: 1,
  regex: /Chrome";v="([0-9.]+)"/i
}, {
  name: "Edge",
  versionGroupIndex: 1,
  regex: /Edge";v="([0-9.]+)"/i
}, {
  name: "Safari",
  versionGroupIndex: 1,
  regex: /Safari";v="([0-9.]+)"/i
}, {
  name: "Firefox",
  versionGroupIndex: 1,
  regex: /Firefox";v="([0-9.]+)"/i
}], withVersion)(browserUAWithVersion);
/**
 *
 * @param {string} userAgent
 * @param {import("../delivery-api-client/models/ClientHints").ClientHints} clientHints
 * @return {{name: string, version: number}}
 */

const browserFromUserAgentOrClientHintUA = (userAgent = "", clientHints = {}) => {
  const {
    browserUAWithFullVersion,
    browserUAWithMajorVersion
  } = clientHints;
  return reduce((accumulated, current) => ({
    name: current.name !== UNKNOWN ? current.name : accumulated.name,
    version: current.version >= 0 ? current.version : accumulated.version
  }), {
    name: UNKNOWN,
    version: -1
  }, [browserFromUserAgent(userAgent), browserFromClientHintsUA(browserUAWithFullVersion || browserUAWithMajorVersion)]);
};
/**
 *
 * @param {string} userAgent
 * @param {import("../delivery-api-client/models/ClientHints").ClientHints} clientHints
 * @return {string}
 */

const operatingSystemFromUserAgentOrClientHints = (userAgent, clientHints = {}) => {
  const {
    platform
  } = clientHints;
  return isDefined(platform) ? platform : operatingSystemFromUserAgent(userAgent);
};

/* eslint-disable no-bitwise */

function mul32(m, n) {
  const nlo = n & 0xffff;
  const nhi = n - nlo;
  return (nhi * m | 0) + (nlo * m | 0) | 0;
}
/**
 * Optimized MurmurHash3 (32-bit) hashing algorithm to generate a signed numeric 10-digit hash
 * This method matches the java method used on Target Edge
 * @param stringValue
 * @param seed
 * @returns {number}
 */


function hashUnencodedCharsRaw(stringValue, seed = 0) {
  let k1;
  const len = stringValue.length;
  const c1 = 0xcc9e2d51;
  const c2 = 0x1b873593;
  let h1 = seed;
  const roundedEnd = len & ~0x1;

  for (let i = 0; i < roundedEnd; i += 2) {
    k1 = stringValue.charCodeAt(i) | stringValue.charCodeAt(i + 1) << 16;
    k1 = mul32(k1, c1);
    k1 = (k1 & 0x1ffff) << 15 | k1 >>> 17; // ROTL32(k1,15);

    k1 = mul32(k1, c2);
    h1 ^= k1;
    h1 = (h1 & 0x7ffff) << 13 | h1 >>> 19; // ROTL32(h1,13);

    h1 = h1 * 5 + 0xe6546b64 | 0;
  }

  if (len % 2 === 1) {
    k1 = stringValue.charCodeAt(roundedEnd);
    k1 = mul32(k1, c1);
    k1 = (k1 & 0x1ffff) << 15 | k1 >>> 17; // ROTL32(k1,15);

    k1 = mul32(k1, c2);
    h1 ^= k1;
  } // finalization


  h1 ^= len << 1; // fmix(h1);

  h1 ^= h1 >>> 16;
  h1 = mul32(h1, 0x85ebca6b);
  h1 ^= h1 >>> 13;
  h1 = mul32(h1, 0xc2b2ae35);
  h1 ^= h1 >>> 16;
  return h1;
}

const hashUnencodedChars = memoize(hashUnencodedCharsRaw, arr => arr.join("-"));

var performanceNow = createCommonjsModule(function (module) {
  // Generated by CoffeeScript 1.12.2
  (function () {
    var getNanoSeconds, hrtime, loadTime, moduleLoadTime, nodeLoadTime, upTime;

    if (typeof performance !== "undefined" && performance !== null && performance.now) {
      module.exports = function () {
        return performance.now();
      };
    } else if (typeof process !== "undefined" && process !== null && process.hrtime) {
      module.exports = function () {
        return (getNanoSeconds() - nodeLoadTime) / 1e6;
      };

      hrtime = process.hrtime;

      getNanoSeconds = function () {
        var hr;
        hr = hrtime();
        return hr[0] * 1e9 + hr[1];
      };

      moduleLoadTime = getNanoSeconds();
      upTime = process.uptime() * 1e9;
      nodeLoadTime = moduleLoadTime - upTime;
    } else if (Date.now) {
      module.exports = function () {
        return Date.now() - loadTime;
      };

      loadTime = Date.now();
    } else {
      module.exports = function () {
        return new Date().getTime() - loadTime;
      };

      loadTime = new Date().getTime();
    }
  }).call(commonjsGlobal);
});

/* eslint-disable import/prefer-default-export */
function createPerfToolInstance() {
  let timingIds = {};
  let startTimes = {};
  let timings = {};
  /**
   * getUniqueTimingId
   * @param {string} id
   * @return {string}
   */

  function getUniqueTimingId(id) {
    const count = (isDefined(timingIds[id]) ? timingIds[id] : 0) + 1;
    timingIds[id] = count;
    return `${id}${count}`;
  }
  /**
   * timeStart
   * @param {string} id
   * @param {boolean} incrementTimer
   * @return {string}
   */


  function timeStart(id, incrementTimer = false) {
    const timingId = incrementTimer ? getUniqueTimingId(id) : id;

    if (isUndefined(startTimes[timingId])) {
      startTimes[timingId] = performanceNow();
    }

    return timingId;
  }
  /**
   * timeEnd
   * @param {string} id
   * @param {number} offset
   * @return {number}
   */


  function timeEnd(id, offset = 0) {
    if (isUndefined(startTimes[id])) {
      return -1;
    }

    const timing = performanceNow() - startTimes[id] - offset;
    timings[id] = timing;
    return timing;
  }

  function clearTiming(id) {
    delete timingIds[id];
    delete startTimes[id];
    delete timings[id];
  }

  function reset() {
    timingIds = {};
    startTimes = {};
    timings = {};
  }

  return {
    timeStart,
    timeEnd,
    getTimings: () => timings,
    getTiming: key => timings[key],
    clearTiming,
    reset
  };
}
const perfTool = createPerfToolInstance();

// TODO: Remove from `core-js@4` since it's moved to entry points








var SPECIES$6 = wellKnownSymbol$1('species');
var RegExpPrototype = RegExp.prototype;

var fixRegexpWellKnownSymbolLogic = function (KEY, exec, FORCED, SHAM) {
  var SYMBOL = wellKnownSymbol$1(KEY);

  var DELEGATES_TO_SYMBOL = !fails$1(function () {
    // String methods call symbol-named RegEp methods
    var O = {};
    O[SYMBOL] = function () { return 7; };
    return ''[KEY](O) != 7;
  });

  var DELEGATES_TO_EXEC = DELEGATES_TO_SYMBOL && !fails$1(function () {
    // Symbol-named RegExp methods call .exec
    var execCalled = false;
    var re = /a/;

    if (KEY === 'split') {
      // We can't use real regex here since it causes deoptimization
      // and serious performance degradation in V8
      // https://github.com/zloirock/core-js/issues/306
      re = {};
      // RegExp[@@split] doesn't call the regex's exec method, but first creates
      // a new one. We need to return the patched regex when creating the new one.
      re.constructor = {};
      re.constructor[SPECIES$6] = function () { return re; };
      re.flags = '';
      re[SYMBOL] = /./[SYMBOL];
    }

    re.exec = function () { execCalled = true; return null; };

    re[SYMBOL]('');
    return !execCalled;
  });

  if (
    !DELEGATES_TO_SYMBOL ||
    !DELEGATES_TO_EXEC ||
    FORCED
  ) {
    var uncurriedNativeRegExpMethod = functionUncurryThis$1(/./[SYMBOL]);
    var methods = exec(SYMBOL, ''[KEY], function (nativeMethod, regexp, str, arg2, forceStringMethod) {
      var uncurriedNativeMethod = functionUncurryThis$1(nativeMethod);
      var $exec = regexp.exec;
      if ($exec === regexpExec || $exec === RegExpPrototype.exec) {
        if (DELEGATES_TO_SYMBOL && !forceStringMethod) {
          // The native String method already delegates to @@method (this
          // polyfilled function), leasing to infinite recursion.
          // We avoid it by directly calling the native @@method method.
          return { done: true, value: uncurriedNativeRegExpMethod(regexp, str, arg2) };
        }
        return { done: true, value: uncurriedNativeMethod(str, regexp, arg2) };
      }
      return { done: false };
    });

    defineBuiltIn$1(String.prototype, KEY, methods[0]);
    defineBuiltIn$1(RegExpPrototype, SYMBOL, methods[1]);
  }

  if (SHAM) createNonEnumerableProperty$1(RegExpPrototype[SYMBOL], 'sham', true);
};

var charAt$2 = functionUncurryThis$1(''.charAt);
var charCodeAt = functionUncurryThis$1(''.charCodeAt);
var stringSlice$4 = functionUncurryThis$1(''.slice);

var createMethod$3 = function (CONVERT_TO_STRING) {
  return function ($this, pos) {
    var S = toString_1$1(requireObjectCoercible$1($this));
    var position = toIntegerOrInfinity$1(pos);
    var size = S.length;
    var first, second;
    if (position < 0 || position >= size) return CONVERT_TO_STRING ? '' : undefined;
    first = charCodeAt(S, position);
    return first < 0xD800 || first > 0xDBFF || position + 1 === size
      || (second = charCodeAt(S, position + 1)) < 0xDC00 || second > 0xDFFF
        ? CONVERT_TO_STRING
          ? charAt$2(S, position)
          : first
        : CONVERT_TO_STRING
          ? stringSlice$4(S, position, position + 2)
          : (first - 0xD800 << 10) + (second - 0xDC00) + 0x10000;
  };
};

var stringMultibyte = {
  // `String.prototype.codePointAt` method
  // https://tc39.es/ecma262/#sec-string.prototype.codepointat
  codeAt: createMethod$3(false),
  // `String.prototype.at` method
  // https://github.com/mathiasbynens/String.prototype.at
  charAt: createMethod$3(true)
};

var charAt$3 = stringMultibyte.charAt;

// `AdvanceStringIndex` abstract operation
// https://tc39.es/ecma262/#sec-advancestringindex
var advanceStringIndex = function (S, index, unicode) {
  return index + (unicode ? charAt$3(S, index).length : 1);
};

var floor$3 = Math.floor;
var charAt$4 = functionUncurryThis$1(''.charAt);
var replace$3 = functionUncurryThis$1(''.replace);
var stringSlice$5 = functionUncurryThis$1(''.slice);
var SUBSTITUTION_SYMBOLS = /\$([$&'`]|\d{1,2}|<[^>]*>)/g;
var SUBSTITUTION_SYMBOLS_NO_NAMED = /\$([$&'`]|\d{1,2})/g;

// `GetSubstitution` abstract operation
// https://tc39.es/ecma262/#sec-getsubstitution
var getSubstitution = function (matched, str, position, captures, namedCaptures, replacement) {
  var tailPos = position + matched.length;
  var m = captures.length;
  var symbols = SUBSTITUTION_SYMBOLS_NO_NAMED;
  if (namedCaptures !== undefined) {
    namedCaptures = toObject$2(namedCaptures);
    symbols = SUBSTITUTION_SYMBOLS;
  }
  return replace$3(replacement, symbols, function (match, ch) {
    var capture;
    switch (charAt$4(ch, 0)) {
      case '$': return '$';
      case '&': return matched;
      case '`': return stringSlice$5(str, 0, position);
      case "'": return stringSlice$5(str, tailPos);
      case '<':
        capture = namedCaptures[stringSlice$5(ch, 1, -1)];
        break;
      default: // \d\d?
        var n = +ch;
        if (n === 0) return match;
        if (n > m) {
          var f = floor$3(n / 10);
          if (f === 0) return match;
          if (f <= m) return captures[f - 1] === undefined ? charAt$4(ch, 1) : captures[f - 1] + charAt$4(ch, 1);
          return match;
        }
        capture = captures[n - 1];
    }
    return capture === undefined ? '' : capture;
  });
};

var $TypeError$q = TypeError;

// `RegExpExec` abstract operation
// https://tc39.es/ecma262/#sec-regexpexec
var regexpExecAbstract = function (R, S) {
  var exec = R.exec;
  if (isCallable$1(exec)) {
    var result = functionCall$1(exec, R, S);
    if (result !== null) anObject$1(result);
    return result;
  }
  if (classofRaw$1(R) === 'RegExp') return functionCall$1(regexpExec, R, S);
  throw $TypeError$q('RegExp#exec called on incompatible receiver');
};

var REPLACE = wellKnownSymbol$1('replace');
var max$3 = Math.max;
var min$4 = Math.min;
var concat$2 = functionUncurryThis$1([].concat);
var push$3 = functionUncurryThis$1([].push);
var stringIndexOf = functionUncurryThis$1(''.indexOf);
var stringSlice$6 = functionUncurryThis$1(''.slice);

var maybeToString = function (it) {
  return it === undefined ? it : String(it);
};

// IE <= 11 replaces $0 with the whole match, as if it was $&
// https://stackoverflow.com/questions/6024666/getting-ie-to-replace-a-regex-with-the-literal-string-0
var REPLACE_KEEPS_$0 = (function () {
  // eslint-disable-next-line regexp/prefer-escape-replacement-dollar-char -- required for testing
  return 'a'.replace(/./, '$0') === '$0';
})();

// Safari <= 13.0.3(?) substitutes nth capture where n>m with an empty string
var REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE = (function () {
  if (/./[REPLACE]) {
    return /./[REPLACE]('a', '$0') === '';
  }
  return false;
})();

var REPLACE_SUPPORTS_NAMED_GROUPS = !fails$1(function () {
  var re = /./;
  re.exec = function () {
    var result = [];
    result.groups = { a: '7' };
    return result;
  };
  // eslint-disable-next-line regexp/no-useless-dollar-replacements -- false positive
  return ''.replace(re, '$<a>') !== '7';
});

// @@replace logic
fixRegexpWellKnownSymbolLogic('replace', function (_, nativeReplace, maybeCallNative) {
  var UNSAFE_SUBSTITUTE = REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE ? '$' : '$0';

  return [
    // `String.prototype.replace` method
    // https://tc39.es/ecma262/#sec-string.prototype.replace
    function replace(searchValue, replaceValue) {
      var O = requireObjectCoercible$1(this);
      var replacer = isNullOrUndefined$1(searchValue) ? undefined : getMethod$1(searchValue, REPLACE);
      return replacer
        ? functionCall$1(replacer, searchValue, O, replaceValue)
        : functionCall$1(nativeReplace, toString_1$1(O), searchValue, replaceValue);
    },
    // `RegExp.prototype[@@replace]` method
    // https://tc39.es/ecma262/#sec-regexp.prototype-@@replace
    function (string, replaceValue) {
      var rx = anObject$1(this);
      var S = toString_1$1(string);

      if (
        typeof replaceValue == 'string' &&
        stringIndexOf(replaceValue, UNSAFE_SUBSTITUTE) === -1 &&
        stringIndexOf(replaceValue, '$<') === -1
      ) {
        var res = maybeCallNative(nativeReplace, rx, S, replaceValue);
        if (res.done) return res.value;
      }

      var functionalReplace = isCallable$1(replaceValue);
      if (!functionalReplace) replaceValue = toString_1$1(replaceValue);

      var global = rx.global;
      if (global) {
        var fullUnicode = rx.unicode;
        rx.lastIndex = 0;
      }
      var results = [];
      while (true) {
        var result = regexpExecAbstract(rx, S);
        if (result === null) break;

        push$3(results, result);
        if (!global) break;

        var matchStr = toString_1$1(result[0]);
        if (matchStr === '') rx.lastIndex = advanceStringIndex(S, toLength$1(rx.lastIndex), fullUnicode);
      }

      var accumulatedResult = '';
      var nextSourcePosition = 0;
      for (var i = 0; i < results.length; i++) {
        result = results[i];

        var matched = toString_1$1(result[0]);
        var position = max$3(min$4(toIntegerOrInfinity$1(result.index), S.length), 0);
        var captures = [];
        // NOTE: This is equivalent to
        //   captures = result.slice(1).map(maybeToString)
        // but for some reason `nativeSlice.call(result, 1, result.length)` (called in
        // the slice polyfill when slicing native arrays) "doesn't work" in safari 9 and
        // causes a crash (https://pastebin.com/N21QzeQA) when trying to debug it.
        for (var j = 1; j < result.length; j++) push$3(captures, maybeToString(result[j]));
        var namedCaptures = result.groups;
        if (functionalReplace) {
          var replacerArgs = concat$2([matched], captures, position, S);
          if (namedCaptures !== undefined) push$3(replacerArgs, namedCaptures);
          var replacement = toString_1$1(functionApply$1(replaceValue, undefined, replacerArgs));
        } else {
          replacement = getSubstitution(matched, S, position, captures, namedCaptures, replaceValue);
        }
        if (position >= nextSourcePosition) {
          accumulatedResult += stringSlice$6(S, nextSourcePosition, position) + replacement;
          nextSourcePosition = position + matched.length;
        }
      }
      return accumulatedResult + stringSlice$6(S, nextSourcePosition);
    }
  ];
}, !REPLACE_SUPPORTS_NAMED_GROUPS || !REPLACE_KEEPS_$0 || REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE);

var src = (str, opts = {}) => {
  if (!str) return undefined;
  const o = {
    key: ['source', 'protocol', 'authority', 'userInfo', 'user', 'password', 'host', 'port', 'relative', 'path', 'directory', 'file', 'query', 'anchor'],
    q: {
      name: 'queryKey',
      parser: /(?:^|&)([^&=]*)=?([^&]*)/g
    },
    parser: {
      strict: /^(?:([^:/?#]+):)?(?:\/\/((?:(([^:@]*)(?::([^:@]*))?)?@)?([^:/?#]*)(?::(\d*))?))?((((?:[^?#/]*\/)*)([^?#]*))(?:\?([^#]*))?(?:#(.*))?)/,
      loose: /^(?:(?![^:@]+:[^:@/]*@)([^:/?#.]+):)?(?:\/\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?([^:/?#]*)(?::(\d*))?)(((\/(?:[^?#](?![^?#/]*\.[^?#/.]+(?:[?#]|$)))*\/?)?([^?#/]*))(?:\?([^#]*))?(?:#(.*))?)/
    }
  };
  const m = o.parser[opts.strictMode ? 'strict' : 'loose'].exec(str);
  const uri = {};
  let i = 14;

  while (i--) uri[o.key[i]] = m[i] || '';

  uri[o.q.name] = {};
  uri[o.key[12]].replace(o.q.parser, function ($0, $1, $2) {
    if ($1) uri[o.q.name][$1] = $2;
  });
  return uri;
};

var rules = [
	"ac",
	"com.ac",
	"edu.ac",
	"gov.ac",
	"net.ac",
	"mil.ac",
	"org.ac",
	"ad",
	"nom.ad",
	"ae",
	"co.ae",
	"net.ae",
	"org.ae",
	"sch.ae",
	"ac.ae",
	"gov.ae",
	"mil.ae",
	"aero",
	"accident-investigation.aero",
	"accident-prevention.aero",
	"aerobatic.aero",
	"aeroclub.aero",
	"aerodrome.aero",
	"agents.aero",
	"aircraft.aero",
	"airline.aero",
	"airport.aero",
	"air-surveillance.aero",
	"airtraffic.aero",
	"air-traffic-control.aero",
	"ambulance.aero",
	"amusement.aero",
	"association.aero",
	"author.aero",
	"ballooning.aero",
	"broker.aero",
	"caa.aero",
	"cargo.aero",
	"catering.aero",
	"certification.aero",
	"championship.aero",
	"charter.aero",
	"civilaviation.aero",
	"club.aero",
	"conference.aero",
	"consultant.aero",
	"consulting.aero",
	"control.aero",
	"council.aero",
	"crew.aero",
	"design.aero",
	"dgca.aero",
	"educator.aero",
	"emergency.aero",
	"engine.aero",
	"engineer.aero",
	"entertainment.aero",
	"equipment.aero",
	"exchange.aero",
	"express.aero",
	"federation.aero",
	"flight.aero",
	"fuel.aero",
	"gliding.aero",
	"government.aero",
	"groundhandling.aero",
	"group.aero",
	"hanggliding.aero",
	"homebuilt.aero",
	"insurance.aero",
	"journal.aero",
	"journalist.aero",
	"leasing.aero",
	"logistics.aero",
	"magazine.aero",
	"maintenance.aero",
	"media.aero",
	"microlight.aero",
	"modelling.aero",
	"navigation.aero",
	"parachuting.aero",
	"paragliding.aero",
	"passenger-association.aero",
	"pilot.aero",
	"press.aero",
	"production.aero",
	"recreation.aero",
	"repbody.aero",
	"res.aero",
	"research.aero",
	"rotorcraft.aero",
	"safety.aero",
	"scientist.aero",
	"services.aero",
	"show.aero",
	"skydiving.aero",
	"software.aero",
	"student.aero",
	"trader.aero",
	"trading.aero",
	"trainer.aero",
	"union.aero",
	"workinggroup.aero",
	"works.aero",
	"af",
	"gov.af",
	"com.af",
	"org.af",
	"net.af",
	"edu.af",
	"ag",
	"com.ag",
	"org.ag",
	"net.ag",
	"co.ag",
	"nom.ag",
	"ai",
	"off.ai",
	"com.ai",
	"net.ai",
	"org.ai",
	"al",
	"com.al",
	"edu.al",
	"gov.al",
	"mil.al",
	"net.al",
	"org.al",
	"am",
	"co.am",
	"com.am",
	"commune.am",
	"net.am",
	"org.am",
	"ao",
	"ed.ao",
	"gv.ao",
	"og.ao",
	"co.ao",
	"pb.ao",
	"it.ao",
	"aq",
	"ar",
	"bet.ar",
	"com.ar",
	"coop.ar",
	"edu.ar",
	"gob.ar",
	"gov.ar",
	"int.ar",
	"mil.ar",
	"musica.ar",
	"mutual.ar",
	"net.ar",
	"org.ar",
	"senasa.ar",
	"tur.ar",
	"arpa",
	"e164.arpa",
	"in-addr.arpa",
	"ip6.arpa",
	"iris.arpa",
	"uri.arpa",
	"urn.arpa",
	"as",
	"gov.as",
	"asia",
	"at",
	"ac.at",
	"co.at",
	"gv.at",
	"or.at",
	"sth.ac.at",
	"au",
	"com.au",
	"net.au",
	"org.au",
	"edu.au",
	"gov.au",
	"asn.au",
	"id.au",
	"info.au",
	"conf.au",
	"oz.au",
	"act.au",
	"nsw.au",
	"nt.au",
	"qld.au",
	"sa.au",
	"tas.au",
	"vic.au",
	"wa.au",
	"act.edu.au",
	"catholic.edu.au",
	"nsw.edu.au",
	"nt.edu.au",
	"qld.edu.au",
	"sa.edu.au",
	"tas.edu.au",
	"vic.edu.au",
	"wa.edu.au",
	"qld.gov.au",
	"sa.gov.au",
	"tas.gov.au",
	"vic.gov.au",
	"wa.gov.au",
	"schools.nsw.edu.au",
	"aw",
	"com.aw",
	"ax",
	"az",
	"com.az",
	"net.az",
	"int.az",
	"gov.az",
	"org.az",
	"edu.az",
	"info.az",
	"pp.az",
	"mil.az",
	"name.az",
	"pro.az",
	"biz.az",
	"ba",
	"com.ba",
	"edu.ba",
	"gov.ba",
	"mil.ba",
	"net.ba",
	"org.ba",
	"bb",
	"biz.bb",
	"co.bb",
	"com.bb",
	"edu.bb",
	"gov.bb",
	"info.bb",
	"net.bb",
	"org.bb",
	"store.bb",
	"tv.bb",
	"*.bd",
	"be",
	"ac.be",
	"bf",
	"gov.bf",
	"bg",
	"a.bg",
	"b.bg",
	"c.bg",
	"d.bg",
	"e.bg",
	"f.bg",
	"g.bg",
	"h.bg",
	"i.bg",
	"j.bg",
	"k.bg",
	"l.bg",
	"m.bg",
	"n.bg",
	"o.bg",
	"p.bg",
	"q.bg",
	"r.bg",
	"s.bg",
	"t.bg",
	"u.bg",
	"v.bg",
	"w.bg",
	"x.bg",
	"y.bg",
	"z.bg",
	"0.bg",
	"1.bg",
	"2.bg",
	"3.bg",
	"4.bg",
	"5.bg",
	"6.bg",
	"7.bg",
	"8.bg",
	"9.bg",
	"bh",
	"com.bh",
	"edu.bh",
	"net.bh",
	"org.bh",
	"gov.bh",
	"bi",
	"co.bi",
	"com.bi",
	"edu.bi",
	"or.bi",
	"org.bi",
	"biz",
	"bj",
	"asso.bj",
	"barreau.bj",
	"gouv.bj",
	"bm",
	"com.bm",
	"edu.bm",
	"gov.bm",
	"net.bm",
	"org.bm",
	"bn",
	"com.bn",
	"edu.bn",
	"gov.bn",
	"net.bn",
	"org.bn",
	"bo",
	"com.bo",
	"edu.bo",
	"gob.bo",
	"int.bo",
	"org.bo",
	"net.bo",
	"mil.bo",
	"tv.bo",
	"web.bo",
	"academia.bo",
	"agro.bo",
	"arte.bo",
	"blog.bo",
	"bolivia.bo",
	"ciencia.bo",
	"cooperativa.bo",
	"democracia.bo",
	"deporte.bo",
	"ecologia.bo",
	"economia.bo",
	"empresa.bo",
	"indigena.bo",
	"industria.bo",
	"info.bo",
	"medicina.bo",
	"movimiento.bo",
	"musica.bo",
	"natural.bo",
	"nombre.bo",
	"noticias.bo",
	"patria.bo",
	"politica.bo",
	"profesional.bo",
	"plurinacional.bo",
	"pueblo.bo",
	"revista.bo",
	"salud.bo",
	"tecnologia.bo",
	"tksat.bo",
	"transporte.bo",
	"wiki.bo",
	"br",
	"9guacu.br",
	"abc.br",
	"adm.br",
	"adv.br",
	"agr.br",
	"aju.br",
	"am.br",
	"anani.br",
	"aparecida.br",
	"app.br",
	"arq.br",
	"art.br",
	"ato.br",
	"b.br",
	"barueri.br",
	"belem.br",
	"bhz.br",
	"bib.br",
	"bio.br",
	"blog.br",
	"bmd.br",
	"boavista.br",
	"bsb.br",
	"campinagrande.br",
	"campinas.br",
	"caxias.br",
	"cim.br",
	"cng.br",
	"cnt.br",
	"com.br",
	"contagem.br",
	"coop.br",
	"coz.br",
	"cri.br",
	"cuiaba.br",
	"curitiba.br",
	"def.br",
	"des.br",
	"det.br",
	"dev.br",
	"ecn.br",
	"eco.br",
	"edu.br",
	"emp.br",
	"enf.br",
	"eng.br",
	"esp.br",
	"etc.br",
	"eti.br",
	"far.br",
	"feira.br",
	"flog.br",
	"floripa.br",
	"fm.br",
	"fnd.br",
	"fortal.br",
	"fot.br",
	"foz.br",
	"fst.br",
	"g12.br",
	"geo.br",
	"ggf.br",
	"goiania.br",
	"gov.br",
	"ac.gov.br",
	"al.gov.br",
	"am.gov.br",
	"ap.gov.br",
	"ba.gov.br",
	"ce.gov.br",
	"df.gov.br",
	"es.gov.br",
	"go.gov.br",
	"ma.gov.br",
	"mg.gov.br",
	"ms.gov.br",
	"mt.gov.br",
	"pa.gov.br",
	"pb.gov.br",
	"pe.gov.br",
	"pi.gov.br",
	"pr.gov.br",
	"rj.gov.br",
	"rn.gov.br",
	"ro.gov.br",
	"rr.gov.br",
	"rs.gov.br",
	"sc.gov.br",
	"se.gov.br",
	"sp.gov.br",
	"to.gov.br",
	"gru.br",
	"imb.br",
	"ind.br",
	"inf.br",
	"jab.br",
	"jampa.br",
	"jdf.br",
	"joinville.br",
	"jor.br",
	"jus.br",
	"leg.br",
	"lel.br",
	"log.br",
	"londrina.br",
	"macapa.br",
	"maceio.br",
	"manaus.br",
	"maringa.br",
	"mat.br",
	"med.br",
	"mil.br",
	"morena.br",
	"mp.br",
	"mus.br",
	"natal.br",
	"net.br",
	"niteroi.br",
	"*.nom.br",
	"not.br",
	"ntr.br",
	"odo.br",
	"ong.br",
	"org.br",
	"osasco.br",
	"palmas.br",
	"poa.br",
	"ppg.br",
	"pro.br",
	"psc.br",
	"psi.br",
	"pvh.br",
	"qsl.br",
	"radio.br",
	"rec.br",
	"recife.br",
	"rep.br",
	"ribeirao.br",
	"rio.br",
	"riobranco.br",
	"riopreto.br",
	"salvador.br",
	"sampa.br",
	"santamaria.br",
	"santoandre.br",
	"saobernardo.br",
	"saogonca.br",
	"seg.br",
	"sjc.br",
	"slg.br",
	"slz.br",
	"sorocaba.br",
	"srv.br",
	"taxi.br",
	"tc.br",
	"tec.br",
	"teo.br",
	"the.br",
	"tmp.br",
	"trd.br",
	"tur.br",
	"tv.br",
	"udi.br",
	"vet.br",
	"vix.br",
	"vlog.br",
	"wiki.br",
	"zlg.br",
	"bs",
	"com.bs",
	"net.bs",
	"org.bs",
	"edu.bs",
	"gov.bs",
	"bt",
	"com.bt",
	"edu.bt",
	"gov.bt",
	"net.bt",
	"org.bt",
	"bv",
	"bw",
	"co.bw",
	"org.bw",
	"by",
	"gov.by",
	"mil.by",
	"com.by",
	"of.by",
	"bz",
	"com.bz",
	"net.bz",
	"org.bz",
	"edu.bz",
	"gov.bz",
	"ca",
	"ab.ca",
	"bc.ca",
	"mb.ca",
	"nb.ca",
	"nf.ca",
	"nl.ca",
	"ns.ca",
	"nt.ca",
	"nu.ca",
	"on.ca",
	"pe.ca",
	"qc.ca",
	"sk.ca",
	"yk.ca",
	"gc.ca",
	"cat",
	"cc",
	"cd",
	"gov.cd",
	"cf",
	"cg",
	"ch",
	"ci",
	"org.ci",
	"or.ci",
	"com.ci",
	"co.ci",
	"edu.ci",
	"ed.ci",
	"ac.ci",
	"net.ci",
	"go.ci",
	"asso.ci",
	"aÃ©roport.ci",
	"int.ci",
	"presse.ci",
	"md.ci",
	"gouv.ci",
	"*.ck",
	"!www.ck",
	"cl",
	"co.cl",
	"gob.cl",
	"gov.cl",
	"mil.cl",
	"cm",
	"co.cm",
	"com.cm",
	"gov.cm",
	"net.cm",
	"cn",
	"ac.cn",
	"com.cn",
	"edu.cn",
	"gov.cn",
	"net.cn",
	"org.cn",
	"mil.cn",
	"å¬å¸.cn",
	"ç½ç».cn",
	"ç¶²çµ¡.cn",
	"ah.cn",
	"bj.cn",
	"cq.cn",
	"fj.cn",
	"gd.cn",
	"gs.cn",
	"gz.cn",
	"gx.cn",
	"ha.cn",
	"hb.cn",
	"he.cn",
	"hi.cn",
	"hl.cn",
	"hn.cn",
	"jl.cn",
	"js.cn",
	"jx.cn",
	"ln.cn",
	"nm.cn",
	"nx.cn",
	"qh.cn",
	"sc.cn",
	"sd.cn",
	"sh.cn",
	"sn.cn",
	"sx.cn",
	"tj.cn",
	"xj.cn",
	"xz.cn",
	"yn.cn",
	"zj.cn",
	"hk.cn",
	"mo.cn",
	"tw.cn",
	"co",
	"arts.co",
	"com.co",
	"edu.co",
	"firm.co",
	"gov.co",
	"info.co",
	"int.co",
	"mil.co",
	"net.co",
	"nom.co",
	"org.co",
	"rec.co",
	"web.co",
	"com",
	"coop",
	"cr",
	"ac.cr",
	"co.cr",
	"ed.cr",
	"fi.cr",
	"go.cr",
	"or.cr",
	"sa.cr",
	"cu",
	"com.cu",
	"edu.cu",
	"org.cu",
	"net.cu",
	"gov.cu",
	"inf.cu",
	"cv",
	"com.cv",
	"edu.cv",
	"int.cv",
	"nome.cv",
	"org.cv",
	"cw",
	"com.cw",
	"edu.cw",
	"net.cw",
	"org.cw",
	"cx",
	"gov.cx",
	"cy",
	"ac.cy",
	"biz.cy",
	"com.cy",
	"ekloges.cy",
	"gov.cy",
	"ltd.cy",
	"mil.cy",
	"net.cy",
	"org.cy",
	"press.cy",
	"pro.cy",
	"tm.cy",
	"cz",
	"de",
	"dj",
	"dk",
	"dm",
	"com.dm",
	"net.dm",
	"org.dm",
	"edu.dm",
	"gov.dm",
	"do",
	"art.do",
	"com.do",
	"edu.do",
	"gob.do",
	"gov.do",
	"mil.do",
	"net.do",
	"org.do",
	"sld.do",
	"web.do",
	"dz",
	"art.dz",
	"asso.dz",
	"com.dz",
	"edu.dz",
	"gov.dz",
	"org.dz",
	"net.dz",
	"pol.dz",
	"soc.dz",
	"tm.dz",
	"ec",
	"com.ec",
	"info.ec",
	"net.ec",
	"fin.ec",
	"k12.ec",
	"med.ec",
	"pro.ec",
	"org.ec",
	"edu.ec",
	"gov.ec",
	"gob.ec",
	"mil.ec",
	"edu",
	"ee",
	"edu.ee",
	"gov.ee",
	"riik.ee",
	"lib.ee",
	"med.ee",
	"com.ee",
	"pri.ee",
	"aip.ee",
	"org.ee",
	"fie.ee",
	"eg",
	"com.eg",
	"edu.eg",
	"eun.eg",
	"gov.eg",
	"mil.eg",
	"name.eg",
	"net.eg",
	"org.eg",
	"sci.eg",
	"*.er",
	"es",
	"com.es",
	"nom.es",
	"org.es",
	"gob.es",
	"edu.es",
	"et",
	"com.et",
	"gov.et",
	"org.et",
	"edu.et",
	"biz.et",
	"name.et",
	"info.et",
	"net.et",
	"eu",
	"fi",
	"aland.fi",
	"fj",
	"ac.fj",
	"biz.fj",
	"com.fj",
	"gov.fj",
	"info.fj",
	"mil.fj",
	"name.fj",
	"net.fj",
	"org.fj",
	"pro.fj",
	"*.fk",
	"com.fm",
	"edu.fm",
	"net.fm",
	"org.fm",
	"fm",
	"fo",
	"fr",
	"asso.fr",
	"com.fr",
	"gouv.fr",
	"nom.fr",
	"prd.fr",
	"tm.fr",
	"aeroport.fr",
	"avocat.fr",
	"avoues.fr",
	"cci.fr",
	"chambagri.fr",
	"chirurgiens-dentistes.fr",
	"experts-comptables.fr",
	"geometre-expert.fr",
	"greta.fr",
	"huissier-justice.fr",
	"medecin.fr",
	"notaires.fr",
	"pharmacien.fr",
	"port.fr",
	"veterinaire.fr",
	"ga",
	"gb",
	"edu.gd",
	"gov.gd",
	"gd",
	"ge",
	"com.ge",
	"edu.ge",
	"gov.ge",
	"org.ge",
	"mil.ge",
	"net.ge",
	"pvt.ge",
	"gf",
	"gg",
	"co.gg",
	"net.gg",
	"org.gg",
	"gh",
	"com.gh",
	"edu.gh",
	"gov.gh",
	"org.gh",
	"mil.gh",
	"gi",
	"com.gi",
	"ltd.gi",
	"gov.gi",
	"mod.gi",
	"edu.gi",
	"org.gi",
	"gl",
	"co.gl",
	"com.gl",
	"edu.gl",
	"net.gl",
	"org.gl",
	"gm",
	"gn",
	"ac.gn",
	"com.gn",
	"edu.gn",
	"gov.gn",
	"org.gn",
	"net.gn",
	"gov",
	"gp",
	"com.gp",
	"net.gp",
	"mobi.gp",
	"edu.gp",
	"org.gp",
	"asso.gp",
	"gq",
	"gr",
	"com.gr",
	"edu.gr",
	"net.gr",
	"org.gr",
	"gov.gr",
	"gs",
	"gt",
	"com.gt",
	"edu.gt",
	"gob.gt",
	"ind.gt",
	"mil.gt",
	"net.gt",
	"org.gt",
	"gu",
	"com.gu",
	"edu.gu",
	"gov.gu",
	"guam.gu",
	"info.gu",
	"net.gu",
	"org.gu",
	"web.gu",
	"gw",
	"gy",
	"co.gy",
	"com.gy",
	"edu.gy",
	"gov.gy",
	"net.gy",
	"org.gy",
	"hk",
	"com.hk",
	"edu.hk",
	"gov.hk",
	"idv.hk",
	"net.hk",
	"org.hk",
	"å¬å¸.hk",
	"æè².hk",
	"æè².hk",
	"æ¿åº.hk",
	"åäºº.hk",
	"ä¸ªï¿½ï¿½.hk",
	"ç®äºº.hk",
	"ç¶²ç».hk",
	"ç½ç».hk",
	"ç»ç¹.hk",
	"ç¶²çµ¡.hk",
	"ç½çµ¡.hk",
	"ç»ç».hk",
	"çµç¹.hk",
	"çµç».hk",
	"hm",
	"hn",
	"com.hn",
	"edu.hn",
	"org.hn",
	"net.hn",
	"mil.hn",
	"gob.hn",
	"hr",
	"iz.hr",
	"from.hr",
	"name.hr",
	"com.hr",
	"ht",
	"com.ht",
	"shop.ht",
	"firm.ht",
	"info.ht",
	"adult.ht",
	"net.ht",
	"pro.ht",
	"org.ht",
	"med.ht",
	"art.ht",
	"coop.ht",
	"pol.ht",
	"asso.ht",
	"edu.ht",
	"rel.ht",
	"gouv.ht",
	"perso.ht",
	"hu",
	"co.hu",
	"info.hu",
	"org.hu",
	"priv.hu",
	"sport.hu",
	"tm.hu",
	"2000.hu",
	"agrar.hu",
	"bolt.hu",
	"casino.hu",
	"city.hu",
	"erotica.hu",
	"erotika.hu",
	"film.hu",
	"forum.hu",
	"games.hu",
	"hotel.hu",
	"ingatlan.hu",
	"jogasz.hu",
	"konyvelo.hu",
	"lakas.hu",
	"media.hu",
	"news.hu",
	"reklam.hu",
	"sex.hu",
	"shop.hu",
	"suli.hu",
	"szex.hu",
	"tozsde.hu",
	"utazas.hu",
	"video.hu",
	"id",
	"ac.id",
	"biz.id",
	"co.id",
	"desa.id",
	"go.id",
	"mil.id",
	"my.id",
	"net.id",
	"or.id",
	"ponpes.id",
	"sch.id",
	"web.id",
	"ie",
	"gov.ie",
	"il",
	"ac.il",
	"co.il",
	"gov.il",
	"idf.il",
	"k12.il",
	"muni.il",
	"net.il",
	"org.il",
	"im",
	"ac.im",
	"co.im",
	"com.im",
	"ltd.co.im",
	"net.im",
	"org.im",
	"plc.co.im",
	"tt.im",
	"tv.im",
	"in",
	"co.in",
	"firm.in",
	"net.in",
	"org.in",
	"gen.in",
	"ind.in",
	"nic.in",
	"ac.in",
	"edu.in",
	"res.in",
	"gov.in",
	"mil.in",
	"info",
	"int",
	"eu.int",
	"io",
	"com.io",
	"iq",
	"gov.iq",
	"edu.iq",
	"mil.iq",
	"com.iq",
	"org.iq",
	"net.iq",
	"ir",
	"ac.ir",
	"co.ir",
	"gov.ir",
	"id.ir",
	"net.ir",
	"org.ir",
	"sch.ir",
	"Ø§ÛØ±Ø§Ù.ir",
	"Ø§ÙØ±Ø§Ù.ir",
	"is",
	"net.is",
	"com.is",
	"edu.is",
	"gov.is",
	"org.is",
	"int.is",
	"it",
	"gov.it",
	"edu.it",
	"abr.it",
	"abruzzo.it",
	"aosta-valley.it",
	"aostavalley.it",
	"bas.it",
	"basilicata.it",
	"cal.it",
	"calabria.it",
	"cam.it",
	"campania.it",
	"emilia-romagna.it",
	"emiliaromagna.it",
	"emr.it",
	"friuli-v-giulia.it",
	"friuli-ve-giulia.it",
	"friuli-vegiulia.it",
	"friuli-venezia-giulia.it",
	"friuli-veneziagiulia.it",
	"friuli-vgiulia.it",
	"friuliv-giulia.it",
	"friulive-giulia.it",
	"friulivegiulia.it",
	"friulivenezia-giulia.it",
	"friuliveneziagiulia.it",
	"friulivgiulia.it",
	"fvg.it",
	"laz.it",
	"lazio.it",
	"lig.it",
	"liguria.it",
	"lom.it",
	"lombardia.it",
	"lombardy.it",
	"lucania.it",
	"mar.it",
	"marche.it",
	"mol.it",
	"molise.it",
	"piedmont.it",
	"piemonte.it",
	"pmn.it",
	"pug.it",
	"puglia.it",
	"sar.it",
	"sardegna.it",
	"sardinia.it",
	"sic.it",
	"sicilia.it",
	"sicily.it",
	"taa.it",
	"tos.it",
	"toscana.it",
	"trentin-sud-tirol.it",
	"trentin-sÃ¼d-tirol.it",
	"trentin-sudtirol.it",
	"trentin-sÃ¼dtirol.it",
	"trentin-sued-tirol.it",
	"trentin-suedtirol.it",
	"trentino-a-adige.it",
	"trentino-aadige.it",
	"trentino-alto-adige.it",
	"trentino-altoadige.it",
	"trentino-s-tirol.it",
	"trentino-stirol.it",
	"trentino-sud-tirol.it",
	"trentino-sÃ¼d-tirol.it",
	"trentino-sudtirol.it",
	"trentino-sÃ¼dtirol.it",
	"trentino-sued-tirol.it",
	"trentino-suedtirol.it",
	"trentino.it",
	"trentinoa-adige.it",
	"trentinoaadige.it",
	"trentinoalto-adige.it",
	"trentinoaltoadige.it",
	"trentinos-tirol.it",
	"trentinostirol.it",
	"trentinosud-tirol.it",
	"trentinosÃ¼d-tirol.it",
	"trentinosudtirol.it",
	"trentinosÃ¼dtirol.it",
	"trentinosued-tirol.it",
	"trentinosuedtirol.it",
	"trentinsud-tirol.it",
	"trentinsÃ¼d-tirol.it",
	"trentinsudtirol.it",
	"trentinsÃ¼dtirol.it",
	"trentinsued-tirol.it",
	"trentinsuedtirol.it",
	"tuscany.it",
	"umb.it",
	"umbria.it",
	"val-d-aosta.it",
	"val-daosta.it",
	"vald-aosta.it",
	"valdaosta.it",
	"valle-aosta.it",
	"valle-d-aosta.it",
	"valle-daosta.it",
	"valleaosta.it",
	"valled-aosta.it",
	"valledaosta.it",
	"vallee-aoste.it",
	"vallÃ©e-aoste.it",
	"vallee-d-aoste.it",
	"vallÃ©e-d-aoste.it",
	"valleeaoste.it",
	"vallÃ©eaoste.it",
	"valleedaoste.it",
	"vallÃ©edaoste.it",
	"vao.it",
	"vda.it",
	"ven.it",
	"veneto.it",
	"ag.it",
	"agrigento.it",
	"al.it",
	"alessandria.it",
	"alto-adige.it",
	"altoadige.it",
	"an.it",
	"ancona.it",
	"andria-barletta-trani.it",
	"andria-trani-barletta.it",
	"andriabarlettatrani.it",
	"andriatranibarletta.it",
	"ao.it",
	"aosta.it",
	"aoste.it",
	"ap.it",
	"aq.it",
	"aquila.it",
	"ar.it",
	"arezzo.it",
	"ascoli-piceno.it",
	"ascolipiceno.it",
	"asti.it",
	"at.it",
	"av.it",
	"avellino.it",
	"ba.it",
	"balsan-sudtirol.it",
	"balsan-sÃ¼dtirol.it",
	"balsan-suedtirol.it",
	"balsan.it",
	"bari.it",
	"barletta-trani-andria.it",
	"barlettatraniandria.it",
	"belluno.it",
	"benevento.it",
	"bergamo.it",
	"bg.it",
	"bi.it",
	"biella.it",
	"bl.it",
	"bn.it",
	"bo.it",
	"bologna.it",
	"bolzano-altoadige.it",
	"bolzano.it",
	"bozen-sudtirol.it",
	"bozen-sÃ¼dtirol.it",
	"bozen-suedtirol.it",
	"bozen.it",
	"br.it",
	"brescia.it",
	"brindisi.it",
	"bs.it",
	"bt.it",
	"bulsan-sudtirol.it",
	"bulsan-sÃ¼dtirol.it",
	"bulsan-suedtirol.it",
	"bulsan.it",
	"bz.it",
	"ca.it",
	"cagliari.it",
	"caltanissetta.it",
	"campidano-medio.it",
	"campidanomedio.it",
	"campobasso.it",
	"carbonia-iglesias.it",
	"carboniaiglesias.it",
	"carrara-massa.it",
	"carraramassa.it",
	"caserta.it",
	"catania.it",
	"catanzaro.it",
	"cb.it",
	"ce.it",
	"cesena-forli.it",
	"cesena-forlÃ¬.it",
	"cesenaforli.it",
	"cesenaforlÃ¬.it",
	"ch.it",
	"chieti.it",
	"ci.it",
	"cl.it",
	"cn.it",
	"co.it",
	"como.it",
	"cosenza.it",
	"cr.it",
	"cremona.it",
	"crotone.it",
	"cs.it",
	"ct.it",
	"cuneo.it",
	"cz.it",
	"dell-ogliastra.it",
	"dellogliastra.it",
	"en.it",
	"enna.it",
	"fc.it",
	"fe.it",
	"fermo.it",
	"ferrara.it",
	"fg.it",
	"fi.it",
	"firenze.it",
	"florence.it",
	"fm.it",
	"foggia.it",
	"forli-cesena.it",
	"forlÃ¬-cesena.it",
	"forlicesena.it",
	"forlÃ¬cesena.it",
	"fr.it",
	"frosinone.it",
	"ge.it",
	"genoa.it",
	"genova.it",
	"go.it",
	"gorizia.it",
	"gr.it",
	"grosseto.it",
	"iglesias-carbonia.it",
	"iglesiascarbonia.it",
	"im.it",
	"imperia.it",
	"is.it",
	"isernia.it",
	"kr.it",
	"la-spezia.it",
	"laquila.it",
	"laspezia.it",
	"latina.it",
	"lc.it",
	"le.it",
	"lecce.it",
	"lecco.it",
	"li.it",
	"livorno.it",
	"lo.it",
	"lodi.it",
	"lt.it",
	"lu.it",
	"lucca.it",
	"macerata.it",
	"mantova.it",
	"massa-carrara.it",
	"massacarrara.it",
	"matera.it",
	"mb.it",
	"mc.it",
	"me.it",
	"medio-campidano.it",
	"mediocampidano.it",
	"messina.it",
	"mi.it",
	"milan.it",
	"milano.it",
	"mn.it",
	"mo.it",
	"modena.it",
	"monza-brianza.it",
	"monza-e-della-brianza.it",
	"monza.it",
	"monzabrianza.it",
	"monzaebrianza.it",
	"monzaedellabrianza.it",
	"ms.it",
	"mt.it",
	"na.it",
	"naples.it",
	"napoli.it",
	"no.it",
	"novara.it",
	"nu.it",
	"nuoro.it",
	"og.it",
	"ogliastra.it",
	"olbia-tempio.it",
	"olbiatempio.it",
	"or.it",
	"oristano.it",
	"ot.it",
	"pa.it",
	"padova.it",
	"padua.it",
	"palermo.it",
	"parma.it",
	"pavia.it",
	"pc.it",
	"pd.it",
	"pe.it",
	"perugia.it",
	"pesaro-urbino.it",
	"pesarourbino.it",
	"pescara.it",
	"pg.it",
	"pi.it",
	"piacenza.it",
	"pisa.it",
	"pistoia.it",
	"pn.it",
	"po.it",
	"pordenone.it",
	"potenza.it",
	"pr.it",
	"prato.it",
	"pt.it",
	"pu.it",
	"pv.it",
	"pz.it",
	"ra.it",
	"ragusa.it",
	"ravenna.it",
	"rc.it",
	"re.it",
	"reggio-calabria.it",
	"reggio-emilia.it",
	"reggiocalabria.it",
	"reggioemilia.it",
	"rg.it",
	"ri.it",
	"rieti.it",
	"rimini.it",
	"rm.it",
	"rn.it",
	"ro.it",
	"roma.it",
	"rome.it",
	"rovigo.it",
	"sa.it",
	"salerno.it",
	"sassari.it",
	"savona.it",
	"si.it",
	"siena.it",
	"siracusa.it",
	"so.it",
	"sondrio.it",
	"sp.it",
	"sr.it",
	"ss.it",
	"suedtirol.it",
	"sÃ¼dtirol.it",
	"sv.it",
	"ta.it",
	"taranto.it",
	"te.it",
	"tempio-olbia.it",
	"tempioolbia.it",
	"teramo.it",
	"terni.it",
	"tn.it",
	"to.it",
	"torino.it",
	"tp.it",
	"tr.it",
	"trani-andria-barletta.it",
	"trani-barletta-andria.it",
	"traniandriabarletta.it",
	"tranibarlettaandria.it",
	"trapani.it",
	"trento.it",
	"treviso.it",
	"trieste.it",
	"ts.it",
	"turin.it",
	"tv.it",
	"ud.it",
	"udine.it",
	"urbino-pesaro.it",
	"urbinopesaro.it",
	"va.it",
	"varese.it",
	"vb.it",
	"vc.it",
	"ve.it",
	"venezia.it",
	"venice.it",
	"verbania.it",
	"vercelli.it",
	"verona.it",
	"vi.it",
	"vibo-valentia.it",
	"vibovalentia.it",
	"vicenza.it",
	"viterbo.it",
	"vr.it",
	"vs.it",
	"vt.it",
	"vv.it",
	"je",
	"co.je",
	"net.je",
	"org.je",
	"*.jm",
	"jo",
	"com.jo",
	"org.jo",
	"net.jo",
	"edu.jo",
	"sch.jo",
	"gov.jo",
	"mil.jo",
	"name.jo",
	"jobs",
	"jp",
	"ac.jp",
	"ad.jp",
	"co.jp",
	"ed.jp",
	"go.jp",
	"gr.jp",
	"lg.jp",
	"ne.jp",
	"or.jp",
	"aichi.jp",
	"akita.jp",
	"aomori.jp",
	"chiba.jp",
	"ehime.jp",
	"fukui.jp",
	"fukuoka.jp",
	"fukushima.jp",
	"gifu.jp",
	"gunma.jp",
	"hiroshima.jp",
	"hokkaido.jp",
	"hyogo.jp",
	"ibaraki.jp",
	"ishikawa.jp",
	"iwate.jp",
	"kagawa.jp",
	"kagoshima.jp",
	"kanagawa.jp",
	"kochi.jp",
	"kumamoto.jp",
	"kyoto.jp",
	"mie.jp",
	"miyagi.jp",
	"miyazaki.jp",
	"nagano.jp",
	"nagasaki.jp",
	"nara.jp",
	"niigata.jp",
	"oita.jp",
	"okayama.jp",
	"okinawa.jp",
	"osaka.jp",
	"saga.jp",
	"saitama.jp",
	"shiga.jp",
	"shimane.jp",
	"shizuoka.jp",
	"tochigi.jp",
	"tokushima.jp",
	"tokyo.jp",
	"tottori.jp",
	"toyama.jp",
	"wakayama.jp",
	"yamagata.jp",
	"yamaguchi.jp",
	"yamanashi.jp",
	"æ æ¨.jp",
	"æç¥.jp",
	"æåª.jp",
	"åµåº«.jp",
	"çæ¬.jp",
	"è¨å.jp",
	"åæµ·é.jp",
	"åè.jp",
	"åæ­å±±.jp",
	"é·å´.jp",
	"é·é.jp",
	"æ°æ½.jp",
	"éæ£®.jp",
	"éå²¡.jp",
	"æ±äº¬.jp",
	"ç³å·.jp",
	"å¼ç.jp",
	"ä¸é.jp",
	"äº¬é½.jp",
	"ä½è³.jp",
	"å¤§å.jp",
	"å¤§éª.jp",
	"å¥è¯.jp",
	"å®®å.jp",
	"å®®å´.jp",
	"å¯å±±.jp",
	"å±±å£.jp",
	"å±±å½¢.jp",
	"å±±æ¢¨.jp",
	"å²©æ.jp",
	"å²é.jp",
	"å²¡å±±.jp",
	"å³¶æ ¹.jp",
	"åºå³¶.jp",
	"å¾³å³¶.jp",
	"æ²ç¸.jp",
	"æ»è³.jp",
	"ç¥å¥å·.jp",
	"ç¦äº.jp",
	"ç¦å²¡.jp",
	"ç¦å³¶.jp",
	"ç§ç°.jp",
	"ç¾¤é¦¬.jp",
	"é¦å·.jp",
	"é«ç¥.jp",
	"é³¥å.jp",
	"é¹¿åå³¶.jp",
	"*.kawasaki.jp",
	"*.kitakyushu.jp",
	"*.kobe.jp",
	"*.nagoya.jp",
	"*.sapporo.jp",
	"*.sendai.jp",
	"*.yokohama.jp",
	"!city.kawasaki.jp",
	"!city.kitakyushu.jp",
	"!city.kobe.jp",
	"!city.nagoya.jp",
	"!city.sapporo.jp",
	"!city.sendai.jp",
	"!city.yokohama.jp",
	"aisai.aichi.jp",
	"ama.aichi.jp",
	"anjo.aichi.jp",
	"asuke.aichi.jp",
	"chiryu.aichi.jp",
	"chita.aichi.jp",
	"fuso.aichi.jp",
	"gamagori.aichi.jp",
	"handa.aichi.jp",
	"hazu.aichi.jp",
	"hekinan.aichi.jp",
	"higashiura.aichi.jp",
	"ichinomiya.aichi.jp",
	"inazawa.aichi.jp",
	"inuyama.aichi.jp",
	"isshiki.aichi.jp",
	"iwakura.aichi.jp",
	"kanie.aichi.jp",
	"kariya.aichi.jp",
	"kasugai.aichi.jp",
	"kira.aichi.jp",
	"kiyosu.aichi.jp",
	"komaki.aichi.jp",
	"konan.aichi.jp",
	"kota.aichi.jp",
	"mihama.aichi.jp",
	"miyoshi.aichi.jp",
	"nishio.aichi.jp",
	"nisshin.aichi.jp",
	"obu.aichi.jp",
	"oguchi.aichi.jp",
	"oharu.aichi.jp",
	"okazaki.aichi.jp",
	"owariasahi.aichi.jp",
	"seto.aichi.jp",
	"shikatsu.aichi.jp",
	"shinshiro.aichi.jp",
	"shitara.aichi.jp",
	"tahara.aichi.jp",
	"takahama.aichi.jp",
	"tobishima.aichi.jp",
	"toei.aichi.jp",
	"togo.aichi.jp",
	"tokai.aichi.jp",
	"tokoname.aichi.jp",
	"toyoake.aichi.jp",
	"toyohashi.aichi.jp",
	"toyokawa.aichi.jp",
	"toyone.aichi.jp",
	"toyota.aichi.jp",
	"tsushima.aichi.jp",
	"yatomi.aichi.jp",
	"akita.akita.jp",
	"daisen.akita.jp",
	"fujisato.akita.jp",
	"gojome.akita.jp",
	"hachirogata.akita.jp",
	"happou.akita.jp",
	"higashinaruse.akita.jp",
	"honjo.akita.jp",
	"honjyo.akita.jp",
	"ikawa.akita.jp",
	"kamikoani.akita.jp",
	"kamioka.akita.jp",
	"katagami.akita.jp",
	"kazuno.akita.jp",
	"kitaakita.akita.jp",
	"kosaka.akita.jp",
	"kyowa.akita.jp",
	"misato.akita.jp",
	"mitane.akita.jp",
	"moriyoshi.akita.jp",
	"nikaho.akita.jp",
	"noshiro.akita.jp",
	"odate.akita.jp",
	"oga.akita.jp",
	"ogata.akita.jp",
	"semboku.akita.jp",
	"yokote.akita.jp",
	"yurihonjo.akita.jp",
	"aomori.aomori.jp",
	"gonohe.aomori.jp",
	"hachinohe.aomori.jp",
	"hashikami.aomori.jp",
	"hiranai.aomori.jp",
	"hirosaki.aomori.jp",
	"itayanagi.aomori.jp",
	"kuroishi.aomori.jp",
	"misawa.aomori.jp",
	"mutsu.aomori.jp",
	"nakadomari.aomori.jp",
	"noheji.aomori.jp",
	"oirase.aomori.jp",
	"owani.aomori.jp",
	"rokunohe.aomori.jp",
	"sannohe.aomori.jp",
	"shichinohe.aomori.jp",
	"shingo.aomori.jp",
	"takko.aomori.jp",
	"towada.aomori.jp",
	"tsugaru.aomori.jp",
	"tsuruta.aomori.jp",
	"abiko.chiba.jp",
	"asahi.chiba.jp",
	"chonan.chiba.jp",
	"chosei.chiba.jp",
	"choshi.chiba.jp",
	"chuo.chiba.jp",
	"funabashi.chiba.jp",
	"futtsu.chiba.jp",
	"hanamigawa.chiba.jp",
	"ichihara.chiba.jp",
	"ichikawa.chiba.jp",
	"ichinomiya.chiba.jp",
	"inzai.chiba.jp",
	"isumi.chiba.jp",
	"kamagaya.chiba.jp",
	"kamogawa.chiba.jp",
	"kashiwa.chiba.jp",
	"katori.chiba.jp",
	"katsuura.chiba.jp",
	"kimitsu.chiba.jp",
	"kisarazu.chiba.jp",
	"kozaki.chiba.jp",
	"kujukuri.chiba.jp",
	"kyonan.chiba.jp",
	"matsudo.chiba.jp",
	"midori.chiba.jp",
	"mihama.chiba.jp",
	"minamiboso.chiba.jp",
	"mobara.chiba.jp",
	"mutsuzawa.chiba.jp",
	"nagara.chiba.jp",
	"nagareyama.chiba.jp",
	"narashino.chiba.jp",
	"narita.chiba.jp",
	"noda.chiba.jp",
	"oamishirasato.chiba.jp",
	"omigawa.chiba.jp",
	"onjuku.chiba.jp",
	"otaki.chiba.jp",
	"sakae.chiba.jp",
	"sakura.chiba.jp",
	"shimofusa.chiba.jp",
	"shirako.chiba.jp",
	"shiroi.chiba.jp",
	"shisui.chiba.jp",
	"sodegaura.chiba.jp",
	"sosa.chiba.jp",
	"tako.chiba.jp",
	"tateyama.chiba.jp",
	"togane.chiba.jp",
	"tohnosho.chiba.jp",
	"tomisato.chiba.jp",
	"urayasu.chiba.jp",
	"yachimata.chiba.jp",
	"yachiyo.chiba.jp",
	"yokaichiba.chiba.jp",
	"yokoshibahikari.chiba.jp",
	"yotsukaido.chiba.jp",
	"ainan.ehime.jp",
	"honai.ehime.jp",
	"ikata.ehime.jp",
	"imabari.ehime.jp",
	"iyo.ehime.jp",
	"kamijima.ehime.jp",
	"kihoku.ehime.jp",
	"kumakogen.ehime.jp",
	"masaki.ehime.jp",
	"matsuno.ehime.jp",
	"matsuyama.ehime.jp",
	"namikata.ehime.jp",
	"niihama.ehime.jp",
	"ozu.ehime.jp",
	"saijo.ehime.jp",
	"seiyo.ehime.jp",
	"shikokuchuo.ehime.jp",
	"tobe.ehime.jp",
	"toon.ehime.jp",
	"uchiko.ehime.jp",
	"uwajima.ehime.jp",
	"yawatahama.ehime.jp",
	"echizen.fukui.jp",
	"eiheiji.fukui.jp",
	"fukui.fukui.jp",
	"ikeda.fukui.jp",
	"katsuyama.fukui.jp",
	"mihama.fukui.jp",
	"minamiechizen.fukui.jp",
	"obama.fukui.jp",
	"ohi.fukui.jp",
	"ono.fukui.jp",
	"sabae.fukui.jp",
	"sakai.fukui.jp",
	"takahama.fukui.jp",
	"tsuruga.fukui.jp",
	"wakasa.fukui.jp",
	"ashiya.fukuoka.jp",
	"buzen.fukuoka.jp",
	"chikugo.fukuoka.jp",
	"chikuho.fukuoka.jp",
	"chikujo.fukuoka.jp",
	"chikushino.fukuoka.jp",
	"chikuzen.fukuoka.jp",
	"chuo.fukuoka.jp",
	"dazaifu.fukuoka.jp",
	"fukuchi.fukuoka.jp",
	"hakata.fukuoka.jp",
	"higashi.fukuoka.jp",
	"hirokawa.fukuoka.jp",
	"hisayama.fukuoka.jp",
	"iizuka.fukuoka.jp",
	"inatsuki.fukuoka.jp",
	"kaho.fukuoka.jp",
	"kasuga.fukuoka.jp",
	"kasuya.fukuoka.jp",
	"kawara.fukuoka.jp",
	"keisen.fukuoka.jp",
	"koga.fukuoka.jp",
	"kurate.fukuoka.jp",
	"kurogi.fukuoka.jp",
	"kurume.fukuoka.jp",
	"minami.fukuoka.jp",
	"miyako.fukuoka.jp",
	"miyama.fukuoka.jp",
	"miyawaka.fukuoka.jp",
	"mizumaki.fukuoka.jp",
	"munakata.fukuoka.jp",
	"nakagawa.fukuoka.jp",
	"nakama.fukuoka.jp",
	"nishi.fukuoka.jp",
	"nogata.fukuoka.jp",
	"ogori.fukuoka.jp",
	"okagaki.fukuoka.jp",
	"okawa.fukuoka.jp",
	"oki.fukuoka.jp",
	"omuta.fukuoka.jp",
	"onga.fukuoka.jp",
	"onojo.fukuoka.jp",
	"oto.fukuoka.jp",
	"saigawa.fukuoka.jp",
	"sasaguri.fukuoka.jp",
	"shingu.fukuoka.jp",
	"shinyoshitomi.fukuoka.jp",
	"shonai.fukuoka.jp",
	"soeda.fukuoka.jp",
	"sue.fukuoka.jp",
	"tachiarai.fukuoka.jp",
	"tagawa.fukuoka.jp",
	"takata.fukuoka.jp",
	"toho.fukuoka.jp",
	"toyotsu.fukuoka.jp",
	"tsuiki.fukuoka.jp",
	"ukiha.fukuoka.jp",
	"umi.fukuoka.jp",
	"usui.fukuoka.jp",
	"yamada.fukuoka.jp",
	"yame.fukuoka.jp",
	"yanagawa.fukuoka.jp",
	"yukuhashi.fukuoka.jp",
	"aizubange.fukushima.jp",
	"aizumisato.fukushima.jp",
	"aizuwakamatsu.fukushima.jp",
	"asakawa.fukushima.jp",
	"bandai.fukushima.jp",
	"date.fukushima.jp",
	"fukushima.fukushima.jp",
	"furudono.fukushima.jp",
	"futaba.fukushima.jp",
	"hanawa.fukushima.jp",
	"higashi.fukushima.jp",
	"hirata.fukushima.jp",
	"hirono.fukushima.jp",
	"iitate.fukushima.jp",
	"inawashiro.fukushima.jp",
	"ishikawa.fukushima.jp",
	"iwaki.fukushima.jp",
	"izumizaki.fukushima.jp",
	"kagamiishi.fukushima.jp",
	"kaneyama.fukushima.jp",
	"kawamata.fukushima.jp",
	"kitakata.fukushima.jp",
	"kitashiobara.fukushima.jp",
	"koori.fukushima.jp",
	"koriyama.fukushima.jp",
	"kunimi.fukushima.jp",
	"miharu.fukushima.jp",
	"mishima.fukushima.jp",
	"namie.fukushima.jp",
	"nango.fukushima.jp",
	"nishiaizu.fukushima.jp",
	"nishigo.fukushima.jp",
	"okuma.fukushima.jp",
	"omotego.fukushima.jp",
	"ono.fukushima.jp",
	"otama.fukushima.jp",
	"samegawa.fukushima.jp",
	"shimogo.fukushima.jp",
	"shirakawa.fukushima.jp",
	"showa.fukushima.jp",
	"soma.fukushima.jp",
	"sukagawa.fukushima.jp",
	"taishin.fukushima.jp",
	"tamakawa.fukushima.jp",
	"tanagura.fukushima.jp",
	"tenei.fukushima.jp",
	"yabuki.fukushima.jp",
	"yamato.fukushima.jp",
	"yamatsuri.fukushima.jp",
	"yanaizu.fukushima.jp",
	"yugawa.fukushima.jp",
	"anpachi.gifu.jp",
	"ena.gifu.jp",
	"gifu.gifu.jp",
	"ginan.gifu.jp",
	"godo.gifu.jp",
	"gujo.gifu.jp",
	"hashima.gifu.jp",
	"hichiso.gifu.jp",
	"hida.gifu.jp",
	"higashishirakawa.gifu.jp",
	"ibigawa.gifu.jp",
	"ikeda.gifu.jp",
	"kakamigahara.gifu.jp",
	"kani.gifu.jp",
	"kasahara.gifu.jp",
	"kasamatsu.gifu.jp",
	"kawaue.gifu.jp",
	"kitagata.gifu.jp",
	"mino.gifu.jp",
	"minokamo.gifu.jp",
	"mitake.gifu.jp",
	"mizunami.gifu.jp",
	"motosu.gifu.jp",
	"nakatsugawa.gifu.jp",
	"ogaki.gifu.jp",
	"sakahogi.gifu.jp",
	"seki.gifu.jp",
	"sekigahara.gifu.jp",
	"shirakawa.gifu.jp",
	"tajimi.gifu.jp",
	"takayama.gifu.jp",
	"tarui.gifu.jp",
	"toki.gifu.jp",
	"tomika.gifu.jp",
	"wanouchi.gifu.jp",
	"yamagata.gifu.jp",
	"yaotsu.gifu.jp",
	"yoro.gifu.jp",
	"annaka.gunma.jp",
	"chiyoda.gunma.jp",
	"fujioka.gunma.jp",
	"higashiagatsuma.gunma.jp",
	"isesaki.gunma.jp",
	"itakura.gunma.jp",
	"kanna.gunma.jp",
	"kanra.gunma.jp",
	"katashina.gunma.jp",
	"kawaba.gunma.jp",
	"kiryu.gunma.jp",
	"kusatsu.gunma.jp",
	"maebashi.gunma.jp",
	"meiwa.gunma.jp",
	"midori.gunma.jp",
	"minakami.gunma.jp",
	"naganohara.gunma.jp",
	"nakanojo.gunma.jp",
	"nanmoku.gunma.jp",
	"numata.gunma.jp",
	"oizumi.gunma.jp",
	"ora.gunma.jp",
	"ota.gunma.jp",
	"shibukawa.gunma.jp",
	"shimonita.gunma.jp",
	"shinto.gunma.jp",
	"showa.gunma.jp",
	"takasaki.gunma.jp",
	"takayama.gunma.jp",
	"tamamura.gunma.jp",
	"tatebayashi.gunma.jp",
	"tomioka.gunma.jp",
	"tsukiyono.gunma.jp",
	"tsumagoi.gunma.jp",
	"ueno.gunma.jp",
	"yoshioka.gunma.jp",
	"asaminami.hiroshima.jp",
	"daiwa.hiroshima.jp",
	"etajima.hiroshima.jp",
	"fuchu.hiroshima.jp",
	"fukuyama.hiroshima.jp",
	"hatsukaichi.hiroshima.jp",
	"higashihiroshima.hiroshima.jp",
	"hongo.hiroshima.jp",
	"jinsekikogen.hiroshima.jp",
	"kaita.hiroshima.jp",
	"kui.hiroshima.jp",
	"kumano.hiroshima.jp",
	"kure.hiroshima.jp",
	"mihara.hiroshima.jp",
	"miyoshi.hiroshima.jp",
	"naka.hiroshima.jp",
	"onomichi.hiroshima.jp",
	"osakikamijima.hiroshima.jp",
	"otake.hiroshima.jp",
	"saka.hiroshima.jp",
	"sera.hiroshima.jp",
	"seranishi.hiroshima.jp",
	"shinichi.hiroshima.jp",
	"shobara.hiroshima.jp",
	"takehara.hiroshima.jp",
	"abashiri.hokkaido.jp",
	"abira.hokkaido.jp",
	"aibetsu.hokkaido.jp",
	"akabira.hokkaido.jp",
	"akkeshi.hokkaido.jp",
	"asahikawa.hokkaido.jp",
	"ashibetsu.hokkaido.jp",
	"ashoro.hokkaido.jp",
	"assabu.hokkaido.jp",
	"atsuma.hokkaido.jp",
	"bibai.hokkaido.jp",
	"biei.hokkaido.jp",
	"bifuka.hokkaido.jp",
	"bihoro.hokkaido.jp",
	"biratori.hokkaido.jp",
	"chippubetsu.hokkaido.jp",
	"chitose.hokkaido.jp",
	"date.hokkaido.jp",
	"ebetsu.hokkaido.jp",
	"embetsu.hokkaido.jp",
	"eniwa.hokkaido.jp",
	"erimo.hokkaido.jp",
	"esan.hokkaido.jp",
	"esashi.hokkaido.jp",
	"fukagawa.hokkaido.jp",
	"fukushima.hokkaido.jp",
	"furano.hokkaido.jp",
	"furubira.hokkaido.jp",
	"haboro.hokkaido.jp",
	"hakodate.hokkaido.jp",
	"hamatonbetsu.hokkaido.jp",
	"hidaka.hokkaido.jp",
	"higashikagura.hokkaido.jp",
	"higashikawa.hokkaido.jp",
	"hiroo.hokkaido.jp",
	"hokuryu.hokkaido.jp",
	"hokuto.hokkaido.jp",
	"honbetsu.hokkaido.jp",
	"horokanai.hokkaido.jp",
	"horonobe.hokkaido.jp",
	"ikeda.hokkaido.jp",
	"imakane.hokkaido.jp",
	"ishikari.hokkaido.jp",
	"iwamizawa.hokkaido.jp",
	"iwanai.hokkaido.jp",
	"kamifurano.hokkaido.jp",
	"kamikawa.hokkaido.jp",
	"kamishihoro.hokkaido.jp",
	"kamisunagawa.hokkaido.jp",
	"kamoenai.hokkaido.jp",
	"kayabe.hokkaido.jp",
	"kembuchi.hokkaido.jp",
	"kikonai.hokkaido.jp",
	"kimobetsu.hokkaido.jp",
	"kitahiroshima.hokkaido.jp",
	"kitami.hokkaido.jp",
	"kiyosato.hokkaido.jp",
	"koshimizu.hokkaido.jp",
	"kunneppu.hokkaido.jp",
	"kuriyama.hokkaido.jp",
	"kuromatsunai.hokkaido.jp",
	"kushiro.hokkaido.jp",
	"kutchan.hokkaido.jp",
	"kyowa.hokkaido.jp",
	"mashike.hokkaido.jp",
	"matsumae.hokkaido.jp",
	"mikasa.hokkaido.jp",
	"minamifurano.hokkaido.jp",
	"mombetsu.hokkaido.jp",
	"moseushi.hokkaido.jp",
	"mukawa.hokkaido.jp",
	"muroran.hokkaido.jp",
	"naie.hokkaido.jp",
	"nakagawa.hokkaido.jp",
	"nakasatsunai.hokkaido.jp",
	"nakatombetsu.hokkaido.jp",
	"nanae.hokkaido.jp",
	"nanporo.hokkaido.jp",
	"nayoro.hokkaido.jp",
	"nemuro.hokkaido.jp",
	"niikappu.hokkaido.jp",
	"niki.hokkaido.jp",
	"nishiokoppe.hokkaido.jp",
	"noboribetsu.hokkaido.jp",
	"numata.hokkaido.jp",
	"obihiro.hokkaido.jp",
	"obira.hokkaido.jp",
	"oketo.hokkaido.jp",
	"okoppe.hokkaido.jp",
	"otaru.hokkaido.jp",
	"otobe.hokkaido.jp",
	"otofuke.hokkaido.jp",
	"otoineppu.hokkaido.jp",
	"oumu.hokkaido.jp",
	"ozora.hokkaido.jp",
	"pippu.hokkaido.jp",
	"rankoshi.hokkaido.jp",
	"rebun.hokkaido.jp",
	"rikubetsu.hokkaido.jp",
	"rishiri.hokkaido.jp",
	"rishirifuji.hokkaido.jp",
	"saroma.hokkaido.jp",
	"sarufutsu.hokkaido.jp",
	"shakotan.hokkaido.jp",
	"shari.hokkaido.jp",
	"shibecha.hokkaido.jp",
	"shibetsu.hokkaido.jp",
	"shikabe.hokkaido.jp",
	"shikaoi.hokkaido.jp",
	"shimamaki.hokkaido.jp",
	"shimizu.hokkaido.jp",
	"shimokawa.hokkaido.jp",
	"shinshinotsu.hokkaido.jp",
	"shintoku.hokkaido.jp",
	"shiranuka.hokkaido.jp",
	"shiraoi.hokkaido.jp",
	"shiriuchi.hokkaido.jp",
	"sobetsu.hokkaido.jp",
	"sunagawa.hokkaido.jp",
	"taiki.hokkaido.jp",
	"takasu.hokkaido.jp",
	"takikawa.hokkaido.jp",
	"takinoue.hokkaido.jp",
	"teshikaga.hokkaido.jp",
	"tobetsu.hokkaido.jp",
	"tohma.hokkaido.jp",
	"tomakomai.hokkaido.jp",
	"tomari.hokkaido.jp",
	"toya.hokkaido.jp",
	"toyako.hokkaido.jp",
	"toyotomi.hokkaido.jp",
	"toyoura.hokkaido.jp",
	"tsubetsu.hokkaido.jp",
	"tsukigata.hokkaido.jp",
	"urakawa.hokkaido.jp",
	"urausu.hokkaido.jp",
	"uryu.hokkaido.jp",
	"utashinai.hokkaido.jp",
	"wakkanai.hokkaido.jp",
	"wassamu.hokkaido.jp",
	"yakumo.hokkaido.jp",
	"yoichi.hokkaido.jp",
	"aioi.hyogo.jp",
	"akashi.hyogo.jp",
	"ako.hyogo.jp",
	"amagasaki.hyogo.jp",
	"aogaki.hyogo.jp",
	"asago.hyogo.jp",
	"ashiya.hyogo.jp",
	"awaji.hyogo.jp",
	"fukusaki.hyogo.jp",
	"goshiki.hyogo.jp",
	"harima.hyogo.jp",
	"himeji.hyogo.jp",
	"ichikawa.hyogo.jp",
	"inagawa.hyogo.jp",
	"itami.hyogo.jp",
	"kakogawa.hyogo.jp",
	"kamigori.hyogo.jp",
	"kamikawa.hyogo.jp",
	"kasai.hyogo.jp",
	"kasuga.hyogo.jp",
	"kawanishi.hyogo.jp",
	"miki.hyogo.jp",
	"minamiawaji.hyogo.jp",
	"nishinomiya.hyogo.jp",
	"nishiwaki.hyogo.jp",
	"ono.hyogo.jp",
	"sanda.hyogo.jp",
	"sannan.hyogo.jp",
	"sasayama.hyogo.jp",
	"sayo.hyogo.jp",
	"shingu.hyogo.jp",
	"shinonsen.hyogo.jp",
	"shiso.hyogo.jp",
	"sumoto.hyogo.jp",
	"taishi.hyogo.jp",
	"taka.hyogo.jp",
	"takarazuka.hyogo.jp",
	"takasago.hyogo.jp",
	"takino.hyogo.jp",
	"tamba.hyogo.jp",
	"tatsuno.hyogo.jp",
	"toyooka.hyogo.jp",
	"yabu.hyogo.jp",
	"yashiro.hyogo.jp",
	"yoka.hyogo.jp",
	"yokawa.hyogo.jp",
	"ami.ibaraki.jp",
	"asahi.ibaraki.jp",
	"bando.ibaraki.jp",
	"chikusei.ibaraki.jp",
	"daigo.ibaraki.jp",
	"fujishiro.ibaraki.jp",
	"hitachi.ibaraki.jp",
	"hitachinaka.ibaraki.jp",
	"hitachiomiya.ibaraki.jp",
	"hitachiota.ibaraki.jp",
	"ibaraki.ibaraki.jp",
	"ina.ibaraki.jp",
	"inashiki.ibaraki.jp",
	"itako.ibaraki.jp",
	"iwama.ibaraki.jp",
	"joso.ibaraki.jp",
	"kamisu.ibaraki.jp",
	"kasama.ibaraki.jp",
	"kashima.ibaraki.jp",
	"kasumigaura.ibaraki.jp",
	"koga.ibaraki.jp",
	"miho.ibaraki.jp",
	"mito.ibaraki.jp",
	"moriya.ibaraki.jp",
	"naka.ibaraki.jp",
	"namegata.ibaraki.jp",
	"oarai.ibaraki.jp",
	"ogawa.ibaraki.jp",
	"omitama.ibaraki.jp",
	"ryugasaki.ibaraki.jp",
	"sakai.ibaraki.jp",
	"sakuragawa.ibaraki.jp",
	"shimodate.ibaraki.jp",
	"shimotsuma.ibaraki.jp",
	"shirosato.ibaraki.jp",
	"sowa.ibaraki.jp",
	"suifu.ibaraki.jp",
	"takahagi.ibaraki.jp",
	"tamatsukuri.ibaraki.jp",
	"tokai.ibaraki.jp",
	"tomobe.ibaraki.jp",
	"tone.ibaraki.jp",
	"toride.ibaraki.jp",
	"tsuchiura.ibaraki.jp",
	"tsukuba.ibaraki.jp",
	"uchihara.ibaraki.jp",
	"ushiku.ibaraki.jp",
	"yachiyo.ibaraki.jp",
	"yamagata.ibaraki.jp",
	"yawara.ibaraki.jp",
	"yuki.ibaraki.jp",
	"anamizu.ishikawa.jp",
	"hakui.ishikawa.jp",
	"hakusan.ishikawa.jp",
	"kaga.ishikawa.jp",
	"kahoku.ishikawa.jp",
	"kanazawa.ishikawa.jp",
	"kawakita.ishikawa.jp",
	"komatsu.ishikawa.jp",
	"nakanoto.ishikawa.jp",
	"nanao.ishikawa.jp",
	"nomi.ishikawa.jp",
	"nonoichi.ishikawa.jp",
	"noto.ishikawa.jp",
	"shika.ishikawa.jp",
	"suzu.ishikawa.jp",
	"tsubata.ishikawa.jp",
	"tsurugi.ishikawa.jp",
	"uchinada.ishikawa.jp",
	"wajima.ishikawa.jp",
	"fudai.iwate.jp",
	"fujisawa.iwate.jp",
	"hanamaki.iwate.jp",
	"hiraizumi.iwate.jp",
	"hirono.iwate.jp",
	"ichinohe.iwate.jp",
	"ichinoseki.iwate.jp",
	"iwaizumi.iwate.jp",
	"iwate.iwate.jp",
	"joboji.iwate.jp",
	"kamaishi.iwate.jp",
	"kanegasaki.iwate.jp",
	"karumai.iwate.jp",
	"kawai.iwate.jp",
	"kitakami.iwate.jp",
	"kuji.iwate.jp",
	"kunohe.iwate.jp",
	"kuzumaki.iwate.jp",
	"miyako.iwate.jp",
	"mizusawa.iwate.jp",
	"morioka.iwate.jp",
	"ninohe.iwate.jp",
	"noda.iwate.jp",
	"ofunato.iwate.jp",
	"oshu.iwate.jp",
	"otsuchi.iwate.jp",
	"rikuzentakata.iwate.jp",
	"shiwa.iwate.jp",
	"shizukuishi.iwate.jp",
	"sumita.iwate.jp",
	"tanohata.iwate.jp",
	"tono.iwate.jp",
	"yahaba.iwate.jp",
	"yamada.iwate.jp",
	"ayagawa.kagawa.jp",
	"higashikagawa.kagawa.jp",
	"kanonji.kagawa.jp",
	"kotohira.kagawa.jp",
	"manno.kagawa.jp",
	"marugame.kagawa.jp",
	"mitoyo.kagawa.jp",
	"naoshima.kagawa.jp",
	"sanuki.kagawa.jp",
	"tadotsu.kagawa.jp",
	"takamatsu.kagawa.jp",
	"tonosho.kagawa.jp",
	"uchinomi.kagawa.jp",
	"utazu.kagawa.jp",
	"zentsuji.kagawa.jp",
	"akune.kagoshima.jp",
	"amami.kagoshima.jp",
	"hioki.kagoshima.jp",
	"isa.kagoshima.jp",
	"isen.kagoshima.jp",
	"izumi.kagoshima.jp",
	"kagoshima.kagoshima.jp",
	"kanoya.kagoshima.jp",
	"kawanabe.kagoshima.jp",
	"kinko.kagoshima.jp",
	"kouyama.kagoshima.jp",
	"makurazaki.kagoshima.jp",
	"matsumoto.kagoshima.jp",
	"minamitane.kagoshima.jp",
	"nakatane.kagoshima.jp",
	"nishinoomote.kagoshima.jp",
	"satsumasendai.kagoshima.jp",
	"soo.kagoshima.jp",
	"tarumizu.kagoshima.jp",
	"yusui.kagoshima.jp",
	"aikawa.kanagawa.jp",
	"atsugi.kanagawa.jp",
	"ayase.kanagawa.jp",
	"chigasaki.kanagawa.jp",
	"ebina.kanagawa.jp",
	"fujisawa.kanagawa.jp",
	"hadano.kanagawa.jp",
	"hakone.kanagawa.jp",
	"hiratsuka.kanagawa.jp",
	"isehara.kanagawa.jp",
	"kaisei.kanagawa.jp",
	"kamakura.kanagawa.jp",
	"kiyokawa.kanagawa.jp",
	"matsuda.kanagawa.jp",
	"minamiashigara.kanagawa.jp",
	"miura.kanagawa.jp",
	"nakai.kanagawa.jp",
	"ninomiya.kanagawa.jp",
	"odawara.kanagawa.jp",
	"oi.kanagawa.jp",
	"oiso.kanagawa.jp",
	"sagamihara.kanagawa.jp",
	"samukawa.kanagawa.jp",
	"tsukui.kanagawa.jp",
	"yamakita.kanagawa.jp",
	"yamato.kanagawa.jp",
	"yokosuka.kanagawa.jp",
	"yugawara.kanagawa.jp",
	"zama.kanagawa.jp",
	"zushi.kanagawa.jp",
	"aki.kochi.jp",
	"geisei.kochi.jp",
	"hidaka.kochi.jp",
	"higashitsuno.kochi.jp",
	"ino.kochi.jp",
	"kagami.kochi.jp",
	"kami.kochi.jp",
	"kitagawa.kochi.jp",
	"kochi.kochi.jp",
	"mihara.kochi.jp",
	"motoyama.kochi.jp",
	"muroto.kochi.jp",
	"nahari.kochi.jp",
	"nakamura.kochi.jp",
	"nankoku.kochi.jp",
	"nishitosa.kochi.jp",
	"niyodogawa.kochi.jp",
	"ochi.kochi.jp",
	"okawa.kochi.jp",
	"otoyo.kochi.jp",
	"otsuki.kochi.jp",
	"sakawa.kochi.jp",
	"sukumo.kochi.jp",
	"susaki.kochi.jp",
	"tosa.kochi.jp",
	"tosashimizu.kochi.jp",
	"toyo.kochi.jp",
	"tsuno.kochi.jp",
	"umaji.kochi.jp",
	"yasuda.kochi.jp",
	"yusuhara.kochi.jp",
	"amakusa.kumamoto.jp",
	"arao.kumamoto.jp",
	"aso.kumamoto.jp",
	"choyo.kumamoto.jp",
	"gyokuto.kumamoto.jp",
	"kamiamakusa.kumamoto.jp",
	"kikuchi.kumamoto.jp",
	"kumamoto.kumamoto.jp",
	"mashiki.kumamoto.jp",
	"mifune.kumamoto.jp",
	"minamata.kumamoto.jp",
	"minamioguni.kumamoto.jp",
	"nagasu.kumamoto.jp",
	"nishihara.kumamoto.jp",
	"oguni.kumamoto.jp",
	"ozu.kumamoto.jp",
	"sumoto.kumamoto.jp",
	"takamori.kumamoto.jp",
	"uki.kumamoto.jp",
	"uto.kumamoto.jp",
	"yamaga.kumamoto.jp",
	"yamato.kumamoto.jp",
	"yatsushiro.kumamoto.jp",
	"ayabe.kyoto.jp",
	"fukuchiyama.kyoto.jp",
	"higashiyama.kyoto.jp",
	"ide.kyoto.jp",
	"ine.kyoto.jp",
	"joyo.kyoto.jp",
	"kameoka.kyoto.jp",
	"kamo.kyoto.jp",
	"kita.kyoto.jp",
	"kizu.kyoto.jp",
	"kumiyama.kyoto.jp",
	"kyotamba.kyoto.jp",
	"kyotanabe.kyoto.jp",
	"kyotango.kyoto.jp",
	"maizuru.kyoto.jp",
	"minami.kyoto.jp",
	"minamiyamashiro.kyoto.jp",
	"miyazu.kyoto.jp",
	"muko.kyoto.jp",
	"nagaokakyo.kyoto.jp",
	"nakagyo.kyoto.jp",
	"nantan.kyoto.jp",
	"oyamazaki.kyoto.jp",
	"sakyo.kyoto.jp",
	"seika.kyoto.jp",
	"tanabe.kyoto.jp",
	"uji.kyoto.jp",
	"ujitawara.kyoto.jp",
	"wazuka.kyoto.jp",
	"yamashina.kyoto.jp",
	"yawata.kyoto.jp",
	"asahi.mie.jp",
	"inabe.mie.jp",
	"ise.mie.jp",
	"kameyama.mie.jp",
	"kawagoe.mie.jp",
	"kiho.mie.jp",
	"kisosaki.mie.jp",
	"kiwa.mie.jp",
	"komono.mie.jp",
	"kumano.mie.jp",
	"kuwana.mie.jp",
	"matsusaka.mie.jp",
	"meiwa.mie.jp",
	"mihama.mie.jp",
	"minamiise.mie.jp",
	"misugi.mie.jp",
	"miyama.mie.jp",
	"nabari.mie.jp",
	"shima.mie.jp",
	"suzuka.mie.jp",
	"tado.mie.jp",
	"taiki.mie.jp",
	"taki.mie.jp",
	"tamaki.mie.jp",
	"toba.mie.jp",
	"tsu.mie.jp",
	"udono.mie.jp",
	"ureshino.mie.jp",
	"watarai.mie.jp",
	"yokkaichi.mie.jp",
	"furukawa.miyagi.jp",
	"higashimatsushima.miyagi.jp",
	"ishinomaki.miyagi.jp",
	"iwanuma.miyagi.jp",
	"kakuda.miyagi.jp",
	"kami.miyagi.jp",
	"kawasaki.miyagi.jp",
	"marumori.miyagi.jp",
	"matsushima.miyagi.jp",
	"minamisanriku.miyagi.jp",
	"misato.miyagi.jp",
	"murata.miyagi.jp",
	"natori.miyagi.jp",
	"ogawara.miyagi.jp",
	"ohira.miyagi.jp",
	"onagawa.miyagi.jp",
	"osaki.miyagi.jp",
	"rifu.miyagi.jp",
	"semine.miyagi.jp",
	"shibata.miyagi.jp",
	"shichikashuku.miyagi.jp",
	"shikama.miyagi.jp",
	"shiogama.miyagi.jp",
	"shiroishi.miyagi.jp",
	"tagajo.miyagi.jp",
	"taiwa.miyagi.jp",
	"tome.miyagi.jp",
	"tomiya.miyagi.jp",
	"wakuya.miyagi.jp",
	"watari.miyagi.jp",
	"yamamoto.miyagi.jp",
	"zao.miyagi.jp",
	"aya.miyazaki.jp",
	"ebino.miyazaki.jp",
	"gokase.miyazaki.jp",
	"hyuga.miyazaki.jp",
	"kadogawa.miyazaki.jp",
	"kawaminami.miyazaki.jp",
	"kijo.miyazaki.jp",
	"kitagawa.miyazaki.jp",
	"kitakata.miyazaki.jp",
	"kitaura.miyazaki.jp",
	"kobayashi.miyazaki.jp",
	"kunitomi.miyazaki.jp",
	"kushima.miyazaki.jp",
	"mimata.miyazaki.jp",
	"miyakonojo.miyazaki.jp",
	"miyazaki.miyazaki.jp",
	"morotsuka.miyazaki.jp",
	"nichinan.miyazaki.jp",
	"nishimera.miyazaki.jp",
	"nobeoka.miyazaki.jp",
	"saito.miyazaki.jp",
	"shiiba.miyazaki.jp",
	"shintomi.miyazaki.jp",
	"takaharu.miyazaki.jp",
	"takanabe.miyazaki.jp",
	"takazaki.miyazaki.jp",
	"tsuno.miyazaki.jp",
	"achi.nagano.jp",
	"agematsu.nagano.jp",
	"anan.nagano.jp",
	"aoki.nagano.jp",
	"asahi.nagano.jp",
	"azumino.nagano.jp",
	"chikuhoku.nagano.jp",
	"chikuma.nagano.jp",
	"chino.nagano.jp",
	"fujimi.nagano.jp",
	"hakuba.nagano.jp",
	"hara.nagano.jp",
	"hiraya.nagano.jp",
	"iida.nagano.jp",
	"iijima.nagano.jp",
	"iiyama.nagano.jp",
	"iizuna.nagano.jp",
	"ikeda.nagano.jp",
	"ikusaka.nagano.jp",
	"ina.nagano.jp",
	"karuizawa.nagano.jp",
	"kawakami.nagano.jp",
	"kiso.nagano.jp",
	"kisofukushima.nagano.jp",
	"kitaaiki.nagano.jp",
	"komagane.nagano.jp",
	"komoro.nagano.jp",
	"matsukawa.nagano.jp",
	"matsumoto.nagano.jp",
	"miasa.nagano.jp",
	"minamiaiki.nagano.jp",
	"minamimaki.nagano.jp",
	"minamiminowa.nagano.jp",
	"minowa.nagano.jp",
	"miyada.nagano.jp",
	"miyota.nagano.jp",
	"mochizuki.nagano.jp",
	"nagano.nagano.jp",
	"nagawa.nagano.jp",
	"nagiso.nagano.jp",
	"nakagawa.nagano.jp",
	"nakano.nagano.jp",
	"nozawaonsen.nagano.jp",
	"obuse.nagano.jp",
	"ogawa.nagano.jp",
	"okaya.nagano.jp",
	"omachi.nagano.jp",
	"omi.nagano.jp",
	"ookuwa.nagano.jp",
	"ooshika.nagano.jp",
	"otaki.nagano.jp",
	"otari.nagano.jp",
	"sakae.nagano.jp",
	"sakaki.nagano.jp",
	"saku.nagano.jp",
	"sakuho.nagano.jp",
	"shimosuwa.nagano.jp",
	"shinanomachi.nagano.jp",
	"shiojiri.nagano.jp",
	"suwa.nagano.jp",
	"suzaka.nagano.jp",
	"takagi.nagano.jp",
	"takamori.nagano.jp",
	"takayama.nagano.jp",
	"tateshina.nagano.jp",
	"tatsuno.nagano.jp",
	"togakushi.nagano.jp",
	"togura.nagano.jp",
	"tomi.nagano.jp",
	"ueda.nagano.jp",
	"wada.nagano.jp",
	"yamagata.nagano.jp",
	"yamanouchi.nagano.jp",
	"yasaka.nagano.jp",
	"yasuoka.nagano.jp",
	"chijiwa.nagasaki.jp",
	"futsu.nagasaki.jp",
	"goto.nagasaki.jp",
	"hasami.nagasaki.jp",
	"hirado.nagasaki.jp",
	"iki.nagasaki.jp",
	"isahaya.nagasaki.jp",
	"kawatana.nagasaki.jp",
	"kuchinotsu.nagasaki.jp",
	"matsuura.nagasaki.jp",
	"nagasaki.nagasaki.jp",
	"obama.nagasaki.jp",
	"omura.nagasaki.jp",
	"oseto.nagasaki.jp",
	"saikai.nagasaki.jp",
	"sasebo.nagasaki.jp",
	"seihi.nagasaki.jp",
	"shimabara.nagasaki.jp",
	"shinkamigoto.nagasaki.jp",
	"togitsu.nagasaki.jp",
	"tsushima.nagasaki.jp",
	"unzen.nagasaki.jp",
	"ando.nara.jp",
	"gose.nara.jp",
	"heguri.nara.jp",
	"higashiyoshino.nara.jp",
	"ikaruga.nara.jp",
	"ikoma.nara.jp",
	"kamikitayama.nara.jp",
	"kanmaki.nara.jp",
	"kashiba.nara.jp",
	"kashihara.nara.jp",
	"katsuragi.nara.jp",
	"kawai.nara.jp",
	"kawakami.nara.jp",
	"kawanishi.nara.jp",
	"koryo.nara.jp",
	"kurotaki.nara.jp",
	"mitsue.nara.jp",
	"miyake.nara.jp",
	"nara.nara.jp",
	"nosegawa.nara.jp",
	"oji.nara.jp",
	"ouda.nara.jp",
	"oyodo.nara.jp",
	"sakurai.nara.jp",
	"sango.nara.jp",
	"shimoichi.nara.jp",
	"shimokitayama.nara.jp",
	"shinjo.nara.jp",
	"soni.nara.jp",
	"takatori.nara.jp",
	"tawaramoto.nara.jp",
	"tenkawa.nara.jp",
	"tenri.nara.jp",
	"uda.nara.jp",
	"yamatokoriyama.nara.jp",
	"yamatotakada.nara.jp",
	"yamazoe.nara.jp",
	"yoshino.nara.jp",
	"aga.niigata.jp",
	"agano.niigata.jp",
	"gosen.niigata.jp",
	"itoigawa.niigata.jp",
	"izumozaki.niigata.jp",
	"joetsu.niigata.jp",
	"kamo.niigata.jp",
	"kariwa.niigata.jp",
	"kashiwazaki.niigata.jp",
	"minamiuonuma.niigata.jp",
	"mitsuke.niigata.jp",
	"muika.niigata.jp",
	"murakami.niigata.jp",
	"myoko.niigata.jp",
	"nagaoka.niigata.jp",
	"niigata.niigata.jp",
	"ojiya.niigata.jp",
	"omi.niigata.jp",
	"sado.niigata.jp",
	"sanjo.niigata.jp",
	"seiro.niigata.jp",
	"seirou.niigata.jp",
	"sekikawa.niigata.jp",
	"shibata.niigata.jp",
	"tagami.niigata.jp",
	"tainai.niigata.jp",
	"tochio.niigata.jp",
	"tokamachi.niigata.jp",
	"tsubame.niigata.jp",
	"tsunan.niigata.jp",
	"uonuma.niigata.jp",
	"yahiko.niigata.jp",
	"yoita.niigata.jp",
	"yuzawa.niigata.jp",
	"beppu.oita.jp",
	"bungoono.oita.jp",
	"bungotakada.oita.jp",
	"hasama.oita.jp",
	"hiji.oita.jp",
	"himeshima.oita.jp",
	"hita.oita.jp",
	"kamitsue.oita.jp",
	"kokonoe.oita.jp",
	"kuju.oita.jp",
	"kunisaki.oita.jp",
	"kusu.oita.jp",
	"oita.oita.jp",
	"saiki.oita.jp",
	"taketa.oita.jp",
	"tsukumi.oita.jp",
	"usa.oita.jp",
	"usuki.oita.jp",
	"yufu.oita.jp",
	"akaiwa.okayama.jp",
	"asakuchi.okayama.jp",
	"bizen.okayama.jp",
	"hayashima.okayama.jp",
	"ibara.okayama.jp",
	"kagamino.okayama.jp",
	"kasaoka.okayama.jp",
	"kibichuo.okayama.jp",
	"kumenan.okayama.jp",
	"kurashiki.okayama.jp",
	"maniwa.okayama.jp",
	"misaki.okayama.jp",
	"nagi.okayama.jp",
	"niimi.okayama.jp",
	"nishiawakura.okayama.jp",
	"okayama.okayama.jp",
	"satosho.okayama.jp",
	"setouchi.okayama.jp",
	"shinjo.okayama.jp",
	"shoo.okayama.jp",
	"soja.okayama.jp",
	"takahashi.okayama.jp",
	"tamano.okayama.jp",
	"tsuyama.okayama.jp",
	"wake.okayama.jp",
	"yakage.okayama.jp",
	"aguni.okinawa.jp",
	"ginowan.okinawa.jp",
	"ginoza.okinawa.jp",
	"gushikami.okinawa.jp",
	"haebaru.okinawa.jp",
	"higashi.okinawa.jp",
	"hirara.okinawa.jp",
	"iheya.okinawa.jp",
	"ishigaki.okinawa.jp",
	"ishikawa.okinawa.jp",
	"itoman.okinawa.jp",
	"izena.okinawa.jp",
	"kadena.okinawa.jp",
	"kin.okinawa.jp",
	"kitadaito.okinawa.jp",
	"kitanakagusuku.okinawa.jp",
	"kumejima.okinawa.jp",
	"kunigami.okinawa.jp",
	"minamidaito.okinawa.jp",
	"motobu.okinawa.jp",
	"nago.okinawa.jp",
	"naha.okinawa.jp",
	"nakagusuku.okinawa.jp",
	"nakijin.okinawa.jp",
	"nanjo.okinawa.jp",
	"nishihara.okinawa.jp",
	"ogimi.okinawa.jp",
	"okinawa.okinawa.jp",
	"onna.okinawa.jp",
	"shimoji.okinawa.jp",
	"taketomi.okinawa.jp",
	"tarama.okinawa.jp",
	"tokashiki.okinawa.jp",
	"tomigusuku.okinawa.jp",
	"tonaki.okinawa.jp",
	"urasoe.okinawa.jp",
	"uruma.okinawa.jp",
	"yaese.okinawa.jp",
	"yomitan.okinawa.jp",
	"yonabaru.okinawa.jp",
	"yonaguni.okinawa.jp",
	"zamami.okinawa.jp",
	"abeno.osaka.jp",
	"chihayaakasaka.osaka.jp",
	"chuo.osaka.jp",
	"daito.osaka.jp",
	"fujiidera.osaka.jp",
	"habikino.osaka.jp",
	"hannan.osaka.jp",
	"higashiosaka.osaka.jp",
	"higashisumiyoshi.osaka.jp",
	"higashiyodogawa.osaka.jp",
	"hirakata.osaka.jp",
	"ibaraki.osaka.jp",
	"ikeda.osaka.jp",
	"izumi.osaka.jp",
	"izumiotsu.osaka.jp",
	"izumisano.osaka.jp",
	"kadoma.osaka.jp",
	"kaizuka.osaka.jp",
	"kanan.osaka.jp",
	"kashiwara.osaka.jp",
	"katano.osaka.jp",
	"kawachinagano.osaka.jp",
	"kishiwada.osaka.jp",
	"kita.osaka.jp",
	"kumatori.osaka.jp",
	"matsubara.osaka.jp",
	"minato.osaka.jp",
	"minoh.osaka.jp",
	"misaki.osaka.jp",
	"moriguchi.osaka.jp",
	"neyagawa.osaka.jp",
	"nishi.osaka.jp",
	"nose.osaka.jp",
	"osakasayama.osaka.jp",
	"sakai.osaka.jp",
	"sayama.osaka.jp",
	"sennan.osaka.jp",
	"settsu.osaka.jp",
	"shijonawate.osaka.jp",
	"shimamoto.osaka.jp",
	"suita.osaka.jp",
	"tadaoka.osaka.jp",
	"taishi.osaka.jp",
	"tajiri.osaka.jp",
	"takaishi.osaka.jp",
	"takatsuki.osaka.jp",
	"tondabayashi.osaka.jp",
	"toyonaka.osaka.jp",
	"toyono.osaka.jp",
	"yao.osaka.jp",
	"ariake.saga.jp",
	"arita.saga.jp",
	"fukudomi.saga.jp",
	"genkai.saga.jp",
	"hamatama.saga.jp",
	"hizen.saga.jp",
	"imari.saga.jp",
	"kamimine.saga.jp",
	"kanzaki.saga.jp",
	"karatsu.saga.jp",
	"kashima.saga.jp",
	"kitagata.saga.jp",
	"kitahata.saga.jp",
	"kiyama.saga.jp",
	"kouhoku.saga.jp",
	"kyuragi.saga.jp",
	"nishiarita.saga.jp",
	"ogi.saga.jp",
	"omachi.saga.jp",
	"ouchi.saga.jp",
	"saga.saga.jp",
	"shiroishi.saga.jp",
	"taku.saga.jp",
	"tara.saga.jp",
	"tosu.saga.jp",
	"yoshinogari.saga.jp",
	"arakawa.saitama.jp",
	"asaka.saitama.jp",
	"chichibu.saitama.jp",
	"fujimi.saitama.jp",
	"fujimino.saitama.jp",
	"fukaya.saitama.jp",
	"hanno.saitama.jp",
	"hanyu.saitama.jp",
	"hasuda.saitama.jp",
	"hatogaya.saitama.jp",
	"hatoyama.saitama.jp",
	"hidaka.saitama.jp",
	"higashichichibu.saitama.jp",
	"higashimatsuyama.saitama.jp",
	"honjo.saitama.jp",
	"ina.saitama.jp",
	"iruma.saitama.jp",
	"iwatsuki.saitama.jp",
	"kamiizumi.saitama.jp",
	"kamikawa.saitama.jp",
	"kamisato.saitama.jp",
	"kasukabe.saitama.jp",
	"kawagoe.saitama.jp",
	"kawaguchi.saitama.jp",
	"kawajima.saitama.jp",
	"kazo.saitama.jp",
	"kitamoto.saitama.jp",
	"koshigaya.saitama.jp",
	"kounosu.saitama.jp",
	"kuki.saitama.jp",
	"kumagaya.saitama.jp",
	"matsubushi.saitama.jp",
	"minano.saitama.jp",
	"misato.saitama.jp",
	"miyashiro.saitama.jp",
	"miyoshi.saitama.jp",
	"moroyama.saitama.jp",
	"nagatoro.saitama.jp",
	"namegawa.saitama.jp",
	"niiza.saitama.jp",
	"ogano.saitama.jp",
	"ogawa.saitama.jp",
	"ogose.saitama.jp",
	"okegawa.saitama.jp",
	"omiya.saitama.jp",
	"otaki.saitama.jp",
	"ranzan.saitama.jp",
	"ryokami.saitama.jp",
	"saitama.saitama.jp",
	"sakado.saitama.jp",
	"satte.saitama.jp",
	"sayama.saitama.jp",
	"shiki.saitama.jp",
	"shiraoka.saitama.jp",
	"soka.saitama.jp",
	"sugito.saitama.jp",
	"toda.saitama.jp",
	"tokigawa.saitama.jp",
	"tokorozawa.saitama.jp",
	"tsurugashima.saitama.jp",
	"urawa.saitama.jp",
	"warabi.saitama.jp",
	"yashio.saitama.jp",
	"yokoze.saitama.jp",
	"yono.saitama.jp",
	"yorii.saitama.jp",
	"yoshida.saitama.jp",
	"yoshikawa.saitama.jp",
	"yoshimi.saitama.jp",
	"aisho.shiga.jp",
	"gamo.shiga.jp",
	"higashiomi.shiga.jp",
	"hikone.shiga.jp",
	"koka.shiga.jp",
	"konan.shiga.jp",
	"kosei.shiga.jp",
	"koto.shiga.jp",
	"kusatsu.shiga.jp",
	"maibara.shiga.jp",
	"moriyama.shiga.jp",
	"nagahama.shiga.jp",
	"nishiazai.shiga.jp",
	"notogawa.shiga.jp",
	"omihachiman.shiga.jp",
	"otsu.shiga.jp",
	"ritto.shiga.jp",
	"ryuoh.shiga.jp",
	"takashima.shiga.jp",
	"takatsuki.shiga.jp",
	"torahime.shiga.jp",
	"toyosato.shiga.jp",
	"yasu.shiga.jp",
	"akagi.shimane.jp",
	"ama.shimane.jp",
	"gotsu.shimane.jp",
	"hamada.shimane.jp",
	"higashiizumo.shimane.jp",
	"hikawa.shimane.jp",
	"hikimi.shimane.jp",
	"izumo.shimane.jp",
	"kakinoki.shimane.jp",
	"masuda.shimane.jp",
	"matsue.shimane.jp",
	"misato.shimane.jp",
	"nishinoshima.shimane.jp",
	"ohda.shimane.jp",
	"okinoshima.shimane.jp",
	"okuizumo.shimane.jp",
	"shimane.shimane.jp",
	"tamayu.shimane.jp",
	"tsuwano.shimane.jp",
	"unnan.shimane.jp",
	"yakumo.shimane.jp",
	"yasugi.shimane.jp",
	"yatsuka.shimane.jp",
	"arai.shizuoka.jp",
	"atami.shizuoka.jp",
	"fuji.shizuoka.jp",
	"fujieda.shizuoka.jp",
	"fujikawa.shizuoka.jp",
	"fujinomiya.shizuoka.jp",
	"fukuroi.shizuoka.jp",
	"gotemba.shizuoka.jp",
	"haibara.shizuoka.jp",
	"hamamatsu.shizuoka.jp",
	"higashiizu.shizuoka.jp",
	"ito.shizuoka.jp",
	"iwata.shizuoka.jp",
	"izu.shizuoka.jp",
	"izunokuni.shizuoka.jp",
	"kakegawa.shizuoka.jp",
	"kannami.shizuoka.jp",
	"kawanehon.shizuoka.jp",
	"kawazu.shizuoka.jp",
	"kikugawa.shizuoka.jp",
	"kosai.shizuoka.jp",
	"makinohara.shizuoka.jp",
	"matsuzaki.shizuoka.jp",
	"minamiizu.shizuoka.jp",
	"mishima.shizuoka.jp",
	"morimachi.shizuoka.jp",
	"nishiizu.shizuoka.jp",
	"numazu.shizuoka.jp",
	"omaezaki.shizuoka.jp",
	"shimada.shizuoka.jp",
	"shimizu.shizuoka.jp",
	"shimoda.shizuoka.jp",
	"shizuoka.shizuoka.jp",
	"susono.shizuoka.jp",
	"yaizu.shizuoka.jp",
	"yoshida.shizuoka.jp",
	"ashikaga.tochigi.jp",
	"bato.tochigi.jp",
	"haga.tochigi.jp",
	"ichikai.tochigi.jp",
	"iwafune.tochigi.jp",
	"kaminokawa.tochigi.jp",
	"kanuma.tochigi.jp",
	"karasuyama.tochigi.jp",
	"kuroiso.tochigi.jp",
	"mashiko.tochigi.jp",
	"mibu.tochigi.jp",
	"moka.tochigi.jp",
	"motegi.tochigi.jp",
	"nasu.tochigi.jp",
	"nasushiobara.tochigi.jp",
	"nikko.tochigi.jp",
	"nishikata.tochigi.jp",
	"nogi.tochigi.jp",
	"ohira.tochigi.jp",
	"ohtawara.tochigi.jp",
	"oyama.tochigi.jp",
	"sakura.tochigi.jp",
	"sano.tochigi.jp",
	"shimotsuke.tochigi.jp",
	"shioya.tochigi.jp",
	"takanezawa.tochigi.jp",
	"tochigi.tochigi.jp",
	"tsuga.tochigi.jp",
	"ujiie.tochigi.jp",
	"utsunomiya.tochigi.jp",
	"yaita.tochigi.jp",
	"aizumi.tokushima.jp",
	"anan.tokushima.jp",
	"ichiba.tokushima.jp",
	"itano.tokushima.jp",
	"kainan.tokushima.jp",
	"komatsushima.tokushima.jp",
	"matsushige.tokushima.jp",
	"mima.tokushima.jp",
	"minami.tokushima.jp",
	"miyoshi.tokushima.jp",
	"mugi.tokushima.jp",
	"nakagawa.tokushima.jp",
	"naruto.tokushima.jp",
	"sanagochi.tokushima.jp",
	"shishikui.tokushima.jp",
	"tokushima.tokushima.jp",
	"wajiki.tokushima.jp",
	"adachi.tokyo.jp",
	"akiruno.tokyo.jp",
	"akishima.tokyo.jp",
	"aogashima.tokyo.jp",
	"arakawa.tokyo.jp",
	"bunkyo.tokyo.jp",
	"chiyoda.tokyo.jp",
	"chofu.tokyo.jp",
	"chuo.tokyo.jp",
	"edogawa.tokyo.jp",
	"fuchu.tokyo.jp",
	"fussa.tokyo.jp",
	"hachijo.tokyo.jp",
	"hachioji.tokyo.jp",
	"hamura.tokyo.jp",
	"higashikurume.tokyo.jp",
	"higashimurayama.tokyo.jp",
	"higashiyamato.tokyo.jp",
	"hino.tokyo.jp",
	"hinode.tokyo.jp",
	"hinohara.tokyo.jp",
	"inagi.tokyo.jp",
	"itabashi.tokyo.jp",
	"katsushika.tokyo.jp",
	"kita.tokyo.jp",
	"kiyose.tokyo.jp",
	"kodaira.tokyo.jp",
	"koganei.tokyo.jp",
	"kokubunji.tokyo.jp",
	"komae.tokyo.jp",
	"koto.tokyo.jp",
	"kouzushima.tokyo.jp",
	"kunitachi.tokyo.jp",
	"machida.tokyo.jp",
	"meguro.tokyo.jp",
	"minato.tokyo.jp",
	"mitaka.tokyo.jp",
	"mizuho.tokyo.jp",
	"musashimurayama.tokyo.jp",
	"musashino.tokyo.jp",
	"nakano.tokyo.jp",
	"nerima.tokyo.jp",
	"ogasawara.tokyo.jp",
	"okutama.tokyo.jp",
	"ome.tokyo.jp",
	"oshima.tokyo.jp",
	"ota.tokyo.jp",
	"setagaya.tokyo.jp",
	"shibuya.tokyo.jp",
	"shinagawa.tokyo.jp",
	"shinjuku.tokyo.jp",
	"suginami.tokyo.jp",
	"sumida.tokyo.jp",
	"tachikawa.tokyo.jp",
	"taito.tokyo.jp",
	"tama.tokyo.jp",
	"toshima.tokyo.jp",
	"chizu.tottori.jp",
	"hino.tottori.jp",
	"kawahara.tottori.jp",
	"koge.tottori.jp",
	"kotoura.tottori.jp",
	"misasa.tottori.jp",
	"nanbu.tottori.jp",
	"nichinan.tottori.jp",
	"sakaiminato.tottori.jp",
	"tottori.tottori.jp",
	"wakasa.tottori.jp",
	"yazu.tottori.jp",
	"yonago.tottori.jp",
	"asahi.toyama.jp",
	"fuchu.toyama.jp",
	"fukumitsu.toyama.jp",
	"funahashi.toyama.jp",
	"himi.toyama.jp",
	"imizu.toyama.jp",
	"inami.toyama.jp",
	"johana.toyama.jp",
	"kamiichi.toyama.jp",
	"kurobe.toyama.jp",
	"nakaniikawa.toyama.jp",
	"namerikawa.toyama.jp",
	"nanto.toyama.jp",
	"nyuzen.toyama.jp",
	"oyabe.toyama.jp",
	"taira.toyama.jp",
	"takaoka.toyama.jp",
	"tateyama.toyama.jp",
	"toga.toyama.jp",
	"tonami.toyama.jp",
	"toyama.toyama.jp",
	"unazuki.toyama.jp",
	"uozu.toyama.jp",
	"yamada.toyama.jp",
	"arida.wakayama.jp",
	"aridagawa.wakayama.jp",
	"gobo.wakayama.jp",
	"hashimoto.wakayama.jp",
	"hidaka.wakayama.jp",
	"hirogawa.wakayama.jp",
	"inami.wakayama.jp",
	"iwade.wakayama.jp",
	"kainan.wakayama.jp",
	"kamitonda.wakayama.jp",
	"katsuragi.wakayama.jp",
	"kimino.wakayama.jp",
	"kinokawa.wakayama.jp",
	"kitayama.wakayama.jp",
	"koya.wakayama.jp",
	"koza.wakayama.jp",
	"kozagawa.wakayama.jp",
	"kudoyama.wakayama.jp",
	"kushimoto.wakayama.jp",
	"mihama.wakayama.jp",
	"misato.wakayama.jp",
	"nachikatsuura.wakayama.jp",
	"shingu.wakayama.jp",
	"shirahama.wakayama.jp",
	"taiji.wakayama.jp",
	"tanabe.wakayama.jp",
	"wakayama.wakayama.jp",
	"yuasa.wakayama.jp",
	"yura.wakayama.jp",
	"asahi.yamagata.jp",
	"funagata.yamagata.jp",
	"higashine.yamagata.jp",
	"iide.yamagata.jp",
	"kahoku.yamagata.jp",
	"kaminoyama.yamagata.jp",
	"kaneyama.yamagata.jp",
	"kawanishi.yamagata.jp",
	"mamurogawa.yamagata.jp",
	"mikawa.yamagata.jp",
	"murayama.yamagata.jp",
	"nagai.yamagata.jp",
	"nakayama.yamagata.jp",
	"nanyo.yamagata.jp",
	"nishikawa.yamagata.jp",
	"obanazawa.yamagata.jp",
	"oe.yamagata.jp",
	"oguni.yamagata.jp",
	"ohkura.yamagata.jp",
	"oishida.yamagata.jp",
	"sagae.yamagata.jp",
	"sakata.yamagata.jp",
	"sakegawa.yamagata.jp",
	"shinjo.yamagata.jp",
	"shirataka.yamagata.jp",
	"shonai.yamagata.jp",
	"takahata.yamagata.jp",
	"tendo.yamagata.jp",
	"tozawa.yamagata.jp",
	"tsuruoka.yamagata.jp",
	"yamagata.yamagata.jp",
	"yamanobe.yamagata.jp",
	"yonezawa.yamagata.jp",
	"yuza.yamagata.jp",
	"abu.yamaguchi.jp",
	"hagi.yamaguchi.jp",
	"hikari.yamaguchi.jp",
	"hofu.yamaguchi.jp",
	"iwakuni.yamaguchi.jp",
	"kudamatsu.yamaguchi.jp",
	"mitou.yamaguchi.jp",
	"nagato.yamaguchi.jp",
	"oshima.yamaguchi.jp",
	"shimonoseki.yamaguchi.jp",
	"shunan.yamaguchi.jp",
	"tabuse.yamaguchi.jp",
	"tokuyama.yamaguchi.jp",
	"toyota.yamaguchi.jp",
	"ube.yamaguchi.jp",
	"yuu.yamaguchi.jp",
	"chuo.yamanashi.jp",
	"doshi.yamanashi.jp",
	"fuefuki.yamanashi.jp",
	"fujikawa.yamanashi.jp",
	"fujikawaguchiko.yamanashi.jp",
	"fujiyoshida.yamanashi.jp",
	"hayakawa.yamanashi.jp",
	"hokuto.yamanashi.jp",
	"ichikawamisato.yamanashi.jp",
	"kai.yamanashi.jp",
	"kofu.yamanashi.jp",
	"koshu.yamanashi.jp",
	"kosuge.yamanashi.jp",
	"minami-alps.yamanashi.jp",
	"minobu.yamanashi.jp",
	"nakamichi.yamanashi.jp",
	"nanbu.yamanashi.jp",
	"narusawa.yamanashi.jp",
	"nirasaki.yamanashi.jp",
	"nishikatsura.yamanashi.jp",
	"oshino.yamanashi.jp",
	"otsuki.yamanashi.jp",
	"showa.yamanashi.jp",
	"tabayama.yamanashi.jp",
	"tsuru.yamanashi.jp",
	"uenohara.yamanashi.jp",
	"yamanakako.yamanashi.jp",
	"yamanashi.yamanashi.jp",
	"ke",
	"ac.ke",
	"co.ke",
	"go.ke",
	"info.ke",
	"me.ke",
	"mobi.ke",
	"ne.ke",
	"or.ke",
	"sc.ke",
	"kg",
	"org.kg",
	"net.kg",
	"com.kg",
	"edu.kg",
	"gov.kg",
	"mil.kg",
	"*.kh",
	"ki",
	"edu.ki",
	"biz.ki",
	"net.ki",
	"org.ki",
	"gov.ki",
	"info.ki",
	"com.ki",
	"km",
	"org.km",
	"nom.km",
	"gov.km",
	"prd.km",
	"tm.km",
	"edu.km",
	"mil.km",
	"ass.km",
	"com.km",
	"coop.km",
	"asso.km",
	"presse.km",
	"medecin.km",
	"notaires.km",
	"pharmaciens.km",
	"veterinaire.km",
	"gouv.km",
	"kn",
	"net.kn",
	"org.kn",
	"edu.kn",
	"gov.kn",
	"kp",
	"com.kp",
	"edu.kp",
	"gov.kp",
	"org.kp",
	"rep.kp",
	"tra.kp",
	"kr",
	"ac.kr",
	"co.kr",
	"es.kr",
	"go.kr",
	"hs.kr",
	"kg.kr",
	"mil.kr",
	"ms.kr",
	"ne.kr",
	"or.kr",
	"pe.kr",
	"re.kr",
	"sc.kr",
	"busan.kr",
	"chungbuk.kr",
	"chungnam.kr",
	"daegu.kr",
	"daejeon.kr",
	"gangwon.kr",
	"gwangju.kr",
	"gyeongbuk.kr",
	"gyeonggi.kr",
	"gyeongnam.kr",
	"incheon.kr",
	"jeju.kr",
	"jeonbuk.kr",
	"jeonnam.kr",
	"seoul.kr",
	"ulsan.kr",
	"kw",
	"com.kw",
	"edu.kw",
	"emb.kw",
	"gov.kw",
	"ind.kw",
	"net.kw",
	"org.kw",
	"ky",
	"com.ky",
	"edu.ky",
	"net.ky",
	"org.ky",
	"kz",
	"org.kz",
	"edu.kz",
	"net.kz",
	"gov.kz",
	"mil.kz",
	"com.kz",
	"la",
	"int.la",
	"net.la",
	"info.la",
	"edu.la",
	"gov.la",
	"per.la",
	"com.la",
	"org.la",
	"lb",
	"com.lb",
	"edu.lb",
	"gov.lb",
	"net.lb",
	"org.lb",
	"lc",
	"com.lc",
	"net.lc",
	"co.lc",
	"org.lc",
	"edu.lc",
	"gov.lc",
	"li",
	"lk",
	"gov.lk",
	"sch.lk",
	"net.lk",
	"int.lk",
	"com.lk",
	"org.lk",
	"edu.lk",
	"ngo.lk",
	"soc.lk",
	"web.lk",
	"ltd.lk",
	"assn.lk",
	"grp.lk",
	"hotel.lk",
	"ac.lk",
	"lr",
	"com.lr",
	"edu.lr",
	"gov.lr",
	"org.lr",
	"net.lr",
	"ls",
	"ac.ls",
	"biz.ls",
	"co.ls",
	"edu.ls",
	"gov.ls",
	"info.ls",
	"net.ls",
	"org.ls",
	"sc.ls",
	"lt",
	"gov.lt",
	"lu",
	"lv",
	"com.lv",
	"edu.lv",
	"gov.lv",
	"org.lv",
	"mil.lv",
	"id.lv",
	"net.lv",
	"asn.lv",
	"conf.lv",
	"ly",
	"com.ly",
	"net.ly",
	"gov.ly",
	"plc.ly",
	"edu.ly",
	"sch.ly",
	"med.ly",
	"org.ly",
	"id.ly",
	"ma",
	"co.ma",
	"net.ma",
	"gov.ma",
	"org.ma",
	"ac.ma",
	"press.ma",
	"mc",
	"tm.mc",
	"asso.mc",
	"md",
	"me",
	"co.me",
	"net.me",
	"org.me",
	"edu.me",
	"ac.me",
	"gov.me",
	"its.me",
	"priv.me",
	"mg",
	"org.mg",
	"nom.mg",
	"gov.mg",
	"prd.mg",
	"tm.mg",
	"edu.mg",
	"mil.mg",
	"com.mg",
	"co.mg",
	"mh",
	"mil",
	"mk",
	"com.mk",
	"org.mk",
	"net.mk",
	"edu.mk",
	"gov.mk",
	"inf.mk",
	"name.mk",
	"ml",
	"com.ml",
	"edu.ml",
	"gouv.ml",
	"gov.ml",
	"net.ml",
	"org.ml",
	"presse.ml",
	"*.mm",
	"mn",
	"gov.mn",
	"edu.mn",
	"org.mn",
	"mo",
	"com.mo",
	"net.mo",
	"org.mo",
	"edu.mo",
	"gov.mo",
	"mobi",
	"mp",
	"mq",
	"mr",
	"gov.mr",
	"ms",
	"com.ms",
	"edu.ms",
	"gov.ms",
	"net.ms",
	"org.ms",
	"mt",
	"com.mt",
	"edu.mt",
	"net.mt",
	"org.mt",
	"mu",
	"com.mu",
	"net.mu",
	"org.mu",
	"gov.mu",
	"ac.mu",
	"co.mu",
	"or.mu",
	"museum",
	"academy.museum",
	"agriculture.museum",
	"air.museum",
	"airguard.museum",
	"alabama.museum",
	"alaska.museum",
	"amber.museum",
	"ambulance.museum",
	"american.museum",
	"americana.museum",
	"americanantiques.museum",
	"americanart.museum",
	"amsterdam.museum",
	"and.museum",
	"annefrank.museum",
	"anthro.museum",
	"anthropology.museum",
	"antiques.museum",
	"aquarium.museum",
	"arboretum.museum",
	"archaeological.museum",
	"archaeology.museum",
	"architecture.museum",
	"art.museum",
	"artanddesign.museum",
	"artcenter.museum",
	"artdeco.museum",
	"arteducation.museum",
	"artgallery.museum",
	"arts.museum",
	"artsandcrafts.museum",
	"asmatart.museum",
	"assassination.museum",
	"assisi.museum",
	"association.museum",
	"astronomy.museum",
	"atlanta.museum",
	"austin.museum",
	"australia.museum",
	"automotive.museum",
	"aviation.museum",
	"axis.museum",
	"badajoz.museum",
	"baghdad.museum",
	"bahn.museum",
	"bale.museum",
	"baltimore.museum",
	"barcelona.museum",
	"baseball.museum",
	"basel.museum",
	"baths.museum",
	"bauern.museum",
	"beauxarts.museum",
	"beeldengeluid.museum",
	"bellevue.museum",
	"bergbau.museum",
	"berkeley.museum",
	"berlin.museum",
	"bern.museum",
	"bible.museum",
	"bilbao.museum",
	"bill.museum",
	"birdart.museum",
	"birthplace.museum",
	"bonn.museum",
	"boston.museum",
	"botanical.museum",
	"botanicalgarden.museum",
	"botanicgarden.museum",
	"botany.museum",
	"brandywinevalley.museum",
	"brasil.museum",
	"bristol.museum",
	"british.museum",
	"britishcolumbia.museum",
	"broadcast.museum",
	"brunel.museum",
	"brussel.museum",
	"brussels.museum",
	"bruxelles.museum",
	"building.museum",
	"burghof.museum",
	"bus.museum",
	"bushey.museum",
	"cadaques.museum",
	"california.museum",
	"cambridge.museum",
	"can.museum",
	"canada.museum",
	"capebreton.museum",
	"carrier.museum",
	"cartoonart.museum",
	"casadelamoneda.museum",
	"castle.museum",
	"castres.museum",
	"celtic.museum",
	"center.museum",
	"chattanooga.museum",
	"cheltenham.museum",
	"chesapeakebay.museum",
	"chicago.museum",
	"children.museum",
	"childrens.museum",
	"childrensgarden.museum",
	"chiropractic.museum",
	"chocolate.museum",
	"christiansburg.museum",
	"cincinnati.museum",
	"cinema.museum",
	"circus.museum",
	"civilisation.museum",
	"civilization.museum",
	"civilwar.museum",
	"clinton.museum",
	"clock.museum",
	"coal.museum",
	"coastaldefence.museum",
	"cody.museum",
	"coldwar.museum",
	"collection.museum",
	"colonialwilliamsburg.museum",
	"coloradoplateau.museum",
	"columbia.museum",
	"columbus.museum",
	"communication.museum",
	"communications.museum",
	"community.museum",
	"computer.museum",
	"computerhistory.museum",
	"comunicaÃ§Ãµes.museum",
	"contemporary.museum",
	"contemporaryart.museum",
	"convent.museum",
	"copenhagen.museum",
	"corporation.museum",
	"correios-e-telecomunicaÃ§Ãµes.museum",
	"corvette.museum",
	"costume.museum",
	"countryestate.museum",
	"county.museum",
	"crafts.museum",
	"cranbrook.museum",
	"creation.museum",
	"cultural.museum",
	"culturalcenter.museum",
	"culture.museum",
	"cyber.museum",
	"cymru.museum",
	"dali.museum",
	"dallas.museum",
	"database.museum",
	"ddr.museum",
	"decorativearts.museum",
	"delaware.museum",
	"delmenhorst.museum",
	"denmark.museum",
	"depot.museum",
	"design.museum",
	"detroit.museum",
	"dinosaur.museum",
	"discovery.museum",
	"dolls.museum",
	"donostia.museum",
	"durham.museum",
	"eastafrica.museum",
	"eastcoast.museum",
	"education.museum",
	"educational.museum",
	"egyptian.museum",
	"eisenbahn.museum",
	"elburg.museum",
	"elvendrell.museum",
	"embroidery.museum",
	"encyclopedic.museum",
	"england.museum",
	"entomology.museum",
	"environment.museum",
	"environmentalconservation.museum",
	"epilepsy.museum",
	"essex.museum",
	"estate.museum",
	"ethnology.museum",
	"exeter.museum",
	"exhibition.museum",
	"family.museum",
	"farm.museum",
	"farmequipment.museum",
	"farmers.museum",
	"farmstead.museum",
	"field.museum",
	"figueres.museum",
	"filatelia.museum",
	"film.museum",
	"fineart.museum",
	"finearts.museum",
	"finland.museum",
	"flanders.museum",
	"florida.museum",
	"force.museum",
	"fortmissoula.museum",
	"fortworth.museum",
	"foundation.museum",
	"francaise.museum",
	"frankfurt.museum",
	"franziskaner.museum",
	"freemasonry.museum",
	"freiburg.museum",
	"fribourg.museum",
	"frog.museum",
	"fundacio.museum",
	"furniture.museum",
	"gallery.museum",
	"garden.museum",
	"gateway.museum",
	"geelvinck.museum",
	"gemological.museum",
	"geology.museum",
	"georgia.museum",
	"giessen.museum",
	"glas.museum",
	"glass.museum",
	"gorge.museum",
	"grandrapids.museum",
	"graz.museum",
	"guernsey.museum",
	"halloffame.museum",
	"hamburg.museum",
	"handson.museum",
	"harvestcelebration.museum",
	"hawaii.museum",
	"health.museum",
	"heimatunduhren.museum",
	"hellas.museum",
	"helsinki.museum",
	"hembygdsforbund.museum",
	"heritage.museum",
	"histoire.museum",
	"historical.museum",
	"historicalsociety.museum",
	"historichouses.museum",
	"historisch.museum",
	"historisches.museum",
	"history.museum",
	"historyofscience.museum",
	"horology.museum",
	"house.museum",
	"humanities.museum",
	"illustration.museum",
	"imageandsound.museum",
	"indian.museum",
	"indiana.museum",
	"indianapolis.museum",
	"indianmarket.museum",
	"intelligence.museum",
	"interactive.museum",
	"iraq.museum",
	"iron.museum",
	"isleofman.museum",
	"jamison.museum",
	"jefferson.museum",
	"jerusalem.museum",
	"jewelry.museum",
	"jewish.museum",
	"jewishart.museum",
	"jfk.museum",
	"journalism.museum",
	"judaica.museum",
	"judygarland.museum",
	"juedisches.museum",
	"juif.museum",
	"karate.museum",
	"karikatur.museum",
	"kids.museum",
	"koebenhavn.museum",
	"koeln.museum",
	"kunst.museum",
	"kunstsammlung.museum",
	"kunstunddesign.museum",
	"labor.museum",
	"labour.museum",
	"lajolla.museum",
	"lancashire.museum",
	"landes.museum",
	"lans.museum",
	"lÃ¤ns.museum",
	"larsson.museum",
	"lewismiller.museum",
	"lincoln.museum",
	"linz.museum",
	"living.museum",
	"livinghistory.museum",
	"localhistory.museum",
	"london.museum",
	"losangeles.museum",
	"louvre.museum",
	"loyalist.museum",
	"lucerne.museum",
	"luxembourg.museum",
	"luzern.museum",
	"mad.museum",
	"madrid.museum",
	"mallorca.museum",
	"manchester.museum",
	"mansion.museum",
	"mansions.museum",
	"manx.museum",
	"marburg.museum",
	"maritime.museum",
	"maritimo.museum",
	"maryland.museum",
	"marylhurst.museum",
	"media.museum",
	"medical.museum",
	"medizinhistorisches.museum",
	"meeres.museum",
	"memorial.museum",
	"mesaverde.museum",
	"michigan.museum",
	"midatlantic.museum",
	"military.museum",
	"mill.museum",
	"miners.museum",
	"mining.museum",
	"minnesota.museum",
	"missile.museum",
	"missoula.museum",
	"modern.museum",
	"moma.museum",
	"money.museum",
	"monmouth.museum",
	"monticello.museum",
	"montreal.museum",
	"moscow.museum",
	"motorcycle.museum",
	"muenchen.museum",
	"muenster.museum",
	"mulhouse.museum",
	"muncie.museum",
	"museet.museum",
	"museumcenter.museum",
	"museumvereniging.museum",
	"music.museum",
	"national.museum",
	"nationalfirearms.museum",
	"nationalheritage.museum",
	"nativeamerican.museum",
	"naturalhistory.museum",
	"naturalhistorymuseum.museum",
	"naturalsciences.museum",
	"nature.museum",
	"naturhistorisches.museum",
	"natuurwetenschappen.museum",
	"naumburg.museum",
	"naval.museum",
	"nebraska.museum",
	"neues.museum",
	"newhampshire.museum",
	"newjersey.museum",
	"newmexico.museum",
	"newport.museum",
	"newspaper.museum",
	"newyork.museum",
	"niepce.museum",
	"norfolk.museum",
	"north.museum",
	"nrw.museum",
	"nyc.museum",
	"nyny.museum",
	"oceanographic.museum",
	"oceanographique.museum",
	"omaha.museum",
	"online.museum",
	"ontario.museum",
	"openair.museum",
	"oregon.museum",
	"oregontrail.museum",
	"otago.museum",
	"oxford.museum",
	"pacific.museum",
	"paderborn.museum",
	"palace.museum",
	"paleo.museum",
	"palmsprings.museum",
	"panama.museum",
	"paris.museum",
	"pasadena.museum",
	"pharmacy.museum",
	"philadelphia.museum",
	"philadelphiaarea.museum",
	"philately.museum",
	"phoenix.museum",
	"photography.museum",
	"pilots.museum",
	"pittsburgh.museum",
	"planetarium.museum",
	"plantation.museum",
	"plants.museum",
	"plaza.museum",
	"portal.museum",
	"portland.museum",
	"portlligat.museum",
	"posts-and-telecommunications.museum",
	"preservation.museum",
	"presidio.museum",
	"press.museum",
	"project.museum",
	"public.museum",
	"pubol.museum",
	"quebec.museum",
	"railroad.museum",
	"railway.museum",
	"research.museum",
	"resistance.museum",
	"riodejaneiro.museum",
	"rochester.museum",
	"rockart.museum",
	"roma.museum",
	"russia.museum",
	"saintlouis.museum",
	"salem.museum",
	"salvadordali.museum",
	"salzburg.museum",
	"sandiego.museum",
	"sanfrancisco.museum",
	"santabarbara.museum",
	"santacruz.museum",
	"santafe.museum",
	"saskatchewan.museum",
	"satx.museum",
	"savannahga.museum",
	"schlesisches.museum",
	"schoenbrunn.museum",
	"schokoladen.museum",
	"school.museum",
	"schweiz.museum",
	"science.museum",
	"scienceandhistory.museum",
	"scienceandindustry.museum",
	"sciencecenter.museum",
	"sciencecenters.museum",
	"science-fiction.museum",
	"sciencehistory.museum",
	"sciences.museum",
	"sciencesnaturelles.museum",
	"scotland.museum",
	"seaport.museum",
	"settlement.museum",
	"settlers.museum",
	"shell.museum",
	"sherbrooke.museum",
	"sibenik.museum",
	"silk.museum",
	"ski.museum",
	"skole.museum",
	"society.museum",
	"sologne.museum",
	"soundandvision.museum",
	"southcarolina.museum",
	"southwest.museum",
	"space.museum",
	"spy.museum",
	"square.museum",
	"stadt.museum",
	"stalbans.museum",
	"starnberg.museum",
	"state.museum",
	"stateofdelaware.museum",
	"station.museum",
	"steam.museum",
	"steiermark.museum",
	"stjohn.museum",
	"stockholm.museum",
	"stpetersburg.museum",
	"stuttgart.museum",
	"suisse.museum",
	"surgeonshall.museum",
	"surrey.museum",
	"svizzera.museum",
	"sweden.museum",
	"sydney.museum",
	"tank.museum",
	"tcm.museum",
	"technology.museum",
	"telekommunikation.museum",
	"television.museum",
	"texas.museum",
	"textile.museum",
	"theater.museum",
	"time.museum",
	"timekeeping.museum",
	"topology.museum",
	"torino.museum",
	"touch.museum",
	"town.museum",
	"transport.museum",
	"tree.museum",
	"trolley.museum",
	"trust.museum",
	"trustee.museum",
	"uhren.museum",
	"ulm.museum",
	"undersea.museum",
	"university.museum",
	"usa.museum",
	"usantiques.museum",
	"usarts.museum",
	"uscountryestate.museum",
	"usculture.museum",
	"usdecorativearts.museum",
	"usgarden.museum",
	"ushistory.museum",
	"ushuaia.museum",
	"uslivinghistory.museum",
	"utah.museum",
	"uvic.museum",
	"valley.museum",
	"vantaa.museum",
	"versailles.museum",
	"viking.museum",
	"village.museum",
	"virginia.museum",
	"virtual.museum",
	"virtuel.museum",
	"vlaanderen.museum",
	"volkenkunde.museum",
	"wales.museum",
	"wallonie.museum",
	"war.museum",
	"washingtondc.museum",
	"watchandclock.museum",
	"watch-and-clock.museum",
	"western.museum",
	"westfalen.museum",
	"whaling.museum",
	"wildlife.museum",
	"williamsburg.museum",
	"windmill.museum",
	"workshop.museum",
	"york.museum",
	"yorkshire.museum",
	"yosemite.museum",
	"youth.museum",
	"zoological.museum",
	"zoology.museum",
	"××¨××©×××.museum",
	"Ð¸ÐºÐ¾Ð¼.museum",
	"mv",
	"aero.mv",
	"biz.mv",
	"com.mv",
	"coop.mv",
	"edu.mv",
	"gov.mv",
	"info.mv",
	"int.mv",
	"mil.mv",
	"museum.mv",
	"name.mv",
	"net.mv",
	"org.mv",
	"pro.mv",
	"mw",
	"ac.mw",
	"biz.mw",
	"co.mw",
	"com.mw",
	"coop.mw",
	"edu.mw",
	"gov.mw",
	"int.mw",
	"museum.mw",
	"net.mw",
	"org.mw",
	"mx",
	"com.mx",
	"org.mx",
	"gob.mx",
	"edu.mx",
	"net.mx",
	"my",
	"biz.my",
	"com.my",
	"edu.my",
	"gov.my",
	"mil.my",
	"name.my",
	"net.my",
	"org.my",
	"mz",
	"ac.mz",
	"adv.mz",
	"co.mz",
	"edu.mz",
	"gov.mz",
	"mil.mz",
	"net.mz",
	"org.mz",
	"na",
	"info.na",
	"pro.na",
	"name.na",
	"school.na",
	"or.na",
	"dr.na",
	"us.na",
	"mx.na",
	"ca.na",
	"in.na",
	"cc.na",
	"tv.na",
	"ws.na",
	"mobi.na",
	"co.na",
	"com.na",
	"org.na",
	"name",
	"nc",
	"asso.nc",
	"nom.nc",
	"ne",
	"net",
	"nf",
	"com.nf",
	"net.nf",
	"per.nf",
	"rec.nf",
	"web.nf",
	"arts.nf",
	"firm.nf",
	"info.nf",
	"other.nf",
	"store.nf",
	"ng",
	"com.ng",
	"edu.ng",
	"gov.ng",
	"i.ng",
	"mil.ng",
	"mobi.ng",
	"name.ng",
	"net.ng",
	"org.ng",
	"sch.ng",
	"ni",
	"ac.ni",
	"biz.ni",
	"co.ni",
	"com.ni",
	"edu.ni",
	"gob.ni",
	"in.ni",
	"info.ni",
	"int.ni",
	"mil.ni",
	"net.ni",
	"nom.ni",
	"org.ni",
	"web.ni",
	"nl",
	"no",
	"fhs.no",
	"vgs.no",
	"fylkesbibl.no",
	"folkebibl.no",
	"museum.no",
	"idrett.no",
	"priv.no",
	"mil.no",
	"stat.no",
	"dep.no",
	"kommune.no",
	"herad.no",
	"aa.no",
	"ah.no",
	"bu.no",
	"fm.no",
	"hl.no",
	"hm.no",
	"jan-mayen.no",
	"mr.no",
	"nl.no",
	"nt.no",
	"of.no",
	"ol.no",
	"oslo.no",
	"rl.no",
	"sf.no",
	"st.no",
	"svalbard.no",
	"tm.no",
	"tr.no",
	"va.no",
	"vf.no",
	"gs.aa.no",
	"gs.ah.no",
	"gs.bu.no",
	"gs.fm.no",
	"gs.hl.no",
	"gs.hm.no",
	"gs.jan-mayen.no",
	"gs.mr.no",
	"gs.nl.no",
	"gs.nt.no",
	"gs.of.no",
	"gs.ol.no",
	"gs.oslo.no",
	"gs.rl.no",
	"gs.sf.no",
	"gs.st.no",
	"gs.svalbard.no",
	"gs.tm.no",
	"gs.tr.no",
	"gs.va.no",
	"gs.vf.no",
	"akrehamn.no",
	"Ã¥krehamn.no",
	"algard.no",
	"Ã¥lgÃ¥rd.no",
	"arna.no",
	"brumunddal.no",
	"bryne.no",
	"bronnoysund.no",
	"brÃ¸nnÃ¸ysund.no",
	"drobak.no",
	"drÃ¸bak.no",
	"egersund.no",
	"fetsund.no",
	"floro.no",
	"florÃ¸.no",
	"fredrikstad.no",
	"hokksund.no",
	"honefoss.no",
	"hÃ¸nefoss.no",
	"jessheim.no",
	"jorpeland.no",
	"jÃ¸rpeland.no",
	"kirkenes.no",
	"kopervik.no",
	"krokstadelva.no",
	"langevag.no",
	"langevÃ¥g.no",
	"leirvik.no",
	"mjondalen.no",
	"mjÃ¸ndalen.no",
	"mo-i-rana.no",
	"mosjoen.no",
	"mosjÃ¸en.no",
	"nesoddtangen.no",
	"orkanger.no",
	"osoyro.no",
	"osÃ¸yro.no",
	"raholt.no",
	"rÃ¥holt.no",
	"sandnessjoen.no",
	"sandnessjÃ¸en.no",
	"skedsmokorset.no",
	"slattum.no",
	"spjelkavik.no",
	"stathelle.no",
	"stavern.no",
	"stjordalshalsen.no",
	"stjÃ¸rdalshalsen.no",
	"tananger.no",
	"tranby.no",
	"vossevangen.no",
	"afjord.no",
	"Ã¥fjord.no",
	"agdenes.no",
	"al.no",
	"Ã¥l.no",
	"alesund.no",
	"Ã¥lesund.no",
	"alstahaug.no",
	"alta.no",
	"Ã¡ltÃ¡.no",
	"alaheadju.no",
	"Ã¡laheadju.no",
	"alvdal.no",
	"amli.no",
	"Ã¥mli.no",
	"amot.no",
	"Ã¥mot.no",
	"andebu.no",
	"andoy.no",
	"andÃ¸y.no",
	"andasuolo.no",
	"ardal.no",
	"Ã¥rdal.no",
	"aremark.no",
	"arendal.no",
	"Ã¥s.no",
	"aseral.no",
	"Ã¥seral.no",
	"asker.no",
	"askim.no",
	"askvoll.no",
	"askoy.no",
	"askÃ¸y.no",
	"asnes.no",
	"Ã¥snes.no",
	"audnedaln.no",
	"aukra.no",
	"aure.no",
	"aurland.no",
	"aurskog-holand.no",
	"aurskog-hÃ¸land.no",
	"austevoll.no",
	"austrheim.no",
	"averoy.no",
	"averÃ¸y.no",
	"balestrand.no",
	"ballangen.no",
	"balat.no",
	"bÃ¡lÃ¡t.no",
	"balsfjord.no",
	"bahccavuotna.no",
	"bÃ¡hccavuotna.no",
	"bamble.no",
	"bardu.no",
	"beardu.no",
	"beiarn.no",
	"bajddar.no",
	"bÃ¡jddar.no",
	"baidar.no",
	"bÃ¡idÃ¡r.no",
	"berg.no",
	"bergen.no",
	"berlevag.no",
	"berlevÃ¥g.no",
	"bearalvahki.no",
	"bearalvÃ¡hki.no",
	"bindal.no",
	"birkenes.no",
	"bjarkoy.no",
	"bjarkÃ¸y.no",
	"bjerkreim.no",
	"bjugn.no",
	"bodo.no",
	"bodÃ¸.no",
	"badaddja.no",
	"bÃ¥dÃ¥ddjÃ¥.no",
	"budejju.no",
	"bokn.no",
	"bremanger.no",
	"bronnoy.no",
	"brÃ¸nnÃ¸y.no",
	"bygland.no",
	"bykle.no",
	"barum.no",
	"bÃ¦rum.no",
	"bo.telemark.no",
	"bÃ¸.telemark.no",
	"bo.nordland.no",
	"bÃ¸.nordland.no",
	"bievat.no",
	"bievÃ¡t.no",
	"bomlo.no",
	"bÃ¸mlo.no",
	"batsfjord.no",
	"bÃ¥tsfjord.no",
	"bahcavuotna.no",
	"bÃ¡hcavuotna.no",
	"dovre.no",
	"drammen.no",
	"drangedal.no",
	"dyroy.no",
	"dyrÃ¸y.no",
	"donna.no",
	"dÃ¸nna.no",
	"eid.no",
	"eidfjord.no",
	"eidsberg.no",
	"eidskog.no",
	"eidsvoll.no",
	"eigersund.no",
	"elverum.no",
	"enebakk.no",
	"engerdal.no",
	"etne.no",
	"etnedal.no",
	"evenes.no",
	"evenassi.no",
	"evenÃ¡Å¡Å¡i.no",
	"evje-og-hornnes.no",
	"farsund.no",
	"fauske.no",
	"fuossko.no",
	"fuoisku.no",
	"fedje.no",
	"fet.no",
	"finnoy.no",
	"finnÃ¸y.no",
	"fitjar.no",
	"fjaler.no",
	"fjell.no",
	"flakstad.no",
	"flatanger.no",
	"flekkefjord.no",
	"flesberg.no",
	"flora.no",
	"fla.no",
	"flÃ¥.no",
	"folldal.no",
	"forsand.no",
	"fosnes.no",
	"frei.no",
	"frogn.no",
	"froland.no",
	"frosta.no",
	"frana.no",
	"frÃ¦na.no",
	"froya.no",
	"frÃ¸ya.no",
	"fusa.no",
	"fyresdal.no",
	"forde.no",
	"fÃ¸rde.no",
	"gamvik.no",
	"gangaviika.no",
	"gÃ¡Ågaviika.no",
	"gaular.no",
	"gausdal.no",
	"gildeskal.no",
	"gildeskÃ¥l.no",
	"giske.no",
	"gjemnes.no",
	"gjerdrum.no",
	"gjerstad.no",
	"gjesdal.no",
	"gjovik.no",
	"gjÃ¸vik.no",
	"gloppen.no",
	"gol.no",
	"gran.no",
	"grane.no",
	"granvin.no",
	"gratangen.no",
	"grimstad.no",
	"grong.no",
	"kraanghke.no",
	"krÃ¥anghke.no",
	"grue.no",
	"gulen.no",
	"hadsel.no",
	"halden.no",
	"halsa.no",
	"hamar.no",
	"hamaroy.no",
	"habmer.no",
	"hÃ¡bmer.no",
	"hapmir.no",
	"hÃ¡pmir.no",
	"hammerfest.no",
	"hammarfeasta.no",
	"hÃ¡mmÃ¡rfeasta.no",
	"haram.no",
	"hareid.no",
	"harstad.no",
	"hasvik.no",
	"aknoluokta.no",
	"Ã¡kÅoluokta.no",
	"hattfjelldal.no",
	"aarborte.no",
	"haugesund.no",
	"hemne.no",
	"hemnes.no",
	"hemsedal.no",
	"heroy.more-og-romsdal.no",
	"herÃ¸y.mÃ¸re-og-romsdal.no",
	"heroy.nordland.no",
	"herÃ¸y.nordland.no",
	"hitra.no",
	"hjartdal.no",
	"hjelmeland.no",
	"hobol.no",
	"hobÃ¸l.no",
	"hof.no",
	"hol.no",
	"hole.no",
	"holmestrand.no",
	"holtalen.no",
	"holtÃ¥len.no",
	"hornindal.no",
	"horten.no",
	"hurdal.no",
	"hurum.no",
	"hvaler.no",
	"hyllestad.no",
	"hagebostad.no",
	"hÃ¦gebostad.no",
	"hoyanger.no",
	"hÃ¸yanger.no",
	"hoylandet.no",
	"hÃ¸ylandet.no",
	"ha.no",
	"hÃ¥.no",
	"ibestad.no",
	"inderoy.no",
	"inderÃ¸y.no",
	"iveland.no",
	"jevnaker.no",
	"jondal.no",
	"jolster.no",
	"jÃ¸lster.no",
	"karasjok.no",
	"karasjohka.no",
	"kÃ¡rÃ¡Å¡johka.no",
	"karlsoy.no",
	"galsa.no",
	"gÃ¡lsÃ¡.no",
	"karmoy.no",
	"karmÃ¸y.no",
	"kautokeino.no",
	"guovdageaidnu.no",
	"klepp.no",
	"klabu.no",
	"klÃ¦bu.no",
	"kongsberg.no",
	"kongsvinger.no",
	"kragero.no",
	"kragerÃ¸.no",
	"kristiansand.no",
	"kristiansund.no",
	"krodsherad.no",
	"krÃ¸dsherad.no",
	"kvalsund.no",
	"rahkkeravju.no",
	"rÃ¡hkkerÃ¡vju.no",
	"kvam.no",
	"kvinesdal.no",
	"kvinnherad.no",
	"kviteseid.no",
	"kvitsoy.no",
	"kvitsÃ¸y.no",
	"kvafjord.no",
	"kvÃ¦fjord.no",
	"giehtavuoatna.no",
	"kvanangen.no",
	"kvÃ¦nangen.no",
	"navuotna.no",
	"nÃ¡vuotna.no",
	"kafjord.no",
	"kÃ¥fjord.no",
	"gaivuotna.no",
	"gÃ¡ivuotna.no",
	"larvik.no",
	"lavangen.no",
	"lavagis.no",
	"loabat.no",
	"loabÃ¡t.no",
	"lebesby.no",
	"davvesiida.no",
	"leikanger.no",
	"leirfjord.no",
	"leka.no",
	"leksvik.no",
	"lenvik.no",
	"leangaviika.no",
	"leaÅgaviika.no",
	"lesja.no",
	"levanger.no",
	"lier.no",
	"lierne.no",
	"lillehammer.no",
	"lillesand.no",
	"lindesnes.no",
	"lindas.no",
	"lindÃ¥s.no",
	"lom.no",
	"loppa.no",
	"lahppi.no",
	"lÃ¡hppi.no",
	"lund.no",
	"lunner.no",
	"luroy.no",
	"lurÃ¸y.no",
	"luster.no",
	"lyngdal.no",
	"lyngen.no",
	"ivgu.no",
	"lardal.no",
	"lerdal.no",
	"lÃ¦rdal.no",
	"lodingen.no",
	"lÃ¸dingen.no",
	"lorenskog.no",
	"lÃ¸renskog.no",
	"loten.no",
	"lÃ¸ten.no",
	"malvik.no",
	"masoy.no",
	"mÃ¥sÃ¸y.no",
	"muosat.no",
	"muosÃ¡t.no",
	"mandal.no",
	"marker.no",
	"marnardal.no",
	"masfjorden.no",
	"meland.no",
	"meldal.no",
	"melhus.no",
	"meloy.no",
	"melÃ¸y.no",
	"meraker.no",
	"merÃ¥ker.no",
	"moareke.no",
	"moÃ¥reke.no",
	"midsund.no",
	"midtre-gauldal.no",
	"modalen.no",
	"modum.no",
	"molde.no",
	"moskenes.no",
	"moss.no",
	"mosvik.no",
	"malselv.no",
	"mÃ¥lselv.no",
	"malatvuopmi.no",
	"mÃ¡latvuopmi.no",
	"namdalseid.no",
	"aejrie.no",
	"namsos.no",
	"namsskogan.no",
	"naamesjevuemie.no",
	"nÃ¥Ã¥mesjevuemie.no",
	"laakesvuemie.no",
	"nannestad.no",
	"narvik.no",
	"narviika.no",
	"naustdal.no",
	"nedre-eiker.no",
	"nes.akershus.no",
	"nes.buskerud.no",
	"nesna.no",
	"nesodden.no",
	"nesseby.no",
	"unjarga.no",
	"unjÃ¡rga.no",
	"nesset.no",
	"nissedal.no",
	"nittedal.no",
	"nord-aurdal.no",
	"nord-fron.no",
	"nord-odal.no",
	"norddal.no",
	"nordkapp.no",
	"davvenjarga.no",
	"davvenjÃ¡rga.no",
	"nordre-land.no",
	"nordreisa.no",
	"raisa.no",
	"rÃ¡isa.no",
	"nore-og-uvdal.no",
	"notodden.no",
	"naroy.no",
	"nÃ¦rÃ¸y.no",
	"notteroy.no",
	"nÃ¸tterÃ¸y.no",
	"odda.no",
	"oksnes.no",
	"Ã¸ksnes.no",
	"oppdal.no",
	"oppegard.no",
	"oppegÃ¥rd.no",
	"orkdal.no",
	"orland.no",
	"Ã¸rland.no",
	"orskog.no",
	"Ã¸rskog.no",
	"orsta.no",
	"Ã¸rsta.no",
	"os.hedmark.no",
	"os.hordaland.no",
	"osen.no",
	"osteroy.no",
	"osterÃ¸y.no",
	"ostre-toten.no",
	"Ã¸stre-toten.no",
	"overhalla.no",
	"ovre-eiker.no",
	"Ã¸vre-eiker.no",
	"oyer.no",
	"Ã¸yer.no",
	"oygarden.no",
	"Ã¸ygarden.no",
	"oystre-slidre.no",
	"Ã¸ystre-slidre.no",
	"porsanger.no",
	"porsangu.no",
	"porsÃ¡Ågu.no",
	"porsgrunn.no",
	"radoy.no",
	"radÃ¸y.no",
	"rakkestad.no",
	"rana.no",
	"ruovat.no",
	"randaberg.no",
	"rauma.no",
	"rendalen.no",
	"rennebu.no",
	"rennesoy.no",
	"rennesÃ¸y.no",
	"rindal.no",
	"ringebu.no",
	"ringerike.no",
	"ringsaker.no",
	"rissa.no",
	"risor.no",
	"risÃ¸r.no",
	"roan.no",
	"rollag.no",
	"rygge.no",
	"ralingen.no",
	"rÃ¦lingen.no",
	"rodoy.no",
	"rÃ¸dÃ¸y.no",
	"romskog.no",
	"rÃ¸mskog.no",
	"roros.no",
	"rÃ¸ros.no",
	"rost.no",
	"rÃ¸st.no",
	"royken.no",
	"rÃ¸yken.no",
	"royrvik.no",
	"rÃ¸yrvik.no",
	"rade.no",
	"rÃ¥de.no",
	"salangen.no",
	"siellak.no",
	"saltdal.no",
	"salat.no",
	"sÃ¡lÃ¡t.no",
	"sÃ¡lat.no",
	"samnanger.no",
	"sande.more-og-romsdal.no",
	"sande.mÃ¸re-og-romsdal.no",
	"sande.vestfold.no",
	"sandefjord.no",
	"sandnes.no",
	"sandoy.no",
	"sandÃ¸y.no",
	"sarpsborg.no",
	"sauda.no",
	"sauherad.no",
	"sel.no",
	"selbu.no",
	"selje.no",
	"seljord.no",
	"sigdal.no",
	"siljan.no",
	"sirdal.no",
	"skaun.no",
	"skedsmo.no",
	"ski.no",
	"skien.no",
	"skiptvet.no",
	"skjervoy.no",
	"skjervÃ¸y.no",
	"skierva.no",
	"skiervÃ¡.no",
	"skjak.no",
	"skjÃ¥k.no",
	"skodje.no",
	"skanland.no",
	"skÃ¥nland.no",
	"skanit.no",
	"skÃ¡nit.no",
	"smola.no",
	"smÃ¸la.no",
	"snillfjord.no",
	"snasa.no",
	"snÃ¥sa.no",
	"snoasa.no",
	"snaase.no",
	"snÃ¥ase.no",
	"sogndal.no",
	"sokndal.no",
	"sola.no",
	"solund.no",
	"songdalen.no",
	"sortland.no",
	"spydeberg.no",
	"stange.no",
	"stavanger.no",
	"steigen.no",
	"steinkjer.no",
	"stjordal.no",
	"stjÃ¸rdal.no",
	"stokke.no",
	"stor-elvdal.no",
	"stord.no",
	"stordal.no",
	"storfjord.no",
	"omasvuotna.no",
	"strand.no",
	"stranda.no",
	"stryn.no",
	"sula.no",
	"suldal.no",
	"sund.no",
	"sunndal.no",
	"surnadal.no",
	"sveio.no",
	"svelvik.no",
	"sykkylven.no",
	"sogne.no",
	"sÃ¸gne.no",
	"somna.no",
	"sÃ¸mna.no",
	"sondre-land.no",
	"sÃ¸ndre-land.no",
	"sor-aurdal.no",
	"sÃ¸r-aurdal.no",
	"sor-fron.no",
	"sÃ¸r-fron.no",
	"sor-odal.no",
	"sÃ¸r-odal.no",
	"sor-varanger.no",
	"sÃ¸r-varanger.no",
	"matta-varjjat.no",
	"mÃ¡tta-vÃ¡rjjat.no",
	"sorfold.no",
	"sÃ¸rfold.no",
	"sorreisa.no",
	"sÃ¸rreisa.no",
	"sorum.no",
	"sÃ¸rum.no",
	"tana.no",
	"deatnu.no",
	"time.no",
	"tingvoll.no",
	"tinn.no",
	"tjeldsund.no",
	"dielddanuorri.no",
	"tjome.no",
	"tjÃ¸me.no",
	"tokke.no",
	"tolga.no",
	"torsken.no",
	"tranoy.no",
	"tranÃ¸y.no",
	"tromso.no",
	"tromsÃ¸.no",
	"tromsa.no",
	"romsa.no",
	"trondheim.no",
	"troandin.no",
	"trysil.no",
	"trana.no",
	"trÃ¦na.no",
	"trogstad.no",
	"trÃ¸gstad.no",
	"tvedestrand.no",
	"tydal.no",
	"tynset.no",
	"tysfjord.no",
	"divtasvuodna.no",
	"divttasvuotna.no",
	"tysnes.no",
	"tysvar.no",
	"tysvÃ¦r.no",
	"tonsberg.no",
	"tÃ¸nsberg.no",
	"ullensaker.no",
	"ullensvang.no",
	"ulvik.no",
	"utsira.no",
	"vadso.no",
	"vadsÃ¸.no",
	"cahcesuolo.no",
	"ÄÃ¡hcesuolo.no",
	"vaksdal.no",
	"valle.no",
	"vang.no",
	"vanylven.no",
	"vardo.no",
	"vardÃ¸.no",
	"varggat.no",
	"vÃ¡rggÃ¡t.no",
	"vefsn.no",
	"vaapste.no",
	"vega.no",
	"vegarshei.no",
	"vegÃ¥rshei.no",
	"vennesla.no",
	"verdal.no",
	"verran.no",
	"vestby.no",
	"vestnes.no",
	"vestre-slidre.no",
	"vestre-toten.no",
	"vestvagoy.no",
	"vestvÃ¥gÃ¸y.no",
	"vevelstad.no",
	"vik.no",
	"vikna.no",
	"vindafjord.no",
	"volda.no",
	"voss.no",
	"varoy.no",
	"vÃ¦rÃ¸y.no",
	"vagan.no",
	"vÃ¥gan.no",
	"voagat.no",
	"vagsoy.no",
	"vÃ¥gsÃ¸y.no",
	"vaga.no",
	"vÃ¥gÃ¥.no",
	"valer.ostfold.no",
	"vÃ¥ler.Ã¸stfold.no",
	"valer.hedmark.no",
	"vÃ¥ler.hedmark.no",
	"*.np",
	"nr",
	"biz.nr",
	"info.nr",
	"gov.nr",
	"edu.nr",
	"org.nr",
	"net.nr",
	"com.nr",
	"nu",
	"nz",
	"ac.nz",
	"co.nz",
	"cri.nz",
	"geek.nz",
	"gen.nz",
	"govt.nz",
	"health.nz",
	"iwi.nz",
	"kiwi.nz",
	"maori.nz",
	"mil.nz",
	"mÄori.nz",
	"net.nz",
	"org.nz",
	"parliament.nz",
	"school.nz",
	"om",
	"co.om",
	"com.om",
	"edu.om",
	"gov.om",
	"med.om",
	"museum.om",
	"net.om",
	"org.om",
	"pro.om",
	"onion",
	"org",
	"pa",
	"ac.pa",
	"gob.pa",
	"com.pa",
	"org.pa",
	"sld.pa",
	"edu.pa",
	"net.pa",
	"ing.pa",
	"abo.pa",
	"med.pa",
	"nom.pa",
	"pe",
	"edu.pe",
	"gob.pe",
	"nom.pe",
	"mil.pe",
	"org.pe",
	"com.pe",
	"net.pe",
	"pf",
	"com.pf",
	"org.pf",
	"edu.pf",
	"*.pg",
	"ph",
	"com.ph",
	"net.ph",
	"org.ph",
	"gov.ph",
	"edu.ph",
	"ngo.ph",
	"mil.ph",
	"i.ph",
	"pk",
	"com.pk",
	"net.pk",
	"edu.pk",
	"org.pk",
	"fam.pk",
	"biz.pk",
	"web.pk",
	"gov.pk",
	"gob.pk",
	"gok.pk",
	"gon.pk",
	"gop.pk",
	"gos.pk",
	"info.pk",
	"pl",
	"com.pl",
	"net.pl",
	"org.pl",
	"aid.pl",
	"agro.pl",
	"atm.pl",
	"auto.pl",
	"biz.pl",
	"edu.pl",
	"gmina.pl",
	"gsm.pl",
	"info.pl",
	"mail.pl",
	"miasta.pl",
	"media.pl",
	"mil.pl",
	"nieruchomosci.pl",
	"nom.pl",
	"pc.pl",
	"powiat.pl",
	"priv.pl",
	"realestate.pl",
	"rel.pl",
	"sex.pl",
	"shop.pl",
	"sklep.pl",
	"sos.pl",
	"szkola.pl",
	"targi.pl",
	"tm.pl",
	"tourism.pl",
	"travel.pl",
	"turystyka.pl",
	"gov.pl",
	"ap.gov.pl",
	"ic.gov.pl",
	"is.gov.pl",
	"us.gov.pl",
	"kmpsp.gov.pl",
	"kppsp.gov.pl",
	"kwpsp.gov.pl",
	"psp.gov.pl",
	"wskr.gov.pl",
	"kwp.gov.pl",
	"mw.gov.pl",
	"ug.gov.pl",
	"um.gov.pl",
	"umig.gov.pl",
	"ugim.gov.pl",
	"upow.gov.pl",
	"uw.gov.pl",
	"starostwo.gov.pl",
	"pa.gov.pl",
	"po.gov.pl",
	"psse.gov.pl",
	"pup.gov.pl",
	"rzgw.gov.pl",
	"sa.gov.pl",
	"so.gov.pl",
	"sr.gov.pl",
	"wsa.gov.pl",
	"sko.gov.pl",
	"uzs.gov.pl",
	"wiih.gov.pl",
	"winb.gov.pl",
	"pinb.gov.pl",
	"wios.gov.pl",
	"witd.gov.pl",
	"wzmiuw.gov.pl",
	"piw.gov.pl",
	"wiw.gov.pl",
	"griw.gov.pl",
	"wif.gov.pl",
	"oum.gov.pl",
	"sdn.gov.pl",
	"zp.gov.pl",
	"uppo.gov.pl",
	"mup.gov.pl",
	"wuoz.gov.pl",
	"konsulat.gov.pl",
	"oirm.gov.pl",
	"augustow.pl",
	"babia-gora.pl",
	"bedzin.pl",
	"beskidy.pl",
	"bialowieza.pl",
	"bialystok.pl",
	"bielawa.pl",
	"bieszczady.pl",
	"boleslawiec.pl",
	"bydgoszcz.pl",
	"bytom.pl",
	"cieszyn.pl",
	"czeladz.pl",
	"czest.pl",
	"dlugoleka.pl",
	"elblag.pl",
	"elk.pl",
	"glogow.pl",
	"gniezno.pl",
	"gorlice.pl",
	"grajewo.pl",
	"ilawa.pl",
	"jaworzno.pl",
	"jelenia-gora.pl",
	"jgora.pl",
	"kalisz.pl",
	"kazimierz-dolny.pl",
	"karpacz.pl",
	"kartuzy.pl",
	"kaszuby.pl",
	"katowice.pl",
	"kepno.pl",
	"ketrzyn.pl",
	"klodzko.pl",
	"kobierzyce.pl",
	"kolobrzeg.pl",
	"konin.pl",
	"konskowola.pl",
	"kutno.pl",
	"lapy.pl",
	"lebork.pl",
	"legnica.pl",
	"lezajsk.pl",
	"limanowa.pl",
	"lomza.pl",
	"lowicz.pl",
	"lubin.pl",
	"lukow.pl",
	"malbork.pl",
	"malopolska.pl",
	"mazowsze.pl",
	"mazury.pl",
	"mielec.pl",
	"mielno.pl",
	"mragowo.pl",
	"naklo.pl",
	"nowaruda.pl",
	"nysa.pl",
	"olawa.pl",
	"olecko.pl",
	"olkusz.pl",
	"olsztyn.pl",
	"opoczno.pl",
	"opole.pl",
	"ostroda.pl",
	"ostroleka.pl",
	"ostrowiec.pl",
	"ostrowwlkp.pl",
	"pila.pl",
	"pisz.pl",
	"podhale.pl",
	"podlasie.pl",
	"polkowice.pl",
	"pomorze.pl",
	"pomorskie.pl",
	"prochowice.pl",
	"pruszkow.pl",
	"przeworsk.pl",
	"pulawy.pl",
	"radom.pl",
	"rawa-maz.pl",
	"rybnik.pl",
	"rzeszow.pl",
	"sanok.pl",
	"sejny.pl",
	"slask.pl",
	"slupsk.pl",
	"sosnowiec.pl",
	"stalowa-wola.pl",
	"skoczow.pl",
	"starachowice.pl",
	"stargard.pl",
	"suwalki.pl",
	"swidnica.pl",
	"swiebodzin.pl",
	"swinoujscie.pl",
	"szczecin.pl",
	"szczytno.pl",
	"tarnobrzeg.pl",
	"tgory.pl",
	"turek.pl",
	"tychy.pl",
	"ustka.pl",
	"walbrzych.pl",
	"warmia.pl",
	"warszawa.pl",
	"waw.pl",
	"wegrow.pl",
	"wielun.pl",
	"wlocl.pl",
	"wloclawek.pl",
	"wodzislaw.pl",
	"wolomin.pl",
	"wroclaw.pl",
	"zachpomor.pl",
	"zagan.pl",
	"zarow.pl",
	"zgora.pl",
	"zgorzelec.pl",
	"pm",
	"pn",
	"gov.pn",
	"co.pn",
	"org.pn",
	"edu.pn",
	"net.pn",
	"post",
	"pr",
	"com.pr",
	"net.pr",
	"org.pr",
	"gov.pr",
	"edu.pr",
	"isla.pr",
	"pro.pr",
	"biz.pr",
	"info.pr",
	"name.pr",
	"est.pr",
	"prof.pr",
	"ac.pr",
	"pro",
	"aaa.pro",
	"aca.pro",
	"acct.pro",
	"avocat.pro",
	"bar.pro",
	"cpa.pro",
	"eng.pro",
	"jur.pro",
	"law.pro",
	"med.pro",
	"recht.pro",
	"ps",
	"edu.ps",
	"gov.ps",
	"sec.ps",
	"plo.ps",
	"com.ps",
	"org.ps",
	"net.ps",
	"pt",
	"net.pt",
	"gov.pt",
	"org.pt",
	"edu.pt",
	"int.pt",
	"publ.pt",
	"com.pt",
	"nome.pt",
	"pw",
	"co.pw",
	"ne.pw",
	"or.pw",
	"ed.pw",
	"go.pw",
	"belau.pw",
	"py",
	"com.py",
	"coop.py",
	"edu.py",
	"gov.py",
	"mil.py",
	"net.py",
	"org.py",
	"qa",
	"com.qa",
	"edu.qa",
	"gov.qa",
	"mil.qa",
	"name.qa",
	"net.qa",
	"org.qa",
	"sch.qa",
	"re",
	"asso.re",
	"com.re",
	"nom.re",
	"ro",
	"arts.ro",
	"com.ro",
	"firm.ro",
	"info.ro",
	"nom.ro",
	"nt.ro",
	"org.ro",
	"rec.ro",
	"store.ro",
	"tm.ro",
	"www.ro",
	"rs",
	"ac.rs",
	"co.rs",
	"edu.rs",
	"gov.rs",
	"in.rs",
	"org.rs",
	"ru",
	"rw",
	"ac.rw",
	"co.rw",
	"coop.rw",
	"gov.rw",
	"mil.rw",
	"net.rw",
	"org.rw",
	"sa",
	"com.sa",
	"net.sa",
	"org.sa",
	"gov.sa",
	"med.sa",
	"pub.sa",
	"edu.sa",
	"sch.sa",
	"sb",
	"com.sb",
	"edu.sb",
	"gov.sb",
	"net.sb",
	"org.sb",
	"sc",
	"com.sc",
	"gov.sc",
	"net.sc",
	"org.sc",
	"edu.sc",
	"sd",
	"com.sd",
	"net.sd",
	"org.sd",
	"edu.sd",
	"med.sd",
	"tv.sd",
	"gov.sd",
	"info.sd",
	"se",
	"a.se",
	"ac.se",
	"b.se",
	"bd.se",
	"brand.se",
	"c.se",
	"d.se",
	"e.se",
	"f.se",
	"fh.se",
	"fhsk.se",
	"fhv.se",
	"g.se",
	"h.se",
	"i.se",
	"k.se",
	"komforb.se",
	"kommunalforbund.se",
	"komvux.se",
	"l.se",
	"lanbib.se",
	"m.se",
	"n.se",
	"naturbruksgymn.se",
	"o.se",
	"org.se",
	"p.se",
	"parti.se",
	"pp.se",
	"press.se",
	"r.se",
	"s.se",
	"t.se",
	"tm.se",
	"u.se",
	"w.se",
	"x.se",
	"y.se",
	"z.se",
	"sg",
	"com.sg",
	"net.sg",
	"org.sg",
	"gov.sg",
	"edu.sg",
	"per.sg",
	"sh",
	"com.sh",
	"net.sh",
	"gov.sh",
	"org.sh",
	"mil.sh",
	"si",
	"sj",
	"sk",
	"sl",
	"com.sl",
	"net.sl",
	"edu.sl",
	"gov.sl",
	"org.sl",
	"sm",
	"sn",
	"art.sn",
	"com.sn",
	"edu.sn",
	"gouv.sn",
	"org.sn",
	"perso.sn",
	"univ.sn",
	"so",
	"com.so",
	"edu.so",
	"gov.so",
	"me.so",
	"net.so",
	"org.so",
	"sr",
	"ss",
	"biz.ss",
	"com.ss",
	"edu.ss",
	"gov.ss",
	"me.ss",
	"net.ss",
	"org.ss",
	"sch.ss",
	"st",
	"co.st",
	"com.st",
	"consulado.st",
	"edu.st",
	"embaixada.st",
	"mil.st",
	"net.st",
	"org.st",
	"principe.st",
	"saotome.st",
	"store.st",
	"su",
	"sv",
	"com.sv",
	"edu.sv",
	"gob.sv",
	"org.sv",
	"red.sv",
	"sx",
	"gov.sx",
	"sy",
	"edu.sy",
	"gov.sy",
	"net.sy",
	"mil.sy",
	"com.sy",
	"org.sy",
	"sz",
	"co.sz",
	"ac.sz",
	"org.sz",
	"tc",
	"td",
	"tel",
	"tf",
	"tg",
	"th",
	"ac.th",
	"co.th",
	"go.th",
	"in.th",
	"mi.th",
	"net.th",
	"or.th",
	"tj",
	"ac.tj",
	"biz.tj",
	"co.tj",
	"com.tj",
	"edu.tj",
	"go.tj",
	"gov.tj",
	"int.tj",
	"mil.tj",
	"name.tj",
	"net.tj",
	"nic.tj",
	"org.tj",
	"test.tj",
	"web.tj",
	"tk",
	"tl",
	"gov.tl",
	"tm",
	"com.tm",
	"co.tm",
	"org.tm",
	"net.tm",
	"nom.tm",
	"gov.tm",
	"mil.tm",
	"edu.tm",
	"tn",
	"com.tn",
	"ens.tn",
	"fin.tn",
	"gov.tn",
	"ind.tn",
	"info.tn",
	"intl.tn",
	"mincom.tn",
	"nat.tn",
	"net.tn",
	"org.tn",
	"perso.tn",
	"tourism.tn",
	"to",
	"com.to",
	"gov.to",
	"net.to",
	"org.to",
	"edu.to",
	"mil.to",
	"tr",
	"av.tr",
	"bbs.tr",
	"bel.tr",
	"biz.tr",
	"com.tr",
	"dr.tr",
	"edu.tr",
	"gen.tr",
	"gov.tr",
	"info.tr",
	"mil.tr",
	"k12.tr",
	"kep.tr",
	"name.tr",
	"net.tr",
	"org.tr",
	"pol.tr",
	"tel.tr",
	"tsk.tr",
	"tv.tr",
	"web.tr",
	"nc.tr",
	"gov.nc.tr",
	"tt",
	"co.tt",
	"com.tt",
	"org.tt",
	"net.tt",
	"biz.tt",
	"info.tt",
	"pro.tt",
	"int.tt",
	"coop.tt",
	"jobs.tt",
	"mobi.tt",
	"travel.tt",
	"museum.tt",
	"aero.tt",
	"name.tt",
	"gov.tt",
	"edu.tt",
	"tv",
	"tw",
	"edu.tw",
	"gov.tw",
	"mil.tw",
	"com.tw",
	"net.tw",
	"org.tw",
	"idv.tw",
	"game.tw",
	"ebiz.tw",
	"club.tw",
	"ç¶²è·¯.tw",
	"çµç¹.tw",
	"åæ¥­.tw",
	"tz",
	"ac.tz",
	"co.tz",
	"go.tz",
	"hotel.tz",
	"info.tz",
	"me.tz",
	"mil.tz",
	"mobi.tz",
	"ne.tz",
	"or.tz",
	"sc.tz",
	"tv.tz",
	"ua",
	"com.ua",
	"edu.ua",
	"gov.ua",
	"in.ua",
	"net.ua",
	"org.ua",
	"cherkassy.ua",
	"cherkasy.ua",
	"chernigov.ua",
	"chernihiv.ua",
	"chernivtsi.ua",
	"chernovtsy.ua",
	"ck.ua",
	"cn.ua",
	"cr.ua",
	"crimea.ua",
	"cv.ua",
	"dn.ua",
	"dnepropetrovsk.ua",
	"dnipropetrovsk.ua",
	"donetsk.ua",
	"dp.ua",
	"if.ua",
	"ivano-frankivsk.ua",
	"kh.ua",
	"kharkiv.ua",
	"kharkov.ua",
	"kherson.ua",
	"khmelnitskiy.ua",
	"khmelnytskyi.ua",
	"kiev.ua",
	"kirovograd.ua",
	"km.ua",
	"kr.ua",
	"krym.ua",
	"ks.ua",
	"kv.ua",
	"kyiv.ua",
	"lg.ua",
	"lt.ua",
	"lugansk.ua",
	"lutsk.ua",
	"lv.ua",
	"lviv.ua",
	"mk.ua",
	"mykolaiv.ua",
	"nikolaev.ua",
	"od.ua",
	"odesa.ua",
	"odessa.ua",
	"pl.ua",
	"poltava.ua",
	"rivne.ua",
	"rovno.ua",
	"rv.ua",
	"sb.ua",
	"sebastopol.ua",
	"sevastopol.ua",
	"sm.ua",
	"sumy.ua",
	"te.ua",
	"ternopil.ua",
	"uz.ua",
	"uzhgorod.ua",
	"vinnica.ua",
	"vinnytsia.ua",
	"vn.ua",
	"volyn.ua",
	"yalta.ua",
	"zaporizhzhe.ua",
	"zaporizhzhia.ua",
	"zhitomir.ua",
	"zhytomyr.ua",
	"zp.ua",
	"zt.ua",
	"ug",
	"co.ug",
	"or.ug",
	"ac.ug",
	"sc.ug",
	"go.ug",
	"ne.ug",
	"com.ug",
	"org.ug",
	"uk",
	"ac.uk",
	"co.uk",
	"gov.uk",
	"ltd.uk",
	"me.uk",
	"net.uk",
	"nhs.uk",
	"org.uk",
	"plc.uk",
	"police.uk",
	"*.sch.uk",
	"us",
	"dni.us",
	"fed.us",
	"isa.us",
	"kids.us",
	"nsn.us",
	"ak.us",
	"al.us",
	"ar.us",
	"as.us",
	"az.us",
	"ca.us",
	"co.us",
	"ct.us",
	"dc.us",
	"de.us",
	"fl.us",
	"ga.us",
	"gu.us",
	"hi.us",
	"ia.us",
	"id.us",
	"il.us",
	"in.us",
	"ks.us",
	"ky.us",
	"la.us",
	"ma.us",
	"md.us",
	"me.us",
	"mi.us",
	"mn.us",
	"mo.us",
	"ms.us",
	"mt.us",
	"nc.us",
	"nd.us",
	"ne.us",
	"nh.us",
	"nj.us",
	"nm.us",
	"nv.us",
	"ny.us",
	"oh.us",
	"ok.us",
	"or.us",
	"pa.us",
	"pr.us",
	"ri.us",
	"sc.us",
	"sd.us",
	"tn.us",
	"tx.us",
	"ut.us",
	"vi.us",
	"vt.us",
	"va.us",
	"wa.us",
	"wi.us",
	"wv.us",
	"wy.us",
	"k12.ak.us",
	"k12.al.us",
	"k12.ar.us",
	"k12.as.us",
	"k12.az.us",
	"k12.ca.us",
	"k12.co.us",
	"k12.ct.us",
	"k12.dc.us",
	"k12.de.us",
	"k12.fl.us",
	"k12.ga.us",
	"k12.gu.us",
	"k12.ia.us",
	"k12.id.us",
	"k12.il.us",
	"k12.in.us",
	"k12.ks.us",
	"k12.ky.us",
	"k12.la.us",
	"k12.ma.us",
	"k12.md.us",
	"k12.me.us",
	"k12.mi.us",
	"k12.mn.us",
	"k12.mo.us",
	"k12.ms.us",
	"k12.mt.us",
	"k12.nc.us",
	"k12.ne.us",
	"k12.nh.us",
	"k12.nj.us",
	"k12.nm.us",
	"k12.nv.us",
	"k12.ny.us",
	"k12.oh.us",
	"k12.ok.us",
	"k12.or.us",
	"k12.pa.us",
	"k12.pr.us",
	"k12.sc.us",
	"k12.tn.us",
	"k12.tx.us",
	"k12.ut.us",
	"k12.vi.us",
	"k12.vt.us",
	"k12.va.us",
	"k12.wa.us",
	"k12.wi.us",
	"k12.wy.us",
	"cc.ak.us",
	"cc.al.us",
	"cc.ar.us",
	"cc.as.us",
	"cc.az.us",
	"cc.ca.us",
	"cc.co.us",
	"cc.ct.us",
	"cc.dc.us",
	"cc.de.us",
	"cc.fl.us",
	"cc.ga.us",
	"cc.gu.us",
	"cc.hi.us",
	"cc.ia.us",
	"cc.id.us",
	"cc.il.us",
	"cc.in.us",
	"cc.ks.us",
	"cc.ky.us",
	"cc.la.us",
	"cc.ma.us",
	"cc.md.us",
	"cc.me.us",
	"cc.mi.us",
	"cc.mn.us",
	"cc.mo.us",
	"cc.ms.us",
	"cc.mt.us",
	"cc.nc.us",
	"cc.nd.us",
	"cc.ne.us",
	"cc.nh.us",
	"cc.nj.us",
	"cc.nm.us",
	"cc.nv.us",
	"cc.ny.us",
	"cc.oh.us",
	"cc.ok.us",
	"cc.or.us",
	"cc.pa.us",
	"cc.pr.us",
	"cc.ri.us",
	"cc.sc.us",
	"cc.sd.us",
	"cc.tn.us",
	"cc.tx.us",
	"cc.ut.us",
	"cc.vi.us",
	"cc.vt.us",
	"cc.va.us",
	"cc.wa.us",
	"cc.wi.us",
	"cc.wv.us",
	"cc.wy.us",
	"lib.ak.us",
	"lib.al.us",
	"lib.ar.us",
	"lib.as.us",
	"lib.az.us",
	"lib.ca.us",
	"lib.co.us",
	"lib.ct.us",
	"lib.dc.us",
	"lib.fl.us",
	"lib.ga.us",
	"lib.gu.us",
	"lib.hi.us",
	"lib.ia.us",
	"lib.id.us",
	"lib.il.us",
	"lib.in.us",
	"lib.ks.us",
	"lib.ky.us",
	"lib.la.us",
	"lib.ma.us",
	"lib.md.us",
	"lib.me.us",
	"lib.mi.us",
	"lib.mn.us",
	"lib.mo.us",
	"lib.ms.us",
	"lib.mt.us",
	"lib.nc.us",
	"lib.nd.us",
	"lib.ne.us",
	"lib.nh.us",
	"lib.nj.us",
	"lib.nm.us",
	"lib.nv.us",
	"lib.ny.us",
	"lib.oh.us",
	"lib.ok.us",
	"lib.or.us",
	"lib.pa.us",
	"lib.pr.us",
	"lib.ri.us",
	"lib.sc.us",
	"lib.sd.us",
	"lib.tn.us",
	"lib.tx.us",
	"lib.ut.us",
	"lib.vi.us",
	"lib.vt.us",
	"lib.va.us",
	"lib.wa.us",
	"lib.wi.us",
	"lib.wy.us",
	"pvt.k12.ma.us",
	"chtr.k12.ma.us",
	"paroch.k12.ma.us",
	"ann-arbor.mi.us",
	"cog.mi.us",
	"dst.mi.us",
	"eaton.mi.us",
	"gen.mi.us",
	"mus.mi.us",
	"tec.mi.us",
	"washtenaw.mi.us",
	"uy",
	"com.uy",
	"edu.uy",
	"gub.uy",
	"mil.uy",
	"net.uy",
	"org.uy",
	"uz",
	"co.uz",
	"com.uz",
	"net.uz",
	"org.uz",
	"va",
	"vc",
	"com.vc",
	"net.vc",
	"org.vc",
	"gov.vc",
	"mil.vc",
	"edu.vc",
	"ve",
	"arts.ve",
	"bib.ve",
	"co.ve",
	"com.ve",
	"e12.ve",
	"edu.ve",
	"firm.ve",
	"gob.ve",
	"gov.ve",
	"info.ve",
	"int.ve",
	"mil.ve",
	"net.ve",
	"nom.ve",
	"org.ve",
	"rar.ve",
	"rec.ve",
	"store.ve",
	"tec.ve",
	"web.ve",
	"vg",
	"vi",
	"co.vi",
	"com.vi",
	"k12.vi",
	"net.vi",
	"org.vi",
	"vn",
	"com.vn",
	"net.vn",
	"org.vn",
	"edu.vn",
	"gov.vn",
	"int.vn",
	"ac.vn",
	"biz.vn",
	"info.vn",
	"name.vn",
	"pro.vn",
	"health.vn",
	"vu",
	"com.vu",
	"edu.vu",
	"net.vu",
	"org.vu",
	"wf",
	"ws",
	"com.ws",
	"net.ws",
	"org.ws",
	"gov.ws",
	"edu.ws",
	"yt",
	"Ø§ÙØ§Ø±Ø§Øª",
	"Õ°Õ¡Õµ",
	"à¦¬à¦¾à¦à¦²à¦¾",
	"Ð±Ð³",
	"Ø§ÙØ¨Ø­Ø±ÙÙ",
	"Ð±ÐµÐ»",
	"ä¸­å½",
	"ä¸­å",
	"Ø§ÙØ¬Ø²Ø§Ø¦Ø±",
	"ÙØµØ±",
	"ÐµÑ",
	"ÎµÏ",
	"ÙÙØ±ÙØªØ§ÙÙØ§",
	"áá",
	"ÎµÎ»",
	"é¦æ¸¯",
	"å¬å¸.é¦æ¸¯",
	"æè².é¦æ¸¯",
	"æ¿åº.é¦æ¸¯",
	"åäºº.é¦æ¸¯",
	"ç¶²çµ¡.é¦æ¸¯",
	"çµç¹.é¦æ¸¯",
	"à²­à²¾à²°à²¤",
	"à¬­à¬¾à¬°à¬¤",
	"à¦­à¦¾à§°à¦¤",
	"à¤­à¤¾à¤°à¤¤à¤®à¥",
	"à¤­à¤¾à¤°à¥à¤¤",
	"ÚØ§Ø±Øª",
	"à´­à´¾à´°à´¤à´",
	"à¤­à¤¾à¤°à¤¤",
	"Ø¨Ø§Ø±Øª",
	"Ø¨Ú¾Ø§Ø±Øª",
	"à°­à°¾à°°à°¤à±",
	"àª­àª¾àª°àª¤",
	"à¨­à¨¾à¨°à¨¤",
	"à¦­à¦¾à¦°à¦¤",
	"à®à®¨à¯à®¤à®¿à®¯à®¾",
	"Ø§ÛØ±Ø§Ù",
	"Ø§ÙØ±Ø§Ù",
	"Ø¹Ø±Ø§Ù",
	"Ø§ÙØ§Ø±Ø¯Ù",
	"íêµ­",
	"ÒÐ°Ð·",
	"àº¥àº²àº§",
	"à¶½à¶à¶à·",
	"à®à®²à®à¯à®à¯",
	"Ø§ÙÙØºØ±Ø¨",
	"Ð¼ÐºÐ´",
	"Ð¼Ð¾Ð½",
	"æ¾³é",
	"æ¾³é¨",
	"ÙÙÙØ³ÙØ§",
	"Ø¹ÙØ§Ù",
	"Ù¾Ø§Ú©Ø³ØªØ§Ù",
	"Ù¾Ø§ÙØ³ØªØ§Ù",
	"ÙÙØ³Ø·ÙÙ",
	"ÑÑÐ±",
	"Ð¿Ñ.ÑÑÐ±",
	"Ð¾ÑÐ³.ÑÑÐ±",
	"Ð¾Ð±Ñ.ÑÑÐ±",
	"Ð¾Ð´.ÑÑÐ±",
	"ÑÐ¿Ñ.ÑÑÐ±",
	"Ð°Ðº.ÑÑÐ±",
	"ÑÑ",
	"ÙØ·Ø±",
	"Ø§ÙØ³Ø¹ÙØ¯ÙØ©",
	"Ø§ÙØ³Ø¹ÙØ¯ÛØ©",
	"Ø§ÙØ³Ø¹ÙØ¯ÛÛ",
	"Ø§ÙØ³Ø¹ÙØ¯ÙÙ",
	"Ø³ÙØ¯Ø§Ù",
	"æ°å å¡",
	"à®à®¿à®à¯à®à®ªà¯à®ªà¯à®°à¯",
	"Ø³ÙØ±ÙØ©",
	"Ø³ÙØ±ÙØ§",
	"à¹à¸à¸¢",
	"à¸¨à¸¶à¸à¸©à¸².à¹à¸à¸¢",
	"à¸à¸¸à¸£à¸à¸´à¸.à¹à¸à¸¢",
	"à¸£à¸±à¸à¸à¸²à¸¥.à¹à¸à¸¢",
	"à¸à¸«à¸²à¸£.à¹à¸à¸¢",
	"à¹à¸à¹à¸.à¹à¸à¸¢",
	"à¸­à¸à¸à¹à¸à¸£.à¹à¸à¸¢",
	"ØªÙÙØ³",
	"å°ç£",
	"å°æ¹¾",
	"èºç£",
	"ÑÐºÑ",
	"Ø§ÙÙÙÙ",
	"xxx",
	"ye",
	"com.ye",
	"edu.ye",
	"gov.ye",
	"net.ye",
	"mil.ye",
	"org.ye",
	"ac.za",
	"agric.za",
	"alt.za",
	"co.za",
	"edu.za",
	"gov.za",
	"grondar.za",
	"law.za",
	"mil.za",
	"net.za",
	"ngo.za",
	"nic.za",
	"nis.za",
	"nom.za",
	"org.za",
	"school.za",
	"tm.za",
	"web.za",
	"zm",
	"ac.zm",
	"biz.zm",
	"co.zm",
	"com.zm",
	"edu.zm",
	"gov.zm",
	"info.zm",
	"mil.zm",
	"net.zm",
	"org.zm",
	"sch.zm",
	"zw",
	"ac.zw",
	"co.zw",
	"gov.zw",
	"mil.zw",
	"org.zw",
	"aaa",
	"aarp",
	"abarth",
	"abb",
	"abbott",
	"abbvie",
	"abc",
	"able",
	"abogado",
	"abudhabi",
	"academy",
	"accenture",
	"accountant",
	"accountants",
	"aco",
	"actor",
	"adac",
	"ads",
	"adult",
	"aeg",
	"aetna",
	"afl",
	"africa",
	"agakhan",
	"agency",
	"aig",
	"airbus",
	"airforce",
	"airtel",
	"akdn",
	"alfaromeo",
	"alibaba",
	"alipay",
	"allfinanz",
	"allstate",
	"ally",
	"alsace",
	"alstom",
	"amazon",
	"americanexpress",
	"americanfamily",
	"amex",
	"amfam",
	"amica",
	"amsterdam",
	"analytics",
	"android",
	"anquan",
	"anz",
	"aol",
	"apartments",
	"app",
	"apple",
	"aquarelle",
	"arab",
	"aramco",
	"archi",
	"army",
	"art",
	"arte",
	"asda",
	"associates",
	"athleta",
	"attorney",
	"auction",
	"audi",
	"audible",
	"audio",
	"auspost",
	"author",
	"auto",
	"autos",
	"avianca",
	"aws",
	"axa",
	"azure",
	"baby",
	"baidu",
	"banamex",
	"bananarepublic",
	"band",
	"bank",
	"bar",
	"barcelona",
	"barclaycard",
	"barclays",
	"barefoot",
	"bargains",
	"baseball",
	"basketball",
	"bauhaus",
	"bayern",
	"bbc",
	"bbt",
	"bbva",
	"bcg",
	"bcn",
	"beats",
	"beauty",
	"beer",
	"bentley",
	"berlin",
	"best",
	"bestbuy",
	"bet",
	"bharti",
	"bible",
	"bid",
	"bike",
	"bing",
	"bingo",
	"bio",
	"black",
	"blackfriday",
	"blockbuster",
	"blog",
	"bloomberg",
	"blue",
	"bms",
	"bmw",
	"bnpparibas",
	"boats",
	"boehringer",
	"bofa",
	"bom",
	"bond",
	"boo",
	"book",
	"booking",
	"bosch",
	"bostik",
	"boston",
	"bot",
	"boutique",
	"box",
	"bradesco",
	"bridgestone",
	"broadway",
	"broker",
	"brother",
	"brussels",
	"bugatti",
	"build",
	"builders",
	"business",
	"buy",
	"buzz",
	"bzh",
	"cab",
	"cafe",
	"cal",
	"call",
	"calvinklein",
	"cam",
	"camera",
	"camp",
	"cancerresearch",
	"canon",
	"capetown",
	"capital",
	"capitalone",
	"car",
	"caravan",
	"cards",
	"care",
	"career",
	"careers",
	"cars",
	"casa",
	"case",
	"cash",
	"casino",
	"catering",
	"catholic",
	"cba",
	"cbn",
	"cbre",
	"cbs",
	"center",
	"ceo",
	"cern",
	"cfa",
	"cfd",
	"chanel",
	"channel",
	"charity",
	"chase",
	"chat",
	"cheap",
	"chintai",
	"christmas",
	"chrome",
	"church",
	"cipriani",
	"circle",
	"cisco",
	"citadel",
	"citi",
	"citic",
	"city",
	"cityeats",
	"claims",
	"cleaning",
	"click",
	"clinic",
	"clinique",
	"clothing",
	"cloud",
	"club",
	"clubmed",
	"coach",
	"codes",
	"coffee",
	"college",
	"cologne",
	"comcast",
	"commbank",
	"community",
	"company",
	"compare",
	"computer",
	"comsec",
	"condos",
	"construction",
	"consulting",
	"contact",
	"contractors",
	"cooking",
	"cookingchannel",
	"cool",
	"corsica",
	"country",
	"coupon",
	"coupons",
	"courses",
	"cpa",
	"credit",
	"creditcard",
	"creditunion",
	"cricket",
	"crown",
	"crs",
	"cruise",
	"cruises",
	"cuisinella",
	"cymru",
	"cyou",
	"dabur",
	"dad",
	"dance",
	"data",
	"date",
	"dating",
	"datsun",
	"day",
	"dclk",
	"dds",
	"deal",
	"dealer",
	"deals",
	"degree",
	"delivery",
	"dell",
	"deloitte",
	"delta",
	"democrat",
	"dental",
	"dentist",
	"desi",
	"design",
	"dev",
	"dhl",
	"diamonds",
	"diet",
	"digital",
	"direct",
	"directory",
	"discount",
	"discover",
	"dish",
	"diy",
	"dnp",
	"docs",
	"doctor",
	"dog",
	"domains",
	"dot",
	"download",
	"drive",
	"dtv",
	"dubai",
	"dunlop",
	"dupont",
	"durban",
	"dvag",
	"dvr",
	"earth",
	"eat",
	"eco",
	"edeka",
	"education",
	"email",
	"emerck",
	"energy",
	"engineer",
	"engineering",
	"enterprises",
	"epson",
	"equipment",
	"ericsson",
	"erni",
	"esq",
	"estate",
	"etisalat",
	"eurovision",
	"eus",
	"events",
	"exchange",
	"expert",
	"exposed",
	"express",
	"extraspace",
	"fage",
	"fail",
	"fairwinds",
	"faith",
	"family",
	"fan",
	"fans",
	"farm",
	"farmers",
	"fashion",
	"fast",
	"fedex",
	"feedback",
	"ferrari",
	"ferrero",
	"fiat",
	"fidelity",
	"fido",
	"film",
	"final",
	"finance",
	"financial",
	"fire",
	"firestone",
	"firmdale",
	"fish",
	"fishing",
	"fit",
	"fitness",
	"flickr",
	"flights",
	"flir",
	"florist",
	"flowers",
	"fly",
	"foo",
	"food",
	"foodnetwork",
	"football",
	"ford",
	"forex",
	"forsale",
	"forum",
	"foundation",
	"fox",
	"free",
	"fresenius",
	"frl",
	"frogans",
	"frontdoor",
	"frontier",
	"ftr",
	"fujitsu",
	"fun",
	"fund",
	"furniture",
	"futbol",
	"fyi",
	"gal",
	"gallery",
	"gallo",
	"gallup",
	"game",
	"games",
	"gap",
	"garden",
	"gay",
	"gbiz",
	"gdn",
	"gea",
	"gent",
	"genting",
	"george",
	"ggee",
	"gift",
	"gifts",
	"gives",
	"giving",
	"glass",
	"gle",
	"global",
	"globo",
	"gmail",
	"gmbh",
	"gmo",
	"gmx",
	"godaddy",
	"gold",
	"goldpoint",
	"golf",
	"goo",
	"goodyear",
	"goog",
	"google",
	"gop",
	"got",
	"grainger",
	"graphics",
	"gratis",
	"green",
	"gripe",
	"grocery",
	"group",
	"guardian",
	"gucci",
	"guge",
	"guide",
	"guitars",
	"guru",
	"hair",
	"hamburg",
	"hangout",
	"haus",
	"hbo",
	"hdfc",
	"hdfcbank",
	"health",
	"healthcare",
	"help",
	"helsinki",
	"here",
	"hermes",
	"hgtv",
	"hiphop",
	"hisamitsu",
	"hitachi",
	"hiv",
	"hkt",
	"hockey",
	"holdings",
	"holiday",
	"homedepot",
	"homegoods",
	"homes",
	"homesense",
	"honda",
	"horse",
	"hospital",
	"host",
	"hosting",
	"hot",
	"hoteles",
	"hotels",
	"hotmail",
	"house",
	"how",
	"hsbc",
	"hughes",
	"hyatt",
	"hyundai",
	"ibm",
	"icbc",
	"ice",
	"icu",
	"ieee",
	"ifm",
	"ikano",
	"imamat",
	"imdb",
	"immo",
	"immobilien",
	"inc",
	"industries",
	"infiniti",
	"ing",
	"ink",
	"institute",
	"insurance",
	"insure",
	"international",
	"intuit",
	"investments",
	"ipiranga",
	"irish",
	"ismaili",
	"ist",
	"istanbul",
	"itau",
	"itv",
	"jaguar",
	"java",
	"jcb",
	"jeep",
	"jetzt",
	"jewelry",
	"jio",
	"jll",
	"jmp",
	"jnj",
	"joburg",
	"jot",
	"joy",
	"jpmorgan",
	"jprs",
	"juegos",
	"juniper",
	"kaufen",
	"kddi",
	"kerryhotels",
	"kerrylogistics",
	"kerryproperties",
	"kfh",
	"kia",
	"kids",
	"kim",
	"kinder",
	"kindle",
	"kitchen",
	"kiwi",
	"koeln",
	"komatsu",
	"kosher",
	"kpmg",
	"kpn",
	"krd",
	"kred",
	"kuokgroup",
	"kyoto",
	"lacaixa",
	"lamborghini",
	"lamer",
	"lancaster",
	"lancia",
	"land",
	"landrover",
	"lanxess",
	"lasalle",
	"lat",
	"latino",
	"latrobe",
	"law",
	"lawyer",
	"lds",
	"lease",
	"leclerc",
	"lefrak",
	"legal",
	"lego",
	"lexus",
	"lgbt",
	"lidl",
	"life",
	"lifeinsurance",
	"lifestyle",
	"lighting",
	"like",
	"lilly",
	"limited",
	"limo",
	"lincoln",
	"linde",
	"link",
	"lipsy",
	"live",
	"living",
	"llc",
	"llp",
	"loan",
	"loans",
	"locker",
	"locus",
	"loft",
	"lol",
	"london",
	"lotte",
	"lotto",
	"love",
	"lpl",
	"lplfinancial",
	"ltd",
	"ltda",
	"lundbeck",
	"luxe",
	"luxury",
	"macys",
	"madrid",
	"maif",
	"maison",
	"makeup",
	"man",
	"management",
	"mango",
	"map",
	"market",
	"marketing",
	"markets",
	"marriott",
	"marshalls",
	"maserati",
	"mattel",
	"mba",
	"mckinsey",
	"med",
	"media",
	"meet",
	"melbourne",
	"meme",
	"memorial",
	"men",
	"menu",
	"merckmsd",
	"miami",
	"microsoft",
	"mini",
	"mint",
	"mit",
	"mitsubishi",
	"mlb",
	"mls",
	"mma",
	"mobile",
	"moda",
	"moe",
	"moi",
	"mom",
	"monash",
	"money",
	"monster",
	"mormon",
	"mortgage",
	"moscow",
	"moto",
	"motorcycles",
	"mov",
	"movie",
	"msd",
	"mtn",
	"mtr",
	"music",
	"mutual",
	"nab",
	"nagoya",
	"natura",
	"navy",
	"nba",
	"nec",
	"netbank",
	"netflix",
	"network",
	"neustar",
	"new",
	"news",
	"next",
	"nextdirect",
	"nexus",
	"nfl",
	"ngo",
	"nhk",
	"nico",
	"nike",
	"nikon",
	"ninja",
	"nissan",
	"nissay",
	"nokia",
	"northwesternmutual",
	"norton",
	"now",
	"nowruz",
	"nowtv",
	"nra",
	"nrw",
	"ntt",
	"nyc",
	"obi",
	"observer",
	"office",
	"okinawa",
	"olayan",
	"olayangroup",
	"oldnavy",
	"ollo",
	"omega",
	"one",
	"ong",
	"onl",
	"online",
	"ooo",
	"open",
	"oracle",
	"orange",
	"organic",
	"origins",
	"osaka",
	"otsuka",
	"ott",
	"ovh",
	"page",
	"panasonic",
	"paris",
	"pars",
	"partners",
	"parts",
	"party",
	"passagens",
	"pay",
	"pccw",
	"pet",
	"pfizer",
	"pharmacy",
	"phd",
	"philips",
	"phone",
	"photo",
	"photography",
	"photos",
	"physio",
	"pics",
	"pictet",
	"pictures",
	"pid",
	"pin",
	"ping",
	"pink",
	"pioneer",
	"pizza",
	"place",
	"play",
	"playstation",
	"plumbing",
	"plus",
	"pnc",
	"pohl",
	"poker",
	"politie",
	"porn",
	"pramerica",
	"praxi",
	"press",
	"prime",
	"prod",
	"productions",
	"prof",
	"progressive",
	"promo",
	"properties",
	"property",
	"protection",
	"pru",
	"prudential",
	"pub",
	"pwc",
	"qpon",
	"quebec",
	"quest",
	"racing",
	"radio",
	"read",
	"realestate",
	"realtor",
	"realty",
	"recipes",
	"red",
	"redstone",
	"redumbrella",
	"rehab",
	"reise",
	"reisen",
	"reit",
	"reliance",
	"ren",
	"rent",
	"rentals",
	"repair",
	"report",
	"republican",
	"rest",
	"restaurant",
	"review",
	"reviews",
	"rexroth",
	"rich",
	"richardli",
	"ricoh",
	"ril",
	"rio",
	"rip",
	"rocher",
	"rocks",
	"rodeo",
	"rogers",
	"room",
	"rsvp",
	"rugby",
	"ruhr",
	"run",
	"rwe",
	"ryukyu",
	"saarland",
	"safe",
	"safety",
	"sakura",
	"sale",
	"salon",
	"samsclub",
	"samsung",
	"sandvik",
	"sandvikcoromant",
	"sanofi",
	"sap",
	"sarl",
	"sas",
	"save",
	"saxo",
	"sbi",
	"sbs",
	"sca",
	"scb",
	"schaeffler",
	"schmidt",
	"scholarships",
	"school",
	"schule",
	"schwarz",
	"science",
	"scot",
	"search",
	"seat",
	"secure",
	"security",
	"seek",
	"select",
	"sener",
	"services",
	"ses",
	"seven",
	"sew",
	"sex",
	"sexy",
	"sfr",
	"shangrila",
	"sharp",
	"shaw",
	"shell",
	"shia",
	"shiksha",
	"shoes",
	"shop",
	"shopping",
	"shouji",
	"show",
	"showtime",
	"silk",
	"sina",
	"singles",
	"site",
	"ski",
	"skin",
	"sky",
	"skype",
	"sling",
	"smart",
	"smile",
	"sncf",
	"soccer",
	"social",
	"softbank",
	"software",
	"sohu",
	"solar",
	"solutions",
	"song",
	"sony",
	"soy",
	"spa",
	"space",
	"sport",
	"spot",
	"srl",
	"stada",
	"staples",
	"star",
	"statebank",
	"statefarm",
	"stc",
	"stcgroup",
	"stockholm",
	"storage",
	"store",
	"stream",
	"studio",
	"study",
	"style",
	"sucks",
	"supplies",
	"supply",
	"support",
	"surf",
	"surgery",
	"suzuki",
	"swatch",
	"swiss",
	"sydney",
	"systems",
	"tab",
	"taipei",
	"talk",
	"taobao",
	"target",
	"tatamotors",
	"tatar",
	"tattoo",
	"tax",
	"taxi",
	"tci",
	"tdk",
	"team",
	"tech",
	"technology",
	"temasek",
	"tennis",
	"teva",
	"thd",
	"theater",
	"theatre",
	"tiaa",
	"tickets",
	"tienda",
	"tiffany",
	"tips",
	"tires",
	"tirol",
	"tjmaxx",
	"tjx",
	"tkmaxx",
	"tmall",
	"today",
	"tokyo",
	"tools",
	"top",
	"toray",
	"toshiba",
	"total",
	"tours",
	"town",
	"toyota",
	"toys",
	"trade",
	"trading",
	"training",
	"travel",
	"travelchannel",
	"travelers",
	"travelersinsurance",
	"trust",
	"trv",
	"tube",
	"tui",
	"tunes",
	"tushu",
	"tvs",
	"ubank",
	"ubs",
	"unicom",
	"university",
	"uno",
	"uol",
	"ups",
	"vacations",
	"vana",
	"vanguard",
	"vegas",
	"ventures",
	"verisign",
	"versicherung",
	"vet",
	"viajes",
	"video",
	"vig",
	"viking",
	"villas",
	"vin",
	"vip",
	"virgin",
	"visa",
	"vision",
	"viva",
	"vivo",
	"vlaanderen",
	"vodka",
	"volkswagen",
	"volvo",
	"vote",
	"voting",
	"voto",
	"voyage",
	"vuelos",
	"wales",
	"walmart",
	"walter",
	"wang",
	"wanggou",
	"watch",
	"watches",
	"weather",
	"weatherchannel",
	"webcam",
	"weber",
	"website",
	"wedding",
	"weibo",
	"weir",
	"whoswho",
	"wien",
	"wiki",
	"williamhill",
	"win",
	"windows",
	"wine",
	"winners",
	"wme",
	"wolterskluwer",
	"woodside",
	"work",
	"works",
	"world",
	"wow",
	"wtc",
	"wtf",
	"xbox",
	"xerox",
	"xfinity",
	"xihuan",
	"xin",
	"à¤à¥à¤®",
	"ã»ã¼ã«",
	"ä½å±±",
	"æå",
	"éå¢",
	"å¨çº¿",
	"ç¹ç",
	"à¸à¸­à¸¡",
	"å«å¦",
	"ÙÙÙØ¹",
	"å¬ç",
	"å¬å¸",
	"é¦æ ¼éæ",
	"ç½ç«",
	"ç§»å¨",
	"æç±ä½ ",
	"Ð¼Ð¾ÑÐºÐ²Ð°",
	"ÐºÐ°ÑÐ¾Ð»Ð¸Ðº",
	"Ð¾Ð½Ð»Ð°Ð¹Ð½",
	"ÑÐ°Ð¹Ñ",
	"èé",
	"×§××",
	"æ¶å°",
	"å¾®å",
	"æ·¡é©¬é¡",
	"ãã¡ãã·ã§ã³",
	"Ð¾ÑÐ³",
	"à¤¨à¥à¤",
	"ã¹ãã¢",
	"ã¢ãã¾ã³",
	"ì¼ì±",
	"åæ ",
	"ååº",
	"åå",
	"Ð´ÐµÑÐ¸",
	"ãã¤ã³ã",
	"æ°é»",
	"å®¶é»",
	"ÙÙÙ",
	"ä¸­æç½",
	"ä¸­ä¿¡",
	"å¨±ä¹",
	"è°·æ­",
	"é»è¨çç§",
	"è´­ç©",
	"ã¯ã©ã¦ã",
	"éè²©",
	"ç½åº",
	"à¤¸à¤à¤à¤ à¤¨",
	"é¤å",
	"ç½ç»",
	"ÐºÐ¾Ð¼",
	"äºé©¬é",
	"è¯ºåºäº",
	"é£å",
	"é£å©æµ¦",
	"ææº",
	"Ø§Ø±Ø§ÙÙÙ",
	"Ø§ÙØ¹ÙÙØ§Ù",
	"Ø§ØªØµØ§ÙØ§Øª",
	"Ø¨Ø§Ø²Ø§Ø±",
	"Ø§Ø¨ÙØ¸Ø¨Ù",
	"ÙØ§Ø«ÙÙÙÙ",
	"ÙÙØ±Ø§Ù",
	"ë·ì»´",
	"æ¿åº",
	"Ø´Ø¨ÙØ©",
	"Ø¨ÙØªÙ",
	"Ø¹Ø±Ø¨",
	"æºæ",
	"ç»ç»æºæ",
	"å¥åº·",
	"æè",
	"ÑÑÑ",
	"å¤§æ¿",
	"ã¿ããª",
	"ã°ã¼ã°ã«",
	"ä¸ç",
	"æ¸ç±",
	"ç½å",
	"ë·ë·",
	"ã³ã ",
	"å¤©ä¸»æ",
	"æ¸¸æ",
	"vermÃ¶gensberater",
	"vermÃ¶gensberatung",
	"ä¼ä¸",
	"ä¿¡æ¯",
	"åéå¤§éåº",
	"åé",
	"å¹¿ä¸",
	"æ¿å¡",
	"xyz",
	"yachts",
	"yahoo",
	"yamaxun",
	"yandex",
	"yodobashi",
	"yoga",
	"yokohama",
	"you",
	"youtube",
	"yun",
	"zappos",
	"zara",
	"zero",
	"zip",
	"zone",
	"zuerich",
	"cc.ua",
	"inf.ua",
	"ltd.ua",
	"611.to",
	"graphox.us",
	"*.devcdnaccesso.com",
	"adobeaemcloud.com",
	"*.dev.adobeaemcloud.com",
	"hlx.live",
	"adobeaemcloud.net",
	"hlx.page",
	"hlx3.page",
	"beep.pl",
	"airkitapps.com",
	"airkitapps-au.com",
	"airkitapps.eu",
	"aivencloud.com",
	"barsy.ca",
	"*.compute.estate",
	"*.alces.network",
	"kasserver.com",
	"altervista.org",
	"alwaysdata.net",
	"cloudfront.net",
	"*.compute.amazonaws.com",
	"*.compute-1.amazonaws.com",
	"*.compute.amazonaws.com.cn",
	"us-east-1.amazonaws.com",
	"cn-north-1.eb.amazonaws.com.cn",
	"cn-northwest-1.eb.amazonaws.com.cn",
	"elasticbeanstalk.com",
	"ap-northeast-1.elasticbeanstalk.com",
	"ap-northeast-2.elasticbeanstalk.com",
	"ap-northeast-3.elasticbeanstalk.com",
	"ap-south-1.elasticbeanstalk.com",
	"ap-southeast-1.elasticbeanstalk.com",
	"ap-southeast-2.elasticbeanstalk.com",
	"ca-central-1.elasticbeanstalk.com",
	"eu-central-1.elasticbeanstalk.com",
	"eu-west-1.elasticbeanstalk.com",
	"eu-west-2.elasticbeanstalk.com",
	"eu-west-3.elasticbeanstalk.com",
	"sa-east-1.elasticbeanstalk.com",
	"us-east-1.elasticbeanstalk.com",
	"us-east-2.elasticbeanstalk.com",
	"us-gov-west-1.elasticbeanstalk.com",
	"us-west-1.elasticbeanstalk.com",
	"us-west-2.elasticbeanstalk.com",
	"*.elb.amazonaws.com",
	"*.elb.amazonaws.com.cn",
	"awsglobalaccelerator.com",
	"s3.amazonaws.com",
	"s3-ap-northeast-1.amazonaws.com",
	"s3-ap-northeast-2.amazonaws.com",
	"s3-ap-south-1.amazonaws.com",
	"s3-ap-southeast-1.amazonaws.com",
	"s3-ap-southeast-2.amazonaws.com",
	"s3-ca-central-1.amazonaws.com",
	"s3-eu-central-1.amazonaws.com",
	"s3-eu-west-1.amazonaws.com",
	"s3-eu-west-2.amazonaws.com",
	"s3-eu-west-3.amazonaws.com",
	"s3-external-1.amazonaws.com",
	"s3-fips-us-gov-west-1.amazonaws.com",
	"s3-sa-east-1.amazonaws.com",
	"s3-us-gov-west-1.amazonaws.com",
	"s3-us-east-2.amazonaws.com",
	"s3-us-west-1.amazonaws.com",
	"s3-us-west-2.amazonaws.com",
	"s3.ap-northeast-2.amazonaws.com",
	"s3.ap-south-1.amazonaws.com",
	"s3.cn-north-1.amazonaws.com.cn",
	"s3.ca-central-1.amazonaws.com",
	"s3.eu-central-1.amazonaws.com",
	"s3.eu-west-2.amazonaws.com",
	"s3.eu-west-3.amazonaws.com",
	"s3.us-east-2.amazonaws.com",
	"s3.dualstack.ap-northeast-1.amazonaws.com",
	"s3.dualstack.ap-northeast-2.amazonaws.com",
	"s3.dualstack.ap-south-1.amazonaws.com",
	"s3.dualstack.ap-southeast-1.amazonaws.com",
	"s3.dualstack.ap-southeast-2.amazonaws.com",
	"s3.dualstack.ca-central-1.amazonaws.com",
	"s3.dualstack.eu-central-1.amazonaws.com",
	"s3.dualstack.eu-west-1.amazonaws.com",
	"s3.dualstack.eu-west-2.amazonaws.com",
	"s3.dualstack.eu-west-3.amazonaws.com",
	"s3.dualstack.sa-east-1.amazonaws.com",
	"s3.dualstack.us-east-1.amazonaws.com",
	"s3.dualstack.us-east-2.amazonaws.com",
	"s3-website-us-east-1.amazonaws.com",
	"s3-website-us-west-1.amazonaws.com",
	"s3-website-us-west-2.amazonaws.com",
	"s3-website-ap-northeast-1.amazonaws.com",
	"s3-website-ap-southeast-1.amazonaws.com",
	"s3-website-ap-southeast-2.amazonaws.com",
	"s3-website-eu-west-1.amazonaws.com",
	"s3-website-sa-east-1.amazonaws.com",
	"s3-website.ap-northeast-2.amazonaws.com",
	"s3-website.ap-south-1.amazonaws.com",
	"s3-website.ca-central-1.amazonaws.com",
	"s3-website.eu-central-1.amazonaws.com",
	"s3-website.eu-west-2.amazonaws.com",
	"s3-website.eu-west-3.amazonaws.com",
	"s3-website.us-east-2.amazonaws.com",
	"t3l3p0rt.net",
	"tele.amune.org",
	"apigee.io",
	"siiites.com",
	"appspacehosted.com",
	"appspaceusercontent.com",
	"appudo.net",
	"on-aptible.com",
	"user.aseinet.ne.jp",
	"gv.vc",
	"d.gv.vc",
	"user.party.eus",
	"pimienta.org",
	"poivron.org",
	"potager.org",
	"sweetpepper.org",
	"myasustor.com",
	"cdn.prod.atlassian-dev.net",
	"translated.page",
	"myfritz.net",
	"onavstack.net",
	"*.awdev.ca",
	"*.advisor.ws",
	"ecommerce-shop.pl",
	"b-data.io",
	"backplaneapp.io",
	"balena-devices.com",
	"rs.ba",
	"*.banzai.cloud",
	"app.banzaicloud.io",
	"*.backyards.banzaicloud.io",
	"base.ec",
	"official.ec",
	"buyshop.jp",
	"fashionstore.jp",
	"handcrafted.jp",
	"kawaiishop.jp",
	"supersale.jp",
	"theshop.jp",
	"shopselect.net",
	"base.shop",
	"*.beget.app",
	"betainabox.com",
	"bnr.la",
	"bitbucket.io",
	"blackbaudcdn.net",
	"of.je",
	"bluebite.io",
	"boomla.net",
	"boutir.com",
	"boxfuse.io",
	"square7.ch",
	"bplaced.com",
	"bplaced.de",
	"square7.de",
	"bplaced.net",
	"square7.net",
	"shop.brendly.rs",
	"browsersafetymark.io",
	"uk0.bigv.io",
	"dh.bytemark.co.uk",
	"vm.bytemark.co.uk",
	"cafjs.com",
	"mycd.eu",
	"drr.ac",
	"uwu.ai",
	"carrd.co",
	"crd.co",
	"ju.mp",
	"ae.org",
	"br.com",
	"cn.com",
	"com.de",
	"com.se",
	"de.com",
	"eu.com",
	"gb.net",
	"hu.net",
	"jp.net",
	"jpn.com",
	"mex.com",
	"ru.com",
	"sa.com",
	"se.net",
	"uk.com",
	"uk.net",
	"us.com",
	"za.bz",
	"za.com",
	"ar.com",
	"hu.com",
	"kr.com",
	"no.com",
	"qc.com",
	"uy.com",
	"africa.com",
	"gr.com",
	"in.net",
	"web.in",
	"us.org",
	"co.com",
	"aus.basketball",
	"nz.basketball",
	"radio.am",
	"radio.fm",
	"c.la",
	"certmgr.org",
	"cx.ua",
	"discourse.group",
	"discourse.team",
	"cleverapps.io",
	"clerk.app",
	"clerkstage.app",
	"*.lcl.dev",
	"*.lclstage.dev",
	"*.stg.dev",
	"*.stgstage.dev",
	"clickrising.net",
	"c66.me",
	"cloud66.ws",
	"cloud66.zone",
	"jdevcloud.com",
	"wpdevcloud.com",
	"cloudaccess.host",
	"freesite.host",
	"cloudaccess.net",
	"cloudcontrolled.com",
	"cloudcontrolapp.com",
	"*.cloudera.site",
	"pages.dev",
	"trycloudflare.com",
	"workers.dev",
	"wnext.app",
	"co.ca",
	"*.otap.co",
	"co.cz",
	"c.cdn77.org",
	"cdn77-ssl.net",
	"r.cdn77.net",
	"rsc.cdn77.org",
	"ssl.origin.cdn77-secure.org",
	"cloudns.asia",
	"cloudns.biz",
	"cloudns.club",
	"cloudns.cc",
	"cloudns.eu",
	"cloudns.in",
	"cloudns.info",
	"cloudns.org",
	"cloudns.pro",
	"cloudns.pw",
	"cloudns.us",
	"cnpy.gdn",
	"codeberg.page",
	"co.nl",
	"co.no",
	"webhosting.be",
	"hosting-cluster.nl",
	"ac.ru",
	"edu.ru",
	"gov.ru",
	"int.ru",
	"mil.ru",
	"test.ru",
	"dyn.cosidns.de",
	"dynamisches-dns.de",
	"dnsupdater.de",
	"internet-dns.de",
	"l-o-g-i-n.de",
	"dynamic-dns.info",
	"feste-ip.net",
	"knx-server.net",
	"static-access.net",
	"realm.cz",
	"*.cryptonomic.net",
	"cupcake.is",
	"curv.dev",
	"*.customer-oci.com",
	"*.oci.customer-oci.com",
	"*.ocp.customer-oci.com",
	"*.ocs.customer-oci.com",
	"cyon.link",
	"cyon.site",
	"fnwk.site",
	"folionetwork.site",
	"platform0.app",
	"daplie.me",
	"localhost.daplie.me",
	"dattolocal.com",
	"dattorelay.com",
	"dattoweb.com",
	"mydatto.com",
	"dattolocal.net",
	"mydatto.net",
	"biz.dk",
	"co.dk",
	"firm.dk",
	"reg.dk",
	"store.dk",
	"dyndns.dappnode.io",
	"*.dapps.earth",
	"*.bzz.dapps.earth",
	"builtwithdark.com",
	"demo.datadetect.com",
	"instance.datadetect.com",
	"edgestack.me",
	"ddns5.com",
	"debian.net",
	"deno.dev",
	"deno-staging.dev",
	"dedyn.io",
	"deta.app",
	"deta.dev",
	"*.rss.my.id",
	"*.diher.solutions",
	"discordsays.com",
	"discordsez.com",
	"jozi.biz",
	"dnshome.de",
	"online.th",
	"shop.th",
	"drayddns.com",
	"shoparena.pl",
	"dreamhosters.com",
	"mydrobo.com",
	"drud.io",
	"drud.us",
	"duckdns.org",
	"bip.sh",
	"bitbridge.net",
	"dy.fi",
	"tunk.org",
	"dyndns-at-home.com",
	"dyndns-at-work.com",
	"dyndns-blog.com",
	"dyndns-free.com",
	"dyndns-home.com",
	"dyndns-ip.com",
	"dyndns-mail.com",
	"dyndns-office.com",
	"dyndns-pics.com",
	"dyndns-remote.com",
	"dyndns-server.com",
	"dyndns-web.com",
	"dyndns-wiki.com",
	"dyndns-work.com",
	"dyndns.biz",
	"dyndns.info",
	"dyndns.org",
	"dyndns.tv",
	"at-band-camp.net",
	"ath.cx",
	"barrel-of-knowledge.info",
	"barrell-of-knowledge.info",
	"better-than.tv",
	"blogdns.com",
	"blogdns.net",
	"blogdns.org",
	"blogsite.org",
	"boldlygoingnowhere.org",
	"broke-it.net",
	"buyshouses.net",
	"cechire.com",
	"dnsalias.com",
	"dnsalias.net",
	"dnsalias.org",
	"dnsdojo.com",
	"dnsdojo.net",
	"dnsdojo.org",
	"does-it.net",
	"doesntexist.com",
	"doesntexist.org",
	"dontexist.com",
	"dontexist.net",
	"dontexist.org",
	"doomdns.com",
	"doomdns.org",
	"dvrdns.org",
	"dyn-o-saur.com",
	"dynalias.com",
	"dynalias.net",
	"dynalias.org",
	"dynathome.net",
	"dyndns.ws",
	"endofinternet.net",
	"endofinternet.org",
	"endoftheinternet.org",
	"est-a-la-maison.com",
	"est-a-la-masion.com",
	"est-le-patron.com",
	"est-mon-blogueur.com",
	"for-better.biz",
	"for-more.biz",
	"for-our.info",
	"for-some.biz",
	"for-the.biz",
	"forgot.her.name",
	"forgot.his.name",
	"from-ak.com",
	"from-al.com",
	"from-ar.com",
	"from-az.net",
	"from-ca.com",
	"from-co.net",
	"from-ct.com",
	"from-dc.com",
	"from-de.com",
	"from-fl.com",
	"from-ga.com",
	"from-hi.com",
	"from-ia.com",
	"from-id.com",
	"from-il.com",
	"from-in.com",
	"from-ks.com",
	"from-ky.com",
	"from-la.net",
	"from-ma.com",
	"from-md.com",
	"from-me.org",
	"from-mi.com",
	"from-mn.com",
	"from-mo.com",
	"from-ms.com",
	"from-mt.com",
	"from-nc.com",
	"from-nd.com",
	"from-ne.com",
	"from-nh.com",
	"from-nj.com",
	"from-nm.com",
	"from-nv.com",
	"from-ny.net",
	"from-oh.com",
	"from-ok.com",
	"from-or.com",
	"from-pa.com",
	"from-pr.com",
	"from-ri.com",
	"from-sc.com",
	"from-sd.com",
	"from-tn.com",
	"from-tx.com",
	"from-ut.com",
	"from-va.com",
	"from-vt.com",
	"from-wa.com",
	"from-wi.com",
	"from-wv.com",
	"from-wy.com",
	"ftpaccess.cc",
	"fuettertdasnetz.de",
	"game-host.org",
	"game-server.cc",
	"getmyip.com",
	"gets-it.net",
	"go.dyndns.org",
	"gotdns.com",
	"gotdns.org",
	"groks-the.info",
	"groks-this.info",
	"ham-radio-op.net",
	"here-for-more.info",
	"hobby-site.com",
	"hobby-site.org",
	"home.dyndns.org",
	"homedns.org",
	"homeftp.net",
	"homeftp.org",
	"homeip.net",
	"homelinux.com",
	"homelinux.net",
	"homelinux.org",
	"homeunix.com",
	"homeunix.net",
	"homeunix.org",
	"iamallama.com",
	"in-the-band.net",
	"is-a-anarchist.com",
	"is-a-blogger.com",
	"is-a-bookkeeper.com",
	"is-a-bruinsfan.org",
	"is-a-bulls-fan.com",
	"is-a-candidate.org",
	"is-a-caterer.com",
	"is-a-celticsfan.org",
	"is-a-chef.com",
	"is-a-chef.net",
	"is-a-chef.org",
	"is-a-conservative.com",
	"is-a-cpa.com",
	"is-a-cubicle-slave.com",
	"is-a-democrat.com",
	"is-a-designer.com",
	"is-a-doctor.com",
	"is-a-financialadvisor.com",
	"is-a-geek.com",
	"is-a-geek.net",
	"is-a-geek.org",
	"is-a-green.com",
	"is-a-guru.com",
	"is-a-hard-worker.com",
	"is-a-hunter.com",
	"is-a-knight.org",
	"is-a-landscaper.com",
	"is-a-lawyer.com",
	"is-a-liberal.com",
	"is-a-libertarian.com",
	"is-a-linux-user.org",
	"is-a-llama.com",
	"is-a-musician.com",
	"is-a-nascarfan.com",
	"is-a-nurse.com",
	"is-a-painter.com",
	"is-a-patsfan.org",
	"is-a-personaltrainer.com",
	"is-a-photographer.com",
	"is-a-player.com",
	"is-a-republican.com",
	"is-a-rockstar.com",
	"is-a-socialist.com",
	"is-a-soxfan.org",
	"is-a-student.com",
	"is-a-teacher.com",
	"is-a-techie.com",
	"is-a-therapist.com",
	"is-an-accountant.com",
	"is-an-actor.com",
	"is-an-actress.com",
	"is-an-anarchist.com",
	"is-an-artist.com",
	"is-an-engineer.com",
	"is-an-entertainer.com",
	"is-by.us",
	"is-certified.com",
	"is-found.org",
	"is-gone.com",
	"is-into-anime.com",
	"is-into-cars.com",
	"is-into-cartoons.com",
	"is-into-games.com",
	"is-leet.com",
	"is-lost.org",
	"is-not-certified.com",
	"is-saved.org",
	"is-slick.com",
	"is-uberleet.com",
	"is-very-bad.org",
	"is-very-evil.org",
	"is-very-good.org",
	"is-very-nice.org",
	"is-very-sweet.org",
	"is-with-theband.com",
	"isa-geek.com",
	"isa-geek.net",
	"isa-geek.org",
	"isa-hockeynut.com",
	"issmarterthanyou.com",
	"isteingeek.de",
	"istmein.de",
	"kicks-ass.net",
	"kicks-ass.org",
	"knowsitall.info",
	"land-4-sale.us",
	"lebtimnetz.de",
	"leitungsen.de",
	"likes-pie.com",
	"likescandy.com",
	"merseine.nu",
	"mine.nu",
	"misconfused.org",
	"mypets.ws",
	"myphotos.cc",
	"neat-url.com",
	"office-on-the.net",
	"on-the-web.tv",
	"podzone.net",
	"podzone.org",
	"readmyblog.org",
	"saves-the-whales.com",
	"scrapper-site.net",
	"scrapping.cc",
	"selfip.biz",
	"selfip.com",
	"selfip.info",
	"selfip.net",
	"selfip.org",
	"sells-for-less.com",
	"sells-for-u.com",
	"sells-it.net",
	"sellsyourhome.org",
	"servebbs.com",
	"servebbs.net",
	"servebbs.org",
	"serveftp.net",
	"serveftp.org",
	"servegame.org",
	"shacknet.nu",
	"simple-url.com",
	"space-to-rent.com",
	"stuff-4-sale.org",
	"stuff-4-sale.us",
	"teaches-yoga.com",
	"thruhere.net",
	"traeumtgerade.de",
	"webhop.biz",
	"webhop.info",
	"webhop.net",
	"webhop.org",
	"worse-than.tv",
	"writesthisblog.com",
	"ddnss.de",
	"dyn.ddnss.de",
	"dyndns.ddnss.de",
	"dyndns1.de",
	"dyn-ip24.de",
	"home-webserver.de",
	"dyn.home-webserver.de",
	"myhome-server.de",
	"ddnss.org",
	"definima.net",
	"definima.io",
	"ondigitalocean.app",
	"*.digitaloceanspaces.com",
	"bci.dnstrace.pro",
	"ddnsfree.com",
	"ddnsgeek.com",
	"giize.com",
	"gleeze.com",
	"kozow.com",
	"loseyourip.com",
	"ooguy.com",
	"theworkpc.com",
	"casacam.net",
	"dynu.net",
	"accesscam.org",
	"camdvr.org",
	"freeddns.org",
	"mywire.org",
	"webredirect.org",
	"myddns.rocks",
	"blogsite.xyz",
	"dynv6.net",
	"e4.cz",
	"eero.online",
	"eero-stage.online",
	"elementor.cloud",
	"elementor.cool",
	"en-root.fr",
	"mytuleap.com",
	"tuleap-partners.com",
	"encr.app",
	"encoreapi.com",
	"onred.one",
	"staging.onred.one",
	"eu.encoway.cloud",
	"eu.org",
	"al.eu.org",
	"asso.eu.org",
	"at.eu.org",
	"au.eu.org",
	"be.eu.org",
	"bg.eu.org",
	"ca.eu.org",
	"cd.eu.org",
	"ch.eu.org",
	"cn.eu.org",
	"cy.eu.org",
	"cz.eu.org",
	"de.eu.org",
	"dk.eu.org",
	"edu.eu.org",
	"ee.eu.org",
	"es.eu.org",
	"fi.eu.org",
	"fr.eu.org",
	"gr.eu.org",
	"hr.eu.org",
	"hu.eu.org",
	"ie.eu.org",
	"il.eu.org",
	"in.eu.org",
	"int.eu.org",
	"is.eu.org",
	"it.eu.org",
	"jp.eu.org",
	"kr.eu.org",
	"lt.eu.org",
	"lu.eu.org",
	"lv.eu.org",
	"mc.eu.org",
	"me.eu.org",
	"mk.eu.org",
	"mt.eu.org",
	"my.eu.org",
	"net.eu.org",
	"ng.eu.org",
	"nl.eu.org",
	"no.eu.org",
	"nz.eu.org",
	"paris.eu.org",
	"pl.eu.org",
	"pt.eu.org",
	"q-a.eu.org",
	"ro.eu.org",
	"ru.eu.org",
	"se.eu.org",
	"si.eu.org",
	"sk.eu.org",
	"tr.eu.org",
	"uk.eu.org",
	"us.eu.org",
	"eurodir.ru",
	"eu-1.evennode.com",
	"eu-2.evennode.com",
	"eu-3.evennode.com",
	"eu-4.evennode.com",
	"us-1.evennode.com",
	"us-2.evennode.com",
	"us-3.evennode.com",
	"us-4.evennode.com",
	"twmail.cc",
	"twmail.net",
	"twmail.org",
	"mymailer.com.tw",
	"url.tw",
	"onfabrica.com",
	"apps.fbsbx.com",
	"ru.net",
	"adygeya.ru",
	"bashkiria.ru",
	"bir.ru",
	"cbg.ru",
	"com.ru",
	"dagestan.ru",
	"grozny.ru",
	"kalmykia.ru",
	"kustanai.ru",
	"marine.ru",
	"mordovia.ru",
	"msk.ru",
	"mytis.ru",
	"nalchik.ru",
	"nov.ru",
	"pyatigorsk.ru",
	"spb.ru",
	"vladikavkaz.ru",
	"vladimir.ru",
	"abkhazia.su",
	"adygeya.su",
	"aktyubinsk.su",
	"arkhangelsk.su",
	"armenia.su",
	"ashgabad.su",
	"azerbaijan.su",
	"balashov.su",
	"bashkiria.su",
	"bryansk.su",
	"bukhara.su",
	"chimkent.su",
	"dagestan.su",
	"east-kazakhstan.su",
	"exnet.su",
	"georgia.su",
	"grozny.su",
	"ivanovo.su",
	"jambyl.su",
	"kalmykia.su",
	"kaluga.su",
	"karacol.su",
	"karaganda.su",
	"karelia.su",
	"khakassia.su",
	"krasnodar.su",
	"kurgan.su",
	"kustanai.su",
	"lenug.su",
	"mangyshlak.su",
	"mordovia.su",
	"msk.su",
	"murmansk.su",
	"nalchik.su",
	"navoi.su",
	"north-kazakhstan.su",
	"nov.su",
	"obninsk.su",
	"penza.su",
	"pokrovsk.su",
	"sochi.su",
	"spb.su",
	"tashkent.su",
	"termez.su",
	"togliatti.su",
	"troitsk.su",
	"tselinograd.su",
	"tula.su",
	"tuva.su",
	"vladikavkaz.su",
	"vladimir.su",
	"vologda.su",
	"channelsdvr.net",
	"u.channelsdvr.net",
	"edgecompute.app",
	"fastly-terrarium.com",
	"fastlylb.net",
	"map.fastlylb.net",
	"freetls.fastly.net",
	"map.fastly.net",
	"a.prod.fastly.net",
	"global.prod.fastly.net",
	"a.ssl.fastly.net",
	"b.ssl.fastly.net",
	"global.ssl.fastly.net",
	"fastvps-server.com",
	"fastvps.host",
	"myfast.host",
	"fastvps.site",
	"myfast.space",
	"fedorainfracloud.org",
	"fedorapeople.org",
	"cloud.fedoraproject.org",
	"app.os.fedoraproject.org",
	"app.os.stg.fedoraproject.org",
	"conn.uk",
	"copro.uk",
	"hosp.uk",
	"mydobiss.com",
	"fh-muenster.io",
	"filegear.me",
	"filegear-au.me",
	"filegear-de.me",
	"filegear-gb.me",
	"filegear-ie.me",
	"filegear-jp.me",
	"filegear-sg.me",
	"firebaseapp.com",
	"fireweb.app",
	"flap.id",
	"onflashdrive.app",
	"fldrv.com",
	"fly.dev",
	"edgeapp.net",
	"shw.io",
	"flynnhosting.net",
	"forgeblocks.com",
	"id.forgerock.io",
	"framer.app",
	"framercanvas.com",
	"*.frusky.de",
	"ravpage.co.il",
	"0e.vc",
	"freebox-os.com",
	"freeboxos.com",
	"fbx-os.fr",
	"fbxos.fr",
	"freebox-os.fr",
	"freeboxos.fr",
	"freedesktop.org",
	"freemyip.com",
	"wien.funkfeuer.at",
	"*.futurecms.at",
	"*.ex.futurecms.at",
	"*.in.futurecms.at",
	"futurehosting.at",
	"futuremailing.at",
	"*.ex.ortsinfo.at",
	"*.kunden.ortsinfo.at",
	"*.statics.cloud",
	"independent-commission.uk",
	"independent-inquest.uk",
	"independent-inquiry.uk",
	"independent-panel.uk",
	"independent-review.uk",
	"public-inquiry.uk",
	"royal-commission.uk",
	"campaign.gov.uk",
	"service.gov.uk",
	"api.gov.uk",
	"gehirn.ne.jp",
	"usercontent.jp",
	"gentapps.com",
	"gentlentapis.com",
	"lab.ms",
	"cdn-edges.net",
	"ghost.io",
	"gsj.bz",
	"githubusercontent.com",
	"githubpreview.dev",
	"github.io",
	"gitlab.io",
	"gitapp.si",
	"gitpage.si",
	"glitch.me",
	"nog.community",
	"co.ro",
	"shop.ro",
	"lolipop.io",
	"angry.jp",
	"babyblue.jp",
	"babymilk.jp",
	"backdrop.jp",
	"bambina.jp",
	"bitter.jp",
	"blush.jp",
	"boo.jp",
	"boy.jp",
	"boyfriend.jp",
	"but.jp",
	"candypop.jp",
	"capoo.jp",
	"catfood.jp",
	"cheap.jp",
	"chicappa.jp",
	"chillout.jp",
	"chips.jp",
	"chowder.jp",
	"chu.jp",
	"ciao.jp",
	"cocotte.jp",
	"coolblog.jp",
	"cranky.jp",
	"cutegirl.jp",
	"daa.jp",
	"deca.jp",
	"deci.jp",
	"digick.jp",
	"egoism.jp",
	"fakefur.jp",
	"fem.jp",
	"flier.jp",
	"floppy.jp",
	"fool.jp",
	"frenchkiss.jp",
	"girlfriend.jp",
	"girly.jp",
	"gloomy.jp",
	"gonna.jp",
	"greater.jp",
	"hacca.jp",
	"heavy.jp",
	"her.jp",
	"hiho.jp",
	"hippy.jp",
	"holy.jp",
	"hungry.jp",
	"icurus.jp",
	"itigo.jp",
	"jellybean.jp",
	"kikirara.jp",
	"kill.jp",
	"kilo.jp",
	"kuron.jp",
	"littlestar.jp",
	"lolipopmc.jp",
	"lolitapunk.jp",
	"lomo.jp",
	"lovepop.jp",
	"lovesick.jp",
	"main.jp",
	"mods.jp",
	"mond.jp",
	"mongolian.jp",
	"moo.jp",
	"namaste.jp",
	"nikita.jp",
	"nobushi.jp",
	"noor.jp",
	"oops.jp",
	"parallel.jp",
	"parasite.jp",
	"pecori.jp",
	"peewee.jp",
	"penne.jp",
	"pepper.jp",
	"perma.jp",
	"pigboat.jp",
	"pinoko.jp",
	"punyu.jp",
	"pupu.jp",
	"pussycat.jp",
	"pya.jp",
	"raindrop.jp",
	"readymade.jp",
	"sadist.jp",
	"schoolbus.jp",
	"secret.jp",
	"staba.jp",
	"stripper.jp",
	"sub.jp",
	"sunnyday.jp",
	"thick.jp",
	"tonkotsu.jp",
	"under.jp",
	"upper.jp",
	"velvet.jp",
	"verse.jp",
	"versus.jp",
	"vivian.jp",
	"watson.jp",
	"weblike.jp",
	"whitesnow.jp",
	"zombie.jp",
	"heteml.net",
	"cloudapps.digital",
	"london.cloudapps.digital",
	"pymnt.uk",
	"homeoffice.gov.uk",
	"ro.im",
	"goip.de",
	"run.app",
	"a.run.app",
	"web.app",
	"*.0emm.com",
	"appspot.com",
	"*.r.appspot.com",
	"codespot.com",
	"googleapis.com",
	"googlecode.com",
	"pagespeedmobilizer.com",
	"publishproxy.com",
	"withgoogle.com",
	"withyoutube.com",
	"*.gateway.dev",
	"cloud.goog",
	"translate.goog",
	"*.usercontent.goog",
	"cloudfunctions.net",
	"blogspot.ae",
	"blogspot.al",
	"blogspot.am",
	"blogspot.ba",
	"blogspot.be",
	"blogspot.bg",
	"blogspot.bj",
	"blogspot.ca",
	"blogspot.cf",
	"blogspot.ch",
	"blogspot.cl",
	"blogspot.co.at",
	"blogspot.co.id",
	"blogspot.co.il",
	"blogspot.co.ke",
	"blogspot.co.nz",
	"blogspot.co.uk",
	"blogspot.co.za",
	"blogspot.com",
	"blogspot.com.ar",
	"blogspot.com.au",
	"blogspot.com.br",
	"blogspot.com.by",
	"blogspot.com.co",
	"blogspot.com.cy",
	"blogspot.com.ee",
	"blogspot.com.eg",
	"blogspot.com.es",
	"blogspot.com.mt",
	"blogspot.com.ng",
	"blogspot.com.tr",
	"blogspot.com.uy",
	"blogspot.cv",
	"blogspot.cz",
	"blogspot.de",
	"blogspot.dk",
	"blogspot.fi",
	"blogspot.fr",
	"blogspot.gr",
	"blogspot.hk",
	"blogspot.hr",
	"blogspot.hu",
	"blogspot.ie",
	"blogspot.in",
	"blogspot.is",
	"blogspot.it",
	"blogspot.jp",
	"blogspot.kr",
	"blogspot.li",
	"blogspot.lt",
	"blogspot.lu",
	"blogspot.md",
	"blogspot.mk",
	"blogspot.mr",
	"blogspot.mx",
	"blogspot.my",
	"blogspot.nl",
	"blogspot.no",
	"blogspot.pe",
	"blogspot.pt",
	"blogspot.qa",
	"blogspot.re",
	"blogspot.ro",
	"blogspot.rs",
	"blogspot.ru",
	"blogspot.se",
	"blogspot.sg",
	"blogspot.si",
	"blogspot.sk",
	"blogspot.sn",
	"blogspot.td",
	"blogspot.tw",
	"blogspot.ug",
	"blogspot.vn",
	"goupile.fr",
	"gov.nl",
	"awsmppl.com",
	"gÃ¼nstigbestellen.de",
	"gÃ¼nstigliefern.de",
	"fin.ci",
	"free.hr",
	"caa.li",
	"ua.rs",
	"conf.se",
	"hs.zone",
	"hs.run",
	"hashbang.sh",
	"hasura.app",
	"hasura-app.io",
	"pages.it.hs-heilbronn.de",
	"hepforge.org",
	"herokuapp.com",
	"herokussl.com",
	"ravendb.cloud",
	"myravendb.com",
	"ravendb.community",
	"ravendb.me",
	"development.run",
	"ravendb.run",
	"homesklep.pl",
	"secaas.hk",
	"hoplix.shop",
	"orx.biz",
	"biz.gl",
	"col.ng",
	"firm.ng",
	"gen.ng",
	"ltd.ng",
	"ngo.ng",
	"edu.scot",
	"sch.so",
	"hostyhosting.io",
	"hÃ¤kkinen.fi",
	"*.moonscale.io",
	"moonscale.net",
	"iki.fi",
	"ibxos.it",
	"iliadboxos.it",
	"impertrixcdn.com",
	"impertrix.com",
	"smushcdn.com",
	"wphostedmail.com",
	"wpmucdn.com",
	"tempurl.host",
	"wpmudev.host",
	"dyn-berlin.de",
	"in-berlin.de",
	"in-brb.de",
	"in-butter.de",
	"in-dsl.de",
	"in-dsl.net",
	"in-dsl.org",
	"in-vpn.de",
	"in-vpn.net",
	"in-vpn.org",
	"biz.at",
	"info.at",
	"info.cx",
	"ac.leg.br",
	"al.leg.br",
	"am.leg.br",
	"ap.leg.br",
	"ba.leg.br",
	"ce.leg.br",
	"df.leg.br",
	"es.leg.br",
	"go.leg.br",
	"ma.leg.br",
	"mg.leg.br",
	"ms.leg.br",
	"mt.leg.br",
	"pa.leg.br",
	"pb.leg.br",
	"pe.leg.br",
	"pi.leg.br",
	"pr.leg.br",
	"rj.leg.br",
	"rn.leg.br",
	"ro.leg.br",
	"rr.leg.br",
	"rs.leg.br",
	"sc.leg.br",
	"se.leg.br",
	"sp.leg.br",
	"to.leg.br",
	"pixolino.com",
	"na4u.ru",
	"iopsys.se",
	"ipifony.net",
	"iservschule.de",
	"mein-iserv.de",
	"schulplattform.de",
	"schulserver.de",
	"test-iserv.de",
	"iserv.dev",
	"iobb.net",
	"mel.cloudlets.com.au",
	"cloud.interhostsolutions.be",
	"users.scale.virtualcloud.com.br",
	"mycloud.by",
	"alp1.ae.flow.ch",
	"appengine.flow.ch",
	"es-1.axarnet.cloud",
	"diadem.cloud",
	"vip.jelastic.cloud",
	"jele.cloud",
	"it1.eur.aruba.jenv-aruba.cloud",
	"it1.jenv-aruba.cloud",
	"keliweb.cloud",
	"cs.keliweb.cloud",
	"oxa.cloud",
	"tn.oxa.cloud",
	"uk.oxa.cloud",
	"primetel.cloud",
	"uk.primetel.cloud",
	"ca.reclaim.cloud",
	"uk.reclaim.cloud",
	"us.reclaim.cloud",
	"ch.trendhosting.cloud",
	"de.trendhosting.cloud",
	"jele.club",
	"amscompute.com",
	"clicketcloud.com",
	"dopaas.com",
	"hidora.com",
	"paas.hosted-by-previder.com",
	"rag-cloud.hosteur.com",
	"rag-cloud-ch.hosteur.com",
	"jcloud.ik-server.com",
	"jcloud-ver-jpc.ik-server.com",
	"demo.jelastic.com",
	"kilatiron.com",
	"paas.massivegrid.com",
	"jed.wafaicloud.com",
	"lon.wafaicloud.com",
	"ryd.wafaicloud.com",
	"j.scaleforce.com.cy",
	"jelastic.dogado.eu",
	"fi.cloudplatform.fi",
	"demo.datacenter.fi",
	"paas.datacenter.fi",
	"jele.host",
	"mircloud.host",
	"paas.beebyte.io",
	"sekd1.beebyteapp.io",
	"jele.io",
	"cloud-fr1.unispace.io",
	"jc.neen.it",
	"cloud.jelastic.open.tim.it",
	"jcloud.kz",
	"upaas.kazteleport.kz",
	"cloudjiffy.net",
	"fra1-de.cloudjiffy.net",
	"west1-us.cloudjiffy.net",
	"jls-sto1.elastx.net",
	"jls-sto2.elastx.net",
	"jls-sto3.elastx.net",
	"faststacks.net",
	"fr-1.paas.massivegrid.net",
	"lon-1.paas.massivegrid.net",
	"lon-2.paas.massivegrid.net",
	"ny-1.paas.massivegrid.net",
	"ny-2.paas.massivegrid.net",
	"sg-1.paas.massivegrid.net",
	"jelastic.saveincloud.net",
	"nordeste-idc.saveincloud.net",
	"j.scaleforce.net",
	"jelastic.tsukaeru.net",
	"sdscloud.pl",
	"unicloud.pl",
	"mircloud.ru",
	"jelastic.regruhosting.ru",
	"enscaled.sg",
	"jele.site",
	"jelastic.team",
	"orangecloud.tn",
	"j.layershift.co.uk",
	"phx.enscaled.us",
	"mircloud.us",
	"myjino.ru",
	"*.hosting.myjino.ru",
	"*.landing.myjino.ru",
	"*.spectrum.myjino.ru",
	"*.vps.myjino.ru",
	"jotelulu.cloud",
	"*.triton.zone",
	"*.cns.joyent.com",
	"js.org",
	"kaas.gg",
	"khplay.nl",
	"ktistory.com",
	"kapsi.fi",
	"keymachine.de",
	"kinghost.net",
	"uni5.net",
	"knightpoint.systems",
	"koobin.events",
	"oya.to",
	"kuleuven.cloud",
	"ezproxy.kuleuven.be",
	"co.krd",
	"edu.krd",
	"krellian.net",
	"webthings.io",
	"git-repos.de",
	"lcube-server.de",
	"svn-repos.de",
	"leadpages.co",
	"lpages.co",
	"lpusercontent.com",
	"lelux.site",
	"co.business",
	"co.education",
	"co.events",
	"co.financial",
	"co.network",
	"co.place",
	"co.technology",
	"app.lmpm.com",
	"linkyard.cloud",
	"linkyard-cloud.ch",
	"members.linode.com",
	"*.nodebalancer.linode.com",
	"*.linodeobjects.com",
	"ip.linodeusercontent.com",
	"we.bs",
	"*.user.localcert.dev",
	"localzone.xyz",
	"loginline.app",
	"loginline.dev",
	"loginline.io",
	"loginline.services",
	"loginline.site",
	"servers.run",
	"lohmus.me",
	"krasnik.pl",
	"leczna.pl",
	"lubartow.pl",
	"lublin.pl",
	"poniatowa.pl",
	"swidnik.pl",
	"glug.org.uk",
	"lug.org.uk",
	"lugs.org.uk",
	"barsy.bg",
	"barsy.co.uk",
	"barsyonline.co.uk",
	"barsycenter.com",
	"barsyonline.com",
	"barsy.club",
	"barsy.de",
	"barsy.eu",
	"barsy.in",
	"barsy.info",
	"barsy.io",
	"barsy.me",
	"barsy.menu",
	"barsy.mobi",
	"barsy.net",
	"barsy.online",
	"barsy.org",
	"barsy.pro",
	"barsy.pub",
	"barsy.ro",
	"barsy.shop",
	"barsy.site",
	"barsy.support",
	"barsy.uk",
	"*.magentosite.cloud",
	"mayfirst.info",
	"mayfirst.org",
	"hb.cldmail.ru",
	"cn.vu",
	"mazeplay.com",
	"mcpe.me",
	"mcdir.me",
	"mcdir.ru",
	"mcpre.ru",
	"vps.mcdir.ru",
	"mediatech.by",
	"mediatech.dev",
	"hra.health",
	"miniserver.com",
	"memset.net",
	"messerli.app",
	"*.cloud.metacentrum.cz",
	"custom.metacentrum.cz",
	"flt.cloud.muni.cz",
	"usr.cloud.muni.cz",
	"meteorapp.com",
	"eu.meteorapp.com",
	"co.pl",
	"*.azurecontainer.io",
	"azurewebsites.net",
	"azure-mobile.net",
	"cloudapp.net",
	"azurestaticapps.net",
	"1.azurestaticapps.net",
	"centralus.azurestaticapps.net",
	"eastasia.azurestaticapps.net",
	"eastus2.azurestaticapps.net",
	"westeurope.azurestaticapps.net",
	"westus2.azurestaticapps.net",
	"csx.cc",
	"mintere.site",
	"forte.id",
	"mozilla-iot.org",
	"bmoattachments.org",
	"net.ru",
	"org.ru",
	"pp.ru",
	"hostedpi.com",
	"customer.mythic-beasts.com",
	"caracal.mythic-beasts.com",
	"fentiger.mythic-beasts.com",
	"lynx.mythic-beasts.com",
	"ocelot.mythic-beasts.com",
	"oncilla.mythic-beasts.com",
	"onza.mythic-beasts.com",
	"sphinx.mythic-beasts.com",
	"vs.mythic-beasts.com",
	"x.mythic-beasts.com",
	"yali.mythic-beasts.com",
	"cust.retrosnub.co.uk",
	"ui.nabu.casa",
	"pony.club",
	"of.fashion",
	"in.london",
	"of.london",
	"from.marketing",
	"with.marketing",
	"for.men",
	"repair.men",
	"and.mom",
	"for.mom",
	"for.one",
	"under.one",
	"for.sale",
	"that.win",
	"from.work",
	"to.work",
	"cloud.nospamproxy.com",
	"netlify.app",
	"4u.com",
	"ngrok.io",
	"nh-serv.co.uk",
	"nfshost.com",
	"*.developer.app",
	"noop.app",
	"*.northflank.app",
	"*.build.run",
	"*.code.run",
	"*.database.run",
	"*.migration.run",
	"noticeable.news",
	"dnsking.ch",
	"mypi.co",
	"n4t.co",
	"001www.com",
	"ddnslive.com",
	"myiphost.com",
	"forumz.info",
	"16-b.it",
	"32-b.it",
	"64-b.it",
	"soundcast.me",
	"tcp4.me",
	"dnsup.net",
	"hicam.net",
	"now-dns.net",
	"ownip.net",
	"vpndns.net",
	"dynserv.org",
	"now-dns.org",
	"x443.pw",
	"now-dns.top",
	"ntdll.top",
	"freeddns.us",
	"crafting.xyz",
	"zapto.xyz",
	"nsupdate.info",
	"nerdpol.ovh",
	"blogsyte.com",
	"brasilia.me",
	"cable-modem.org",
	"ciscofreak.com",
	"collegefan.org",
	"couchpotatofries.org",
	"damnserver.com",
	"ddns.me",
	"ditchyourip.com",
	"dnsfor.me",
	"dnsiskinky.com",
	"dvrcam.info",
	"dynns.com",
	"eating-organic.net",
	"fantasyleague.cc",
	"geekgalaxy.com",
	"golffan.us",
	"health-carereform.com",
	"homesecuritymac.com",
	"homesecuritypc.com",
	"hopto.me",
	"ilovecollege.info",
	"loginto.me",
	"mlbfan.org",
	"mmafan.biz",
	"myactivedirectory.com",
	"mydissent.net",
	"myeffect.net",
	"mymediapc.net",
	"mypsx.net",
	"mysecuritycamera.com",
	"mysecuritycamera.net",
	"mysecuritycamera.org",
	"net-freaks.com",
	"nflfan.org",
	"nhlfan.net",
	"no-ip.ca",
	"no-ip.co.uk",
	"no-ip.net",
	"noip.us",
	"onthewifi.com",
	"pgafan.net",
	"point2this.com",
	"pointto.us",
	"privatizehealthinsurance.net",
	"quicksytes.com",
	"read-books.org",
	"securitytactics.com",
	"serveexchange.com",
	"servehumour.com",
	"servep2p.com",
	"servesarcasm.com",
	"stufftoread.com",
	"ufcfan.org",
	"unusualperson.com",
	"workisboring.com",
	"3utilities.com",
	"bounceme.net",
	"ddns.net",
	"ddnsking.com",
	"gotdns.ch",
	"hopto.org",
	"myftp.biz",
	"myftp.org",
	"myvnc.com",
	"no-ip.biz",
	"no-ip.info",
	"no-ip.org",
	"noip.me",
	"redirectme.net",
	"servebeer.com",
	"serveblog.net",
	"servecounterstrike.com",
	"serveftp.com",
	"servegame.com",
	"servehalflife.com",
	"servehttp.com",
	"serveirc.com",
	"serveminecraft.net",
	"servemp3.com",
	"servepics.com",
	"servequake.com",
	"sytes.net",
	"webhop.me",
	"zapto.org",
	"stage.nodeart.io",
	"pcloud.host",
	"nyc.mn",
	"static.observableusercontent.com",
	"cya.gg",
	"omg.lol",
	"cloudycluster.net",
	"omniwe.site",
	"service.one",
	"nid.io",
	"opensocial.site",
	"opencraft.hosting",
	"orsites.com",
	"operaunite.com",
	"tech.orange",
	"authgear-staging.com",
	"authgearapps.com",
	"skygearapp.com",
	"outsystemscloud.com",
	"*.webpaas.ovh.net",
	"*.hosting.ovh.net",
	"ownprovider.com",
	"own.pm",
	"*.owo.codes",
	"ox.rs",
	"oy.lc",
	"pgfog.com",
	"pagefrontapp.com",
	"pagexl.com",
	"*.paywhirl.com",
	"bar0.net",
	"bar1.net",
	"bar2.net",
	"rdv.to",
	"art.pl",
	"gliwice.pl",
	"krakow.pl",
	"poznan.pl",
	"wroc.pl",
	"zakopane.pl",
	"pantheonsite.io",
	"gotpantheon.com",
	"mypep.link",
	"perspecta.cloud",
	"lk3.ru",
	"on-web.fr",
	"bc.platform.sh",
	"ent.platform.sh",
	"eu.platform.sh",
	"us.platform.sh",
	"*.platformsh.site",
	"*.tst.site",
	"platter-app.com",
	"platter-app.dev",
	"platterp.us",
	"pdns.page",
	"plesk.page",
	"pleskns.com",
	"dyn53.io",
	"onporter.run",
	"co.bn",
	"postman-echo.com",
	"pstmn.io",
	"mock.pstmn.io",
	"httpbin.org",
	"prequalifyme.today",
	"xen.prgmr.com",
	"priv.at",
	"prvcy.page",
	"*.dweb.link",
	"protonet.io",
	"chirurgiens-dentistes-en-france.fr",
	"byen.site",
	"pubtls.org",
	"pythonanywhere.com",
	"eu.pythonanywhere.com",
	"qoto.io",
	"qualifioapp.com",
	"qbuser.com",
	"cloudsite.builders",
	"instances.spawn.cc",
	"instantcloud.cn",
	"ras.ru",
	"qa2.com",
	"qcx.io",
	"*.sys.qcx.io",
	"dev-myqnapcloud.com",
	"alpha-myqnapcloud.com",
	"myqnapcloud.com",
	"*.quipelements.com",
	"vapor.cloud",
	"vaporcloud.io",
	"rackmaze.com",
	"rackmaze.net",
	"g.vbrplsbx.io",
	"*.on-k3s.io",
	"*.on-rancher.cloud",
	"*.on-rio.io",
	"readthedocs.io",
	"rhcloud.com",
	"app.render.com",
	"onrender.com",
	"repl.co",
	"id.repl.co",
	"repl.run",
	"resindevice.io",
	"devices.resinstaging.io",
	"hzc.io",
	"wellbeingzone.eu",
	"wellbeingzone.co.uk",
	"adimo.co.uk",
	"itcouldbewor.se",
	"git-pages.rit.edu",
	"rocky.page",
	"Ð±Ð¸Ð·.ÑÑÑ",
	"ÐºÐ¾Ð¼.ÑÑÑ",
	"ÐºÑÑÐ¼.ÑÑÑ",
	"Ð¼Ð¸Ñ.ÑÑÑ",
	"Ð¼ÑÐº.ÑÑÑ",
	"Ð¾ÑÐ³.ÑÑÑ",
	"ÑÐ°Ð¼Ð°ÑÐ°.ÑÑÑ",
	"ÑÐ¾ÑÐ¸.ÑÑÑ",
	"ÑÐ¿Ð±.ÑÑÑ",
	"Ñ.ÑÑÑ",
	"*.builder.code.com",
	"*.dev-builder.code.com",
	"*.stg-builder.code.com",
	"sandcats.io",
	"logoip.de",
	"logoip.com",
	"fr-par-1.baremetal.scw.cloud",
	"fr-par-2.baremetal.scw.cloud",
	"nl-ams-1.baremetal.scw.cloud",
	"fnc.fr-par.scw.cloud",
	"functions.fnc.fr-par.scw.cloud",
	"k8s.fr-par.scw.cloud",
	"nodes.k8s.fr-par.scw.cloud",
	"s3.fr-par.scw.cloud",
	"s3-website.fr-par.scw.cloud",
	"whm.fr-par.scw.cloud",
	"priv.instances.scw.cloud",
	"pub.instances.scw.cloud",
	"k8s.scw.cloud",
	"k8s.nl-ams.scw.cloud",
	"nodes.k8s.nl-ams.scw.cloud",
	"s3.nl-ams.scw.cloud",
	"s3-website.nl-ams.scw.cloud",
	"whm.nl-ams.scw.cloud",
	"k8s.pl-waw.scw.cloud",
	"nodes.k8s.pl-waw.scw.cloud",
	"s3.pl-waw.scw.cloud",
	"s3-website.pl-waw.scw.cloud",
	"scalebook.scw.cloud",
	"smartlabeling.scw.cloud",
	"dedibox.fr",
	"schokokeks.net",
	"gov.scot",
	"service.gov.scot",
	"scrysec.com",
	"firewall-gateway.com",
	"firewall-gateway.de",
	"my-gateway.de",
	"my-router.de",
	"spdns.de",
	"spdns.eu",
	"firewall-gateway.net",
	"my-firewall.org",
	"myfirewall.org",
	"spdns.org",
	"seidat.net",
	"sellfy.store",
	"senseering.net",
	"minisite.ms",
	"magnet.page",
	"biz.ua",
	"co.ua",
	"pp.ua",
	"shiftcrypto.dev",
	"shiftcrypto.io",
	"shiftedit.io",
	"myshopblocks.com",
	"myshopify.com",
	"shopitsite.com",
	"shopware.store",
	"mo-siemens.io",
	"1kapp.com",
	"appchizi.com",
	"applinzi.com",
	"sinaapp.com",
	"vipsinaapp.com",
	"siteleaf.net",
	"bounty-full.com",
	"alpha.bounty-full.com",
	"beta.bounty-full.com",
	"small-web.org",
	"vp4.me",
	"try-snowplow.com",
	"srht.site",
	"stackhero-network.com",
	"musician.io",
	"novecore.site",
	"static.land",
	"dev.static.land",
	"sites.static.land",
	"storebase.store",
	"vps-host.net",
	"atl.jelastic.vps-host.net",
	"njs.jelastic.vps-host.net",
	"ric.jelastic.vps-host.net",
	"playstation-cloud.com",
	"apps.lair.io",
	"*.stolos.io",
	"spacekit.io",
	"customer.speedpartner.de",
	"myspreadshop.at",
	"myspreadshop.com.au",
	"myspreadshop.be",
	"myspreadshop.ca",
	"myspreadshop.ch",
	"myspreadshop.com",
	"myspreadshop.de",
	"myspreadshop.dk",
	"myspreadshop.es",
	"myspreadshop.fi",
	"myspreadshop.fr",
	"myspreadshop.ie",
	"myspreadshop.it",
	"myspreadshop.net",
	"myspreadshop.nl",
	"myspreadshop.no",
	"myspreadshop.pl",
	"myspreadshop.se",
	"myspreadshop.co.uk",
	"api.stdlib.com",
	"storj.farm",
	"utwente.io",
	"soc.srcf.net",
	"user.srcf.net",
	"temp-dns.com",
	"supabase.co",
	"supabase.in",
	"supabase.net",
	"su.paba.se",
	"*.s5y.io",
	"*.sensiosite.cloud",
	"syncloud.it",
	"dscloud.biz",
	"direct.quickconnect.cn",
	"dsmynas.com",
	"familyds.com",
	"diskstation.me",
	"dscloud.me",
	"i234.me",
	"myds.me",
	"synology.me",
	"dscloud.mobi",
	"dsmynas.net",
	"familyds.net",
	"dsmynas.org",
	"familyds.org",
	"vpnplus.to",
	"direct.quickconnect.to",
	"tabitorder.co.il",
	"taifun-dns.de",
	"beta.tailscale.net",
	"ts.net",
	"gda.pl",
	"gdansk.pl",
	"gdynia.pl",
	"med.pl",
	"sopot.pl",
	"site.tb-hosting.com",
	"edugit.io",
	"s3.teckids.org",
	"telebit.app",
	"telebit.io",
	"*.telebit.xyz",
	"gwiddle.co.uk",
	"*.firenet.ch",
	"*.svc.firenet.ch",
	"reservd.com",
	"thingdustdata.com",
	"cust.dev.thingdust.io",
	"cust.disrec.thingdust.io",
	"cust.prod.thingdust.io",
	"cust.testing.thingdust.io",
	"reservd.dev.thingdust.io",
	"reservd.disrec.thingdust.io",
	"reservd.testing.thingdust.io",
	"tickets.io",
	"arvo.network",
	"azimuth.network",
	"tlon.network",
	"torproject.net",
	"pages.torproject.net",
	"bloxcms.com",
	"townnews-staging.com",
	"tbits.me",
	"12hp.at",
	"2ix.at",
	"4lima.at",
	"lima-city.at",
	"12hp.ch",
	"2ix.ch",
	"4lima.ch",
	"lima-city.ch",
	"trafficplex.cloud",
	"de.cool",
	"12hp.de",
	"2ix.de",
	"4lima.de",
	"lima-city.de",
	"1337.pictures",
	"clan.rip",
	"lima-city.rocks",
	"webspace.rocks",
	"lima.zone",
	"*.transurl.be",
	"*.transurl.eu",
	"*.transurl.nl",
	"site.transip.me",
	"tuxfamily.org",
	"dd-dns.de",
	"diskstation.eu",
	"diskstation.org",
	"dray-dns.de",
	"draydns.de",
	"dyn-vpn.de",
	"dynvpn.de",
	"mein-vigor.de",
	"my-vigor.de",
	"my-wan.de",
	"syno-ds.de",
	"synology-diskstation.de",
	"synology-ds.de",
	"typedream.app",
	"pro.typeform.com",
	"uber.space",
	"*.uberspace.de",
	"hk.com",
	"hk.org",
	"ltd.hk",
	"inc.hk",
	"name.pm",
	"sch.tf",
	"biz.wf",
	"sch.wf",
	"org.yt",
	"virtualuser.de",
	"virtual-user.de",
	"upli.io",
	"urown.cloud",
	"dnsupdate.info",
	"lib.de.us",
	"2038.io",
	"vercel.app",
	"vercel.dev",
	"now.sh",
	"router.management",
	"v-info.info",
	"voorloper.cloud",
	"neko.am",
	"nyaa.am",
	"be.ax",
	"cat.ax",
	"es.ax",
	"eu.ax",
	"gg.ax",
	"mc.ax",
	"us.ax",
	"xy.ax",
	"nl.ci",
	"xx.gl",
	"app.gp",
	"blog.gt",
	"de.gt",
	"to.gt",
	"be.gy",
	"cc.hn",
	"blog.kg",
	"io.kg",
	"jp.kg",
	"tv.kg",
	"uk.kg",
	"us.kg",
	"de.ls",
	"at.md",
	"de.md",
	"jp.md",
	"to.md",
	"indie.porn",
	"vxl.sh",
	"ch.tc",
	"me.tc",
	"we.tc",
	"nyan.to",
	"at.vg",
	"blog.vu",
	"dev.vu",
	"me.vu",
	"v.ua",
	"*.vultrobjects.com",
	"wafflecell.com",
	"*.webhare.dev",
	"reserve-online.net",
	"reserve-online.com",
	"bookonline.app",
	"hotelwithflight.com",
	"wedeploy.io",
	"wedeploy.me",
	"wedeploy.sh",
	"remotewd.com",
	"pages.wiardweb.com",
	"wmflabs.org",
	"toolforge.org",
	"wmcloud.org",
	"panel.gg",
	"daemon.panel.gg",
	"messwithdns.com",
	"woltlab-demo.com",
	"myforum.community",
	"community-pro.de",
	"diskussionsbereich.de",
	"community-pro.net",
	"meinforum.net",
	"affinitylottery.org.uk",
	"raffleentry.org.uk",
	"weeklylottery.org.uk",
	"wpenginepowered.com",
	"js.wpenginepowered.com",
	"wixsite.com",
	"editorx.io",
	"half.host",
	"xnbay.com",
	"u2.xnbay.com",
	"u2-local.xnbay.com",
	"cistron.nl",
	"demon.nl",
	"xs4all.space",
	"yandexcloud.net",
	"storage.yandexcloud.net",
	"website.yandexcloud.net",
	"official.academy",
	"yolasite.com",
	"ybo.faith",
	"yombo.me",
	"homelink.one",
	"ybo.party",
	"ybo.review",
	"ybo.science",
	"ybo.trade",
	"ynh.fr",
	"nohost.me",
	"noho.st",
	"za.net",
	"za.org",
	"bss.design",
	"basicserver.io",
	"virtualserver.io",
	"enterprisecloud.nu"
];

var rules$1 = /*#__PURE__*/Object.freeze({
  __proto__: null,
  'default': rules
});

var require$$0 = getCjsExportFromNamespace(rules$1);

var psl = createCommonjsModule(function (module, exports) {

  var internals = {}; //
  // Read rules from file.
  //

  internals.rules = require$$0.map(function (rule) {
    return {
      rule: rule,
      suffix: rule.replace(/^(\*\.|\!)/, ''),
      punySuffix: -1,
      wildcard: rule.charAt(0) === '*',
      exception: rule.charAt(0) === '!'
    };
  }); //
  // Check is given string ends with `suffix`.
  //

  internals.endsWith = function (str, suffix) {
    return str.indexOf(suffix, str.length - suffix.length) !== -1;
  }; //
  // Find rule for a given domain.
  //


  internals.findRule = function (domain) {
    var punyDomain = punycode.toASCII(domain);
    return internals.rules.reduce(function (memo, rule) {
      if (rule.punySuffix === -1) {
        rule.punySuffix = punycode.toASCII(rule.suffix);
      }

      if (!internals.endsWith(punyDomain, '.' + rule.punySuffix) && punyDomain !== rule.punySuffix) {
        return memo;
      } // This has been commented out as it never seems to run. This is because
      // sub tlds always appear after their parents and we never find a shorter
      // match.
      //if (memo) {
      //  var memoSuffix = Punycode.toASCII(memo.suffix);
      //  if (memoSuffix.length >= punySuffix.length) {
      //    return memo;
      //  }
      //}


      return rule;
    }, null);
  }; //
  // Error codes and messages.
  //


  exports.errorCodes = {
    DOMAIN_TOO_SHORT: 'Domain name too short.',
    DOMAIN_TOO_LONG: 'Domain name too long. It should be no more than 255 chars.',
    LABEL_STARTS_WITH_DASH: 'Domain name label can not start with a dash.',
    LABEL_ENDS_WITH_DASH: 'Domain name label can not end with a dash.',
    LABEL_TOO_LONG: 'Domain name label should be at most 63 chars long.',
    LABEL_TOO_SHORT: 'Domain name label should be at least 1 character long.',
    LABEL_INVALID_CHARS: 'Domain name label can only contain alphanumeric characters or dashes.'
  }; //
  // Validate domain name and throw if not valid.
  //
  // From wikipedia:
  //
  // Hostnames are composed of series of labels concatenated with dots, as are all
  // domain names. Each label must be between 1 and 63 characters long, and the
  // entire hostname (including the delimiting dots) has a maximum of 255 chars.
  //
  // Allowed chars:
  //
  // * `a-z`
  // * `0-9`
  // * `-` but not as a starting or ending character
  // * `.` as a separator for the textual portions of a domain name
  //
  // * http://en.wikipedia.org/wiki/Domain_name
  // * http://en.wikipedia.org/wiki/Hostname
  //

  internals.validate = function (input) {
    // Before we can validate we need to take care of IDNs with unicode chars.
    var ascii = punycode.toASCII(input);

    if (ascii.length < 1) {
      return 'DOMAIN_TOO_SHORT';
    }

    if (ascii.length > 255) {
      return 'DOMAIN_TOO_LONG';
    } // Check each part's length and allowed chars.


    var labels = ascii.split('.');
    var label;

    for (var i = 0; i < labels.length; ++i) {
      label = labels[i];

      if (!label.length) {
        return 'LABEL_TOO_SHORT';
      }

      if (label.length > 63) {
        return 'LABEL_TOO_LONG';
      }

      if (label.charAt(0) === '-') {
        return 'LABEL_STARTS_WITH_DASH';
      }

      if (label.charAt(label.length - 1) === '-') {
        return 'LABEL_ENDS_WITH_DASH';
      }

      if (!/^[a-z0-9\-]+$/.test(label)) {
        return 'LABEL_INVALID_CHARS';
      }
    }
  }; //
  // Public API
  //
  //
  // Parse domain.
  //


  exports.parse = function (input) {
    if (typeof input !== 'string') {
      throw new TypeError('Domain name must be a string.');
    } // Force domain to lowercase.


    var domain = input.slice(0).toLowerCase(); // Handle FQDN.
    // TODO: Simply remove trailing dot?

    if (domain.charAt(domain.length - 1) === '.') {
      domain = domain.slice(0, domain.length - 1);
    } // Validate and sanitise input.


    var error = internals.validate(domain);

    if (error) {
      return {
        input: input,
        error: {
          message: exports.errorCodes[error],
          code: error
        }
      };
    }

    var parsed = {
      input: input,
      tld: null,
      sld: null,
      domain: null,
      subdomain: null,
      listed: false
    };
    var domainParts = domain.split('.'); // Non-Internet TLD

    if (domainParts[domainParts.length - 1] === 'local') {
      return parsed;
    }

    var handlePunycode = function () {
      if (!/xn--/.test(domain)) {
        return parsed;
      }

      if (parsed.domain) {
        parsed.domain = punycode.toASCII(parsed.domain);
      }

      if (parsed.subdomain) {
        parsed.subdomain = punycode.toASCII(parsed.subdomain);
      }

      return parsed;
    };

    var rule = internals.findRule(domain); // Unlisted tld.

    if (!rule) {
      if (domainParts.length < 2) {
        return parsed;
      }

      parsed.tld = domainParts.pop();
      parsed.sld = domainParts.pop();
      parsed.domain = [parsed.sld, parsed.tld].join('.');

      if (domainParts.length) {
        parsed.subdomain = domainParts.pop();
      }

      return handlePunycode();
    } // At this point we know the public suffix is listed.


    parsed.listed = true;
    var tldParts = rule.suffix.split('.');
    var privateParts = domainParts.slice(0, domainParts.length - tldParts.length);

    if (rule.exception) {
      privateParts.push(tldParts.shift());
    }

    parsed.tld = tldParts.join('.');

    if (!privateParts.length) {
      return handlePunycode();
    }

    if (rule.wildcard) {
      tldParts.unshift(privateParts.pop());
      parsed.tld = tldParts.join('.');
    }

    if (!privateParts.length) {
      return handlePunycode();
    }

    parsed.sld = privateParts.pop();
    parsed.domain = [parsed.sld, parsed.tld].join('.');

    if (privateParts.length) {
      parsed.subdomain = privateParts.join('.');
    }

    return handlePunycode();
  }; //
  // Get domain.
  //


  exports.get = function (domain) {
    if (!domain) {
      return null;
    }

    return exports.parse(domain).domain || null;
  }; //
  // Check whether domain belongs to a known public suffix.
  //


  exports.isValid = function (domain) {
    var parsed = exports.parse(domain);
    return Boolean(parsed.domain && parsed.listed);
  };
});
var psl_1 = psl.errorCodes;
var psl_2 = psl.parse;
var psl_3 = psl.get;
var psl_4 = psl.isValid;

/* eslint-disable import/prefer-default-export */

/**
 * @param {string} host
 * @returns {import("../../target-decisioning-engine/types/DecisioningContext").DomainContext}
 */

function parseDomainPsl(host) {
  const result = {};

  if (!psl.isValid(host)) {
    result.subdomain = "";
    result.domain = host;
    result.topLevelDomain = "";
    return result;
  }

  const parseResult = psl.parse(host);

  if (parseResult.subdomain) {
    result.subdomain = parseResult.subdomain.startsWith("www") ? parseResult.subdomain.substring(4) : parseResult.subdomain;
  } else {
    result.subdomain = "";
  }

  result.domain = parseResult.domain;
  result.topLevelDomain = parseResult.tld;
  return result;
}

// eslint-disable-next-line es/no-typed-arrays -- safe
var arrayBufferBasicDetection = typeof ArrayBuffer != 'undefined' && typeof DataView != 'undefined';

var defineProperty$8 = objectDefineProperty$1.f;







var enforceInternalState = internalState$1.enforce;
var getInternalState$3 = internalState$1.get;
var Int8Array = global_1$1.Int8Array;
var Int8ArrayPrototype = Int8Array && Int8Array.prototype;
var Uint8ClampedArray$1 = global_1$1.Uint8ClampedArray;
var Uint8ClampedArrayPrototype = Uint8ClampedArray$1 && Uint8ClampedArray$1.prototype;
var TypedArray = Int8Array && objectGetPrototypeOf$1(Int8Array);
var TypedArrayPrototype = Int8ArrayPrototype && objectGetPrototypeOf$1(Int8ArrayPrototype);
var ObjectPrototype$2 = Object.prototype;
var TypeError$6 = global_1$1.TypeError;

var TO_STRING_TAG$6 = wellKnownSymbol$1('toStringTag');
var TYPED_ARRAY_TAG = uid$1('TYPED_ARRAY_TAG');
var TYPED_ARRAY_CONSTRUCTOR = 'TypedArrayConstructor';
// Fixing native typed arrays in Opera Presto crashes the browser, see #595
var NATIVE_ARRAY_BUFFER_VIEWS = arrayBufferBasicDetection && !!objectSetPrototypeOf$1 && classof$1(global_1$1.opera) !== 'Opera';
var TYPED_ARRAY_TAG_REQUIRED = false;
var NAME, Constructor, Prototype;

var TypedArrayConstructorsList = {
  Int8Array: 1,
  Uint8Array: 1,
  Uint8ClampedArray: 1,
  Int16Array: 2,
  Uint16Array: 2,
  Int32Array: 4,
  Uint32Array: 4,
  Float32Array: 4,
  Float64Array: 8
};

var BigIntArrayConstructorsList = {
  BigInt64Array: 8,
  BigUint64Array: 8
};

var isView = function isView(it) {
  if (!isObject$2(it)) return false;
  var klass = classof$1(it);
  return klass === 'DataView'
    || hasOwnProperty_1$1(TypedArrayConstructorsList, klass)
    || hasOwnProperty_1$1(BigIntArrayConstructorsList, klass);
};

var getTypedArrayConstructor = function (it) {
  var proto = objectGetPrototypeOf$1(it);
  if (!isObject$2(proto)) return;
  var state = getInternalState$3(proto);
  return (state && hasOwnProperty_1$1(state, TYPED_ARRAY_CONSTRUCTOR)) ? state[TYPED_ARRAY_CONSTRUCTOR] : getTypedArrayConstructor(proto);
};

var isTypedArray = function (it) {
  if (!isObject$2(it)) return false;
  var klass = classof$1(it);
  return hasOwnProperty_1$1(TypedArrayConstructorsList, klass)
    || hasOwnProperty_1$1(BigIntArrayConstructorsList, klass);
};

var aTypedArray = function (it) {
  if (isTypedArray(it)) return it;
  throw TypeError$6('Target is not a typed array');
};

var aTypedArrayConstructor = function (C) {
  if (isCallable$1(C) && (!objectSetPrototypeOf$1 || objectIsPrototypeOf$1(TypedArray, C))) return C;
  throw TypeError$6(tryToString$1(C) + ' is not a typed array constructor');
};

var exportTypedArrayMethod = function (KEY, property, forced, options) {
  if (!descriptors$1) return;
  if (forced) for (var ARRAY in TypedArrayConstructorsList) {
    var TypedArrayConstructor = global_1$1[ARRAY];
    if (TypedArrayConstructor && hasOwnProperty_1$1(TypedArrayConstructor.prototype, KEY)) try {
      delete TypedArrayConstructor.prototype[KEY];
    } catch (error) {
      // old WebKit bug - some methods are non-configurable
      try {
        TypedArrayConstructor.prototype[KEY] = property;
      } catch (error2) { /* empty */ }
    }
  }
  if (!TypedArrayPrototype[KEY] || forced) {
    defineBuiltIn$1(TypedArrayPrototype, KEY, forced ? property
      : NATIVE_ARRAY_BUFFER_VIEWS && Int8ArrayPrototype[KEY] || property, options);
  }
};

var exportTypedArrayStaticMethod = function (KEY, property, forced) {
  var ARRAY, TypedArrayConstructor;
  if (!descriptors$1) return;
  if (objectSetPrototypeOf$1) {
    if (forced) for (ARRAY in TypedArrayConstructorsList) {
      TypedArrayConstructor = global_1$1[ARRAY];
      if (TypedArrayConstructor && hasOwnProperty_1$1(TypedArrayConstructor, KEY)) try {
        delete TypedArrayConstructor[KEY];
      } catch (error) { /* empty */ }
    }
    if (!TypedArray[KEY] || forced) {
      // V8 ~ Chrome 49-50 `%TypedArray%` methods are non-writable non-configurable
      try {
        return defineBuiltIn$1(TypedArray, KEY, forced ? property : NATIVE_ARRAY_BUFFER_VIEWS && TypedArray[KEY] || property);
      } catch (error) { /* empty */ }
    } else return;
  }
  for (ARRAY in TypedArrayConstructorsList) {
    TypedArrayConstructor = global_1$1[ARRAY];
    if (TypedArrayConstructor && (!TypedArrayConstructor[KEY] || forced)) {
      defineBuiltIn$1(TypedArrayConstructor, KEY, property);
    }
  }
};

for (NAME in TypedArrayConstructorsList) {
  Constructor = global_1$1[NAME];
  Prototype = Constructor && Constructor.prototype;
  if (Prototype) enforceInternalState(Prototype)[TYPED_ARRAY_CONSTRUCTOR] = Constructor;
  else NATIVE_ARRAY_BUFFER_VIEWS = false;
}

for (NAME in BigIntArrayConstructorsList) {
  Constructor = global_1$1[NAME];
  Prototype = Constructor && Constructor.prototype;
  if (Prototype) enforceInternalState(Prototype)[TYPED_ARRAY_CONSTRUCTOR] = Constructor;
}

// WebKit bug - typed arrays constructors prototype is Object.prototype
if (!NATIVE_ARRAY_BUFFER_VIEWS || !isCallable$1(TypedArray) || TypedArray === Function.prototype) {
  // eslint-disable-next-line no-shadow -- safe
  TypedArray = function TypedArray() {
    throw TypeError$6('Incorrect invocation');
  };
  if (NATIVE_ARRAY_BUFFER_VIEWS) for (NAME in TypedArrayConstructorsList) {
    if (global_1$1[NAME]) objectSetPrototypeOf$1(global_1$1[NAME], TypedArray);
  }
}

if (!NATIVE_ARRAY_BUFFER_VIEWS || !TypedArrayPrototype || TypedArrayPrototype === ObjectPrototype$2) {
  TypedArrayPrototype = TypedArray.prototype;
  if (NATIVE_ARRAY_BUFFER_VIEWS) for (NAME in TypedArrayConstructorsList) {
    if (global_1$1[NAME]) objectSetPrototypeOf$1(global_1$1[NAME].prototype, TypedArrayPrototype);
  }
}

// WebKit bug - one more object in Uint8ClampedArray prototype chain
if (NATIVE_ARRAY_BUFFER_VIEWS && objectGetPrototypeOf$1(Uint8ClampedArrayPrototype) !== TypedArrayPrototype) {
  objectSetPrototypeOf$1(Uint8ClampedArrayPrototype, TypedArrayPrototype);
}

if (descriptors$1 && !hasOwnProperty_1$1(TypedArrayPrototype, TO_STRING_TAG$6)) {
  TYPED_ARRAY_TAG_REQUIRED = true;
  defineProperty$8(TypedArrayPrototype, TO_STRING_TAG$6, { get: function () {
    return isObject$2(this) ? this[TYPED_ARRAY_TAG] : undefined;
  } });
  for (NAME in TypedArrayConstructorsList) if (global_1$1[NAME]) {
    createNonEnumerableProperty$1(global_1$1[NAME], TYPED_ARRAY_TAG, NAME);
  }
}

var arrayBufferViewCore = {
  NATIVE_ARRAY_BUFFER_VIEWS: NATIVE_ARRAY_BUFFER_VIEWS,
  TYPED_ARRAY_TAG: TYPED_ARRAY_TAG_REQUIRED && TYPED_ARRAY_TAG,
  aTypedArray: aTypedArray,
  aTypedArrayConstructor: aTypedArrayConstructor,
  exportTypedArrayMethod: exportTypedArrayMethod,
  exportTypedArrayStaticMethod: exportTypedArrayStaticMethod,
  getTypedArrayConstructor: getTypedArrayConstructor,
  isView: isView,
  isTypedArray: isTypedArray,
  TypedArray: TypedArray,
  TypedArrayPrototype: TypedArrayPrototype
};

var $RangeError = RangeError;

var toPositiveInteger = function (it) {
  var result = toIntegerOrInfinity$1(it);
  if (result < 0) throw $RangeError("The argument can't be less than 0");
  return result;
};

var $RangeError$1 = RangeError;

var toOffset = function (it, BYTES) {
  var offset = toPositiveInteger(it);
  if (offset % BYTES) throw $RangeError$1('Wrong offset');
  return offset;
};

var RangeError$1 = global_1$1.RangeError;
var Int8Array$1 = global_1$1.Int8Array;
var Int8ArrayPrototype$1 = Int8Array$1 && Int8Array$1.prototype;
var $set = Int8ArrayPrototype$1 && Int8ArrayPrototype$1.set;
var aTypedArray$1 = arrayBufferViewCore.aTypedArray;
var exportTypedArrayMethod$1 = arrayBufferViewCore.exportTypedArrayMethod;

var WORKS_WITH_OBJECTS_AND_GEERIC_ON_TYPED_ARRAYS = !fails$1(function () {
  // eslint-disable-next-line es/no-typed-arrays -- required for testing
  var array = new Uint8ClampedArray(2);
  functionCall$1($set, array, { length: 1, 0: 3 }, 1);
  return array[1] !== 3;
});

// https://bugs.chromium.org/p/v8/issues/detail?id=11294 and other
var TO_OBJECT_BUG = WORKS_WITH_OBJECTS_AND_GEERIC_ON_TYPED_ARRAYS && arrayBufferViewCore.NATIVE_ARRAY_BUFFER_VIEWS && fails$1(function () {
  var array = new Int8Array$1(2);
  array.set(1);
  array.set('2', 1);
  return array[0] !== 0 || array[1] !== 2;
});

// `%TypedArray%.prototype.set` method
// https://tc39.es/ecma262/#sec-%typedarray%.prototype.set
exportTypedArrayMethod$1('set', function set(arrayLike /* , offset */) {
  aTypedArray$1(this);
  var offset = toOffset(arguments.length > 1 ? arguments[1] : undefined, 1);
  var src = toObject$2(arrayLike);
  if (WORKS_WITH_OBJECTS_AND_GEERIC_ON_TYPED_ARRAYS) return functionCall$1($set, this, src, offset);
  var length = this.length;
  var len = lengthOfArrayLike$1(src);
  var index = 0;
  if (len + offset > length) throw RangeError$1('Wrong length');
  while (index < len) this[offset + index] = src[index++];
}, !WORKS_WITH_OBJECTS_AND_GEERIC_ON_TYPED_ARRAYS || TO_OBJECT_BUG);

var createProperty$1 = function (object, key, value) {
  var propertyKey = toPropertyKey$1(key);
  if (propertyKey in object) objectDefineProperty$1.f(object, propertyKey, createPropertyDescriptor$1(0, value));
  else object[propertyKey] = value;
};

var $Array$1 = Array;
var max$4 = Math.max;

var arraySliceSimple$1 = function (O, start, end) {
  var length = lengthOfArrayLike$1(O);
  var k = toAbsoluteIndex$1(start, length);
  var fin = toAbsoluteIndex$1(end === undefined ? length : end, length);
  var result = $Array$1(max$4(fin - k, 0));
  for (var n = 0; k < fin; k++, n++) createProperty$1(result, n, O[k]);
  result.length = n;
  return result;
};

var floor$4 = Math.floor;

var mergeSort$1 = function (array, comparefn) {
  var length = array.length;
  var middle = floor$4(length / 2);
  return length < 8 ? insertionSort$1(array, comparefn) : merge$1(
    array,
    mergeSort$1(arraySliceSimple$1(array, 0, middle), comparefn),
    mergeSort$1(arraySliceSimple$1(array, middle), comparefn),
    comparefn
  );
};

var insertionSort$1 = function (array, comparefn) {
  var length = array.length;
  var i = 1;
  var element, j;

  while (i < length) {
    j = i;
    element = array[i];
    while (j && comparefn(array[j - 1], element) > 0) {
      array[j] = array[--j];
    }
    if (j !== i++) array[j] = element;
  } return array;
};

var merge$1 = function (array, left, right, comparefn) {
  var llength = left.length;
  var rlength = right.length;
  var lindex = 0;
  var rindex = 0;

  while (lindex < llength || rindex < rlength) {
    array[lindex + rindex] = (lindex < llength && rindex < rlength)
      ? comparefn(left[lindex], right[rindex]) <= 0 ? left[lindex++] : right[rindex++]
      : lindex < llength ? left[lindex++] : right[rindex++];
  } return array;
};

var arraySort$1 = mergeSort$1;

var firefox = engineUserAgent$1.match(/firefox\/(\d+)/i);

var engineFfVersion = !!firefox && +firefox[1];

var engineIsIeOrEdge = /MSIE|Trident/.test(engineUserAgent$1);

var webkit = engineUserAgent$1.match(/AppleWebKit\/(\d+)\./);

var engineWebkitVersion = !!webkit && +webkit[1];

var aTypedArray$2 = arrayBufferViewCore.aTypedArray;
var exportTypedArrayMethod$2 = arrayBufferViewCore.exportTypedArrayMethod;
var Uint16Array = global_1$1.Uint16Array;
var nativeSort = Uint16Array && functionUncurryThis$1(Uint16Array.prototype.sort);

// WebKit
var ACCEPT_INCORRECT_ARGUMENTS = !!nativeSort && !(fails$1(function () {
  nativeSort(new Uint16Array(2), null);
}) && fails$1(function () {
  nativeSort(new Uint16Array(2), {});
}));

var STABLE_SORT = !!nativeSort && !fails$1(function () {
  // feature detection can be too slow, so check engines versions
  if (engineV8Version$1) return engineV8Version$1 < 74;
  if (engineFfVersion) return engineFfVersion < 67;
  if (engineIsIeOrEdge) return true;
  if (engineWebkitVersion) return engineWebkitVersion < 602;

  var array = new Uint16Array(516);
  var expected = Array(516);
  var index, mod;

  for (index = 0; index < 516; index++) {
    mod = index % 4;
    array[index] = 515 - index;
    expected[index] = index - 2 * mod + 3;
  }

  nativeSort(array, function (a, b) {
    return (a / 4 | 0) - (b / 4 | 0);
  });

  for (index = 0; index < 516; index++) {
    if (array[index] !== expected[index]) return true;
  }
});

var getSortCompare = function (comparefn) {
  return function (x, y) {
    if (comparefn !== undefined) return +comparefn(x, y) || 0;
    // eslint-disable-next-line no-self-compare -- NaN check
    if (y !== y) return -1;
    // eslint-disable-next-line no-self-compare -- NaN check
    if (x !== x) return 1;
    if (x === 0 && y === 0) return 1 / x > 0 && 1 / y < 0 ? 1 : -1;
    return x > y;
  };
};

// `%TypedArray%.prototype.sort` method
// https://tc39.es/ecma262/#sec-%typedarray%.prototype.sort
exportTypedArrayMethod$2('sort', function sort(comparefn) {
  if (comparefn !== undefined) aCallable$1(comparefn);
  if (STABLE_SORT) return nativeSort(this, comparefn);

  return arraySort$1(aTypedArray$2(this), getSortCompare(comparefn));
}, !STABLE_SORT || ACCEPT_INCORRECT_ARGUMENTS);

const BUFFER = new Uint8Array(256);
let BUFFER_PTR = BUFFER.length;
function rng() {
  if (BUFFER_PTR > BUFFER.length - 16) {
    crypto.randomFillSync(BUFFER);
    BUFFER_PTR = 0;
  }
  /* eslint-disable no-return-assign */


  return BUFFER.slice(BUFFER_PTR, BUFFER_PTR += 16);
}

function createByteToHex() {
  const result = [];

  for (let i = 0; i < 256; i += 1) {
    result.push((i + 0x100).toString(16).substr(1));
  }

  return result;
}

const BYTE_TO_HEX = createByteToHex();
function stringify(arr) {
  const result = [];

  for (let i = 0; i < 16; i += 1) {
    result.push(BYTE_TO_HEX[arr[i]]);
  }

  return join$1("", result).toLowerCase();
}

/* eslint-disable no-bitwise */

function v4(rng) {
  const buffer = rng();
  buffer[6] = buffer[6] & 0x0f | 0x40;
  buffer[8] = buffer[8] & 0x3f | 0x80;
  return stringify(buffer);
}
/* eslint-enable no-bitwise */

function uuid() {
  return v4(rng);
}

var charAt$5 = stringMultibyte.charAt;





var STRING_ITERATOR = 'String Iterator';
var setInternalState$5 = internalState$1.set;
var getInternalState$4 = internalState$1.getterFor(STRING_ITERATOR);

// `String.prototype[@@iterator]` method
// https://tc39.es/ecma262/#sec-string.prototype-@@iterator
iteratorDefine$1(String, 'String', function (iterated) {
  setInternalState$5(this, {
    type: STRING_ITERATOR,
    string: toString_1$1(iterated),
    index: 0
  });
// `%StringIteratorPrototype%.next` method
// https://tc39.es/ecma262/#sec-%stringiteratorprototype%.next
}, function next() {
  var state = getInternalState$4(this);
  var string = state.string;
  var index = state.index;
  var point;
  if (index >= string.length) return createIterResultObject$1(undefined, true);
  point = charAt$5(string, index);
  state.index += point.length;
  return createIterResultObject$1(point, false);
});

var ITERATOR$c = wellKnownSymbol$1('iterator');

var urlConstructorDetection$1 = !fails$1(function () {
  // eslint-disable-next-line unicorn/relative-url-style -- required for testing
  var url = new URL('b?a=1&b=2&c=3', 'http://a');
  var searchParams = url.searchParams;
  var result = '';
  url.pathname = 'c%20d';
  searchParams.forEach(function (value, key) {
    searchParams['delete']('b');
    result += key + value;
  });
  return (isPure$1 && !url.toJSON)
    || !searchParams.sort
    || url.href !== 'http://a/c%20d?a=1&c=3'
    || searchParams.get('c') !== '3'
    || String(new URLSearchParams('?a=1')) !== 'a=1'
    || !searchParams[ITERATOR$c]
    // throws in Edge
    || new URL('https://a@b').username !== 'a'
    || new URLSearchParams(new URLSearchParams('a=b')).get('a') !== 'b'
    // not punycoded in Edge
    || new URL('http://ÑÐµÑÑ').host !== 'xn--e1aybc'
    // not escaped in Chrome 62-
    || new URL('http://a#Ð±').hash !== '#%D0%B1'
    // fails in Chrome 66-
    || result !== 'a1c3'
    // throws in Safari
    || new URL('http://x', undefined).host !== 'x';
});

var defineBuiltInAccessor = function (target, name, descriptor) {
  if (descriptor.get) makeBuiltIn_1$1(descriptor.get, name, { getter: true });
  if (descriptor.set) makeBuiltIn_1$1(descriptor.set, name, { setter: true });
  return objectDefineProperty$1.f(target, name, descriptor);
};

// eslint-disable-next-line es/no-object-assign -- safe
var $assign = Object.assign;
// eslint-disable-next-line es/no-object-defineproperty -- required for testing
var defineProperty$9 = Object.defineProperty;
var concat$3 = functionUncurryThis$1([].concat);

// `Object.assign` method
// https://tc39.es/ecma262/#sec-object.assign
var objectAssign$1 = !$assign || fails$1(function () {
  // should have correct order of operations (Edge bug)
  if (descriptors$1 && $assign({ b: 1 }, $assign(defineProperty$9({}, 'a', {
    enumerable: true,
    get: function () {
      defineProperty$9(this, 'b', {
        value: 3,
        enumerable: false
      });
    }
  }), { b: 2 })).b !== 1) return true;
  // should work with symbols and should have deterministic property order (V8 bug)
  var A = {};
  var B = {};
  // eslint-disable-next-line es/no-symbol -- safe
  var symbol = Symbol();
  var alphabet = 'abcdefghijklmnopqrst';
  A[symbol] = 7;
  alphabet.split('').forEach(function (chr) { B[chr] = chr; });
  return $assign({}, A)[symbol] != 7 || objectKeys$1($assign({}, B)).join('') != alphabet;
}) ? function assign(target, source) { // eslint-disable-line no-unused-vars -- required for `.length`
  var T = toObject$2(target);
  var argumentsLength = arguments.length;
  var index = 1;
  var getOwnPropertySymbols = objectGetOwnPropertySymbols$1.f;
  var propertyIsEnumerable = objectPropertyIsEnumerable$1.f;
  while (argumentsLength > index) {
    var S = indexedObject$1(arguments[index++]);
    var keys = getOwnPropertySymbols ? concat$3(objectKeys$1(S), getOwnPropertySymbols(S)) : objectKeys$1(S);
    var length = keys.length;
    var j = 0;
    var key;
    while (length > j) {
      key = keys[j++];
      if (!descriptors$1 || functionCall$1(propertyIsEnumerable, S, key)) T[key] = S[key];
    }
  } return T;
} : $assign;

// call something on iterator step with safe closing on error
var callWithSafeIterationClosing = function (iterator, fn, value, ENTRIES) {
  try {
    return ENTRIES ? fn(anObject$1(value)[0], value[1]) : fn(value);
  } catch (error) {
    iteratorClose$1(iterator, 'throw', error);
  }
};

var $Array$2 = Array;

// `Array.from` method implementation
// https://tc39.es/ecma262/#sec-array.from
var arrayFrom = function from(arrayLike /* , mapfn = undefined, thisArg = undefined */) {
  var O = toObject$2(arrayLike);
  var IS_CONSTRUCTOR = isConstructor$1(this);
  var argumentsLength = arguments.length;
  var mapfn = argumentsLength > 1 ? arguments[1] : undefined;
  var mapping = mapfn !== undefined;
  if (mapping) mapfn = functionBindContext$1(mapfn, argumentsLength > 2 ? arguments[2] : undefined);
  var iteratorMethod = getIteratorMethod$1(O);
  var index = 0;
  var length, result, step, iterator, next, value;
  // if the target is not iterable or it's an array with the default iterator - use a simple case
  if (iteratorMethod && !(this === $Array$2 && isArrayIteratorMethod$1(iteratorMethod))) {
    iterator = getIterator$1(O, iteratorMethod);
    next = iterator.next;
    result = IS_CONSTRUCTOR ? new this() : [];
    for (;!(step = functionCall$1(next, iterator)).done; index++) {
      value = mapping ? callWithSafeIterationClosing(iterator, mapfn, [step.value, index], true) : step.value;
      createProperty$1(result, index, value);
    }
  } else {
    length = lengthOfArrayLike$1(O);
    result = IS_CONSTRUCTOR ? new this(length) : $Array$2(length);
    for (;length > index; index++) {
      value = mapping ? mapfn(O[index], index) : O[index];
      createProperty$1(result, index, value);
    }
  }
  result.length = index;
  return result;
};

// based on https://github.com/bestiejs/punycode.js/blob/master/punycode.js


var maxInt = 2147483647; // aka. 0x7FFFFFFF or 2^31-1
var base = 36;
var tMin = 1;
var tMax = 26;
var skew = 38;
var damp = 700;
var initialBias = 72;
var initialN = 128; // 0x80
var delimiter = '-'; // '\x2D'
var regexNonASCII = /[^\0-\u007E]/; // non-ASCII chars
var regexSeparators = /[.\u3002\uFF0E\uFF61]/g; // RFC 3490 separators
var OVERFLOW_ERROR = 'Overflow: input needs wider integers to process';
var baseMinusTMin = base - tMin;

var $RangeError$2 = RangeError;
var exec$2 = functionUncurryThis$1(regexSeparators.exec);
var floor$5 = Math.floor;
var fromCharCode = String.fromCharCode;
var charCodeAt$1 = functionUncurryThis$1(''.charCodeAt);
var join$2 = functionUncurryThis$1([].join);
var push$4 = functionUncurryThis$1([].push);
var replace$4 = functionUncurryThis$1(''.replace);
var split$3 = functionUncurryThis$1(''.split);
var toLowerCase = functionUncurryThis$1(''.toLowerCase);

/**
 * Creates an array containing the numeric code points of each Unicode
 * character in the string. While JavaScript uses UCS-2 internally,
 * this function will convert a pair of surrogate halves (each of which
 * UCS-2 exposes as separate characters) into a single code point,
 * matching UTF-16.
 */
var ucs2decode = function (string) {
  var output = [];
  var counter = 0;
  var length = string.length;
  while (counter < length) {
    var value = charCodeAt$1(string, counter++);
    if (value >= 0xD800 && value <= 0xDBFF && counter < length) {
      // It's a high surrogate, and there is a next character.
      var extra = charCodeAt$1(string, counter++);
      if ((extra & 0xFC00) == 0xDC00) { // Low surrogate.
        push$4(output, ((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);
      } else {
        // It's an unmatched surrogate; only append this code unit, in case the
        // next code unit is the high surrogate of a surrogate pair.
        push$4(output, value);
        counter--;
      }
    } else {
      push$4(output, value);
    }
  }
  return output;
};

/**
 * Converts a digit/integer into a basic code point.
 */
var digitToBasic = function (digit) {
  //  0..25 map to ASCII a..z or A..Z
  // 26..35 map to ASCII 0..9
  return digit + 22 + 75 * (digit < 26);
};

/**
 * Bias adaptation function as per section 3.4 of RFC 3492.
 * https://tools.ietf.org/html/rfc3492#section-3.4
 */
var adapt = function (delta, numPoints, firstTime) {
  var k = 0;
  delta = firstTime ? floor$5(delta / damp) : delta >> 1;
  delta += floor$5(delta / numPoints);
  while (delta > baseMinusTMin * tMax >> 1) {
    delta = floor$5(delta / baseMinusTMin);
    k += base;
  }
  return floor$5(k + (baseMinusTMin + 1) * delta / (delta + skew));
};

/**
 * Converts a string of Unicode symbols (e.g. a domain name label) to a
 * Punycode string of ASCII-only symbols.
 */
var encode = function (input) {
  var output = [];

  // Convert the input in UCS-2 to an array of Unicode code points.
  input = ucs2decode(input);

  // Cache the length.
  var inputLength = input.length;

  // Initialize the state.
  var n = initialN;
  var delta = 0;
  var bias = initialBias;
  var i, currentValue;

  // Handle the basic code points.
  for (i = 0; i < input.length; i++) {
    currentValue = input[i];
    if (currentValue < 0x80) {
      push$4(output, fromCharCode(currentValue));
    }
  }

  var basicLength = output.length; // number of basic code points.
  var handledCPCount = basicLength; // number of code points that have been handled;

  // Finish the basic string with a delimiter unless it's empty.
  if (basicLength) {
    push$4(output, delimiter);
  }

  // Main encoding loop:
  while (handledCPCount < inputLength) {
    // All non-basic code points < n have been handled already. Find the next larger one:
    var m = maxInt;
    for (i = 0; i < input.length; i++) {
      currentValue = input[i];
      if (currentValue >= n && currentValue < m) {
        m = currentValue;
      }
    }

    // Increase `delta` enough to advance the decoder's <n,i> state to <m,0>, but guard against overflow.
    var handledCPCountPlusOne = handledCPCount + 1;
    if (m - n > floor$5((maxInt - delta) / handledCPCountPlusOne)) {
      throw $RangeError$2(OVERFLOW_ERROR);
    }

    delta += (m - n) * handledCPCountPlusOne;
    n = m;

    for (i = 0; i < input.length; i++) {
      currentValue = input[i];
      if (currentValue < n && ++delta > maxInt) {
        throw $RangeError$2(OVERFLOW_ERROR);
      }
      if (currentValue == n) {
        // Represent delta as a generalized variable-length integer.
        var q = delta;
        var k = base;
        while (true) {
          var t = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);
          if (q < t) break;
          var qMinusT = q - t;
          var baseMinusT = base - t;
          push$4(output, fromCharCode(digitToBasic(t + qMinusT % baseMinusT)));
          q = floor$5(qMinusT / baseMinusT);
          k += base;
        }

        push$4(output, fromCharCode(digitToBasic(q)));
        bias = adapt(delta, handledCPCountPlusOne, handledCPCount == basicLength);
        delta = 0;
        handledCPCount++;
      }
    }

    delta++;
    n++;
  }
  return join$2(output, '');
};

var stringPunycodeToAscii = function (input) {
  var encoded = [];
  var labels = split$3(replace$4(toLowerCase(input), regexSeparators, '\u002E'), '.');
  var i, label;
  for (i = 0; i < labels.length; i++) {
    label = labels[i];
    push$4(encoded, exec$2(regexNonASCII, label) ? 'xn--' + encode(label) : label);
  }
  return join$2(encoded, '.');
};

var defineBuiltIns$1 = function (target, src, options) {
  for (var key in src) defineBuiltIn$1(target, key, src[key], options);
  return target;
};

// TODO: in core-js@4, move /modules/ dependencies to public entries for better optimization by tools like `preset-env`




























var ITERATOR$d = wellKnownSymbol$1('iterator');
var URL_SEARCH_PARAMS$1 = 'URLSearchParams';
var URL_SEARCH_PARAMS_ITERATOR$1 = URL_SEARCH_PARAMS$1 + 'Iterator';
var setInternalState$6 = internalState$1.set;
var getInternalParamsState$1 = internalState$1.getterFor(URL_SEARCH_PARAMS$1);
var getInternalIteratorState$1 = internalState$1.getterFor(URL_SEARCH_PARAMS_ITERATOR$1);
// eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe
var getOwnPropertyDescriptor$7 = Object.getOwnPropertyDescriptor;

// Avoid NodeJS experimental warning
var safeGetBuiltIn$1 = function (name) {
  if (!descriptors$1) return global_1$1[name];
  var descriptor = getOwnPropertyDescriptor$7(global_1$1, name);
  return descriptor && descriptor.value;
};

var nativeFetch$1 = safeGetBuiltIn$1('fetch');
var NativeRequest$1 = safeGetBuiltIn$1('Request');
var Headers$1 = safeGetBuiltIn$1('Headers');
var RequestPrototype$1 = NativeRequest$1 && NativeRequest$1.prototype;
var HeadersPrototype$1 = Headers$1 && Headers$1.prototype;
var RegExp$2 = global_1$1.RegExp;
var TypeError$7 = global_1$1.TypeError;
var decodeURIComponent$2 = global_1$1.decodeURIComponent;
var encodeURIComponent$2 = global_1$1.encodeURIComponent;
var charAt$6 = functionUncurryThis$1(''.charAt);
var join$3 = functionUncurryThis$1([].join);
var push$5 = functionUncurryThis$1([].push);
var replace$5 = functionUncurryThis$1(''.replace);
var shift$1 = functionUncurryThis$1([].shift);
var splice$1 = functionUncurryThis$1([].splice);
var split$4 = functionUncurryThis$1(''.split);
var stringSlice$7 = functionUncurryThis$1(''.slice);

var plus$1 = /\+/g;
var sequences$1 = Array(4);

var percentSequence$1 = function (bytes) {
  return sequences$1[bytes - 1] || (sequences$1[bytes - 1] = RegExp$2('((?:%[\\da-f]{2}){' + bytes + '})', 'gi'));
};

var percentDecode$1 = function (sequence) {
  try {
    return decodeURIComponent$2(sequence);
  } catch (error) {
    return sequence;
  }
};

var deserialize$1 = function (it) {
  var result = replace$5(it, plus$1, ' ');
  var bytes = 4;
  try {
    return decodeURIComponent$2(result);
  } catch (error) {
    while (bytes) {
      result = replace$5(result, percentSequence$1(bytes--), percentDecode$1);
    }
    return result;
  }
};

var find$1 = /[!'()~]|%20/g;

var replacements$1 = {
  '!': '%21',
  "'": '%27',
  '(': '%28',
  ')': '%29',
  '~': '%7E',
  '%20': '+'
};

var replacer$1 = function (match) {
  return replacements$1[match];
};

var serialize$1 = function (it) {
  return replace$5(encodeURIComponent$2(it), find$1, replacer$1);
};

var URLSearchParamsIterator$1 = iteratorCreateConstructor$1(function Iterator(params, kind) {
  setInternalState$6(this, {
    type: URL_SEARCH_PARAMS_ITERATOR$1,
    iterator: getIterator$1(getInternalParamsState$1(params).entries),
    kind: kind
  });
}, 'Iterator', function next() {
  var state = getInternalIteratorState$1(this);
  var kind = state.kind;
  var step = state.iterator.next();
  var entry = step.value;
  if (!step.done) {
    step.value = kind === 'keys' ? entry.key : kind === 'values' ? entry.value : [entry.key, entry.value];
  } return step;
}, true);

var URLSearchParamsState$1 = function (init) {
  this.entries = [];
  this.url = null;

  if (init !== undefined) {
    if (isObject$2(init)) this.parseObject(init);
    else this.parseQuery(typeof init == 'string' ? charAt$6(init, 0) === '?' ? stringSlice$7(init, 1) : init : toString_1$1(init));
  }
};

URLSearchParamsState$1.prototype = {
  type: URL_SEARCH_PARAMS$1,
  bindURL: function (url) {
    this.url = url;
    this.update();
  },
  parseObject: function (object) {
    var iteratorMethod = getIteratorMethod$1(object);
    var iterator, next, step, entryIterator, entryNext, first, second;

    if (iteratorMethod) {
      iterator = getIterator$1(object, iteratorMethod);
      next = iterator.next;
      while (!(step = functionCall$1(next, iterator)).done) {
        entryIterator = getIterator$1(anObject$1(step.value));
        entryNext = entryIterator.next;
        if (
          (first = functionCall$1(entryNext, entryIterator)).done ||
          (second = functionCall$1(entryNext, entryIterator)).done ||
          !functionCall$1(entryNext, entryIterator).done
        ) throw TypeError$7('Expected sequence with length 2');
        push$5(this.entries, { key: toString_1$1(first.value), value: toString_1$1(second.value) });
      }
    } else for (var key in object) if (hasOwnProperty_1$1(object, key)) {
      push$5(this.entries, { key: key, value: toString_1$1(object[key]) });
    }
  },
  parseQuery: function (query) {
    if (query) {
      var attributes = split$4(query, '&');
      var index = 0;
      var attribute, entry;
      while (index < attributes.length) {
        attribute = attributes[index++];
        if (attribute.length) {
          entry = split$4(attribute, '=');
          push$5(this.entries, {
            key: deserialize$1(shift$1(entry)),
            value: deserialize$1(join$3(entry, '='))
          });
        }
      }
    }
  },
  serialize: function () {
    var entries = this.entries;
    var result = [];
    var index = 0;
    var entry;
    while (index < entries.length) {
      entry = entries[index++];
      push$5(result, serialize$1(entry.key) + '=' + serialize$1(entry.value));
    } return join$3(result, '&');
  },
  update: function () {
    this.entries.length = 0;
    this.parseQuery(this.url.query);
  },
  updateURL: function () {
    if (this.url) this.url.update();
  }
};

// `URLSearchParams` constructor
// https://url.spec.whatwg.org/#interface-urlsearchparams
var URLSearchParamsConstructor$1 = function URLSearchParams(/* init */) {
  anInstance$1(this, URLSearchParamsPrototype$1);
  var init = arguments.length > 0 ? arguments[0] : undefined;
  setInternalState$6(this, new URLSearchParamsState$1(init));
};

var URLSearchParamsPrototype$1 = URLSearchParamsConstructor$1.prototype;

defineBuiltIns$1(URLSearchParamsPrototype$1, {
  // `URLSearchParams.prototype.append` method
  // https://url.spec.whatwg.org/#dom-urlsearchparams-append
  append: function append(name, value) {
    validateArgumentsLength$1(arguments.length, 2);
    var state = getInternalParamsState$1(this);
    push$5(state.entries, { key: toString_1$1(name), value: toString_1$1(value) });
    state.updateURL();
  },
  // `URLSearchParams.prototype.delete` method
  // https://url.spec.whatwg.org/#dom-urlsearchparams-delete
  'delete': function (name) {
    validateArgumentsLength$1(arguments.length, 1);
    var state = getInternalParamsState$1(this);
    var entries = state.entries;
    var key = toString_1$1(name);
    var index = 0;
    while (index < entries.length) {
      if (entries[index].key === key) splice$1(entries, index, 1);
      else index++;
    }
    state.updateURL();
  },
  // `URLSearchParams.prototype.get` method
  // https://url.spec.whatwg.org/#dom-urlsearchparams-get
  get: function get(name) {
    validateArgumentsLength$1(arguments.length, 1);
    var entries = getInternalParamsState$1(this).entries;
    var key = toString_1$1(name);
    var index = 0;
    for (; index < entries.length; index++) {
      if (entries[index].key === key) return entries[index].value;
    }
    return null;
  },
  // `URLSearchParams.prototype.getAll` method
  // https://url.spec.whatwg.org/#dom-urlsearchparams-getall
  getAll: function getAll(name) {
    validateArgumentsLength$1(arguments.length, 1);
    var entries = getInternalParamsState$1(this).entries;
    var key = toString_1$1(name);
    var result = [];
    var index = 0;
    for (; index < entries.length; index++) {
      if (entries[index].key === key) push$5(result, entries[index].value);
    }
    return result;
  },
  // `URLSearchParams.prototype.has` method
  // https://url.spec.whatwg.org/#dom-urlsearchparams-has
  has: function has(name) {
    validateArgumentsLength$1(arguments.length, 1);
    var entries = getInternalParamsState$1(this).entries;
    var key = toString_1$1(name);
    var index = 0;
    while (index < entries.length) {
      if (entries[index++].key === key) return true;
    }
    return false;
  },
  // `URLSearchParams.prototype.set` method
  // https://url.spec.whatwg.org/#dom-urlsearchparams-set
  set: function set(name, value) {
    validateArgumentsLength$1(arguments.length, 1);
    var state = getInternalParamsState$1(this);
    var entries = state.entries;
    var found = false;
    var key = toString_1$1(name);
    var val = toString_1$1(value);
    var index = 0;
    var entry;
    for (; index < entries.length; index++) {
      entry = entries[index];
      if (entry.key === key) {
        if (found) splice$1(entries, index--, 1);
        else {
          found = true;
          entry.value = val;
        }
      }
    }
    if (!found) push$5(entries, { key: key, value: val });
    state.updateURL();
  },
  // `URLSearchParams.prototype.sort` method
  // https://url.spec.whatwg.org/#dom-urlsearchparams-sort
  sort: function sort() {
    var state = getInternalParamsState$1(this);
    arraySort$1(state.entries, function (a, b) {
      return a.key > b.key ? 1 : -1;
    });
    state.updateURL();
  },
  // `URLSearchParams.prototype.forEach` method
  forEach: function forEach(callback /* , thisArg */) {
    var entries = getInternalParamsState$1(this).entries;
    var boundFunction = functionBindContext$1(callback, arguments.length > 1 ? arguments[1] : undefined);
    var index = 0;
    var entry;
    while (index < entries.length) {
      entry = entries[index++];
      boundFunction(entry.value, entry.key, this);
    }
  },
  // `URLSearchParams.prototype.keys` method
  keys: function keys() {
    return new URLSearchParamsIterator$1(this, 'keys');
  },
  // `URLSearchParams.prototype.values` method
  values: function values() {
    return new URLSearchParamsIterator$1(this, 'values');
  },
  // `URLSearchParams.prototype.entries` method
  entries: function entries() {
    return new URLSearchParamsIterator$1(this, 'entries');
  }
}, { enumerable: true });

// `URLSearchParams.prototype[@@iterator]` method
defineBuiltIn$1(URLSearchParamsPrototype$1, ITERATOR$d, URLSearchParamsPrototype$1.entries, { name: 'entries' });

// `URLSearchParams.prototype.toString` method
// https://url.spec.whatwg.org/#urlsearchparams-stringification-behavior
defineBuiltIn$1(URLSearchParamsPrototype$1, 'toString', function toString() {
  return getInternalParamsState$1(this).serialize();
}, { enumerable: true });

setToStringTag$1(URLSearchParamsConstructor$1, URL_SEARCH_PARAMS$1);

_export$1({ global: true, constructor: true, forced: !urlConstructorDetection$1 }, {
  URLSearchParams: URLSearchParamsConstructor$1
});

// Wrap `fetch` and `Request` for correct work with polyfilled `URLSearchParams`
if (!urlConstructorDetection$1 && isCallable$1(Headers$1)) {
  var headersHas$1 = functionUncurryThis$1(HeadersPrototype$1.has);
  var headersSet$1 = functionUncurryThis$1(HeadersPrototype$1.set);

  var wrapRequestOptions$1 = function (init) {
    if (isObject$2(init)) {
      var body = init.body;
      var headers;
      if (classof$1(body) === URL_SEARCH_PARAMS$1) {
        headers = init.headers ? new Headers$1(init.headers) : new Headers$1();
        if (!headersHas$1(headers, 'content-type')) {
          headersSet$1(headers, 'content-type', 'application/x-www-form-urlencoded;charset=UTF-8');
        }
        return objectCreate$1(init, {
          body: createPropertyDescriptor$1(0, toString_1$1(body)),
          headers: createPropertyDescriptor$1(0, headers)
        });
      }
    } return init;
  };

  if (isCallable$1(nativeFetch$1)) {
    _export$1({ global: true, enumerable: true, dontCallGetSet: true, forced: true }, {
      fetch: function fetch(input /* , init */) {
        return nativeFetch$1(input, arguments.length > 1 ? wrapRequestOptions$1(arguments[1]) : {});
      }
    });
  }

  if (isCallable$1(NativeRequest$1)) {
    var RequestConstructor$1 = function Request(input /* , init */) {
      anInstance$1(this, RequestPrototype$1);
      return new NativeRequest$1(input, arguments.length > 1 ? wrapRequestOptions$1(arguments[1]) : {});
    };

    RequestPrototype$1.constructor = RequestConstructor$1;
    RequestConstructor$1.prototype = RequestPrototype$1;

    _export$1({ global: true, constructor: true, dontCallGetSet: true, forced: true }, {
      Request: RequestConstructor$1
    });
  }
}

var web_urlSearchParams_constructor = {
  URLSearchParams: URLSearchParamsConstructor$1,
  getState: getInternalParamsState$1
};

// TODO: in core-js@4, move /modules/ dependencies to public entries for better optimization by tools like `preset-env`














var codeAt = stringMultibyte.codeAt;







var setInternalState$7 = internalState$1.set;
var getInternalURLState = internalState$1.getterFor('URL');
var URLSearchParams$1 = web_urlSearchParams_constructor.URLSearchParams;
var getInternalSearchParamsState = web_urlSearchParams_constructor.getState;

var NativeURL = global_1$1.URL;
var TypeError$8 = global_1$1.TypeError;
var parseInt$1 = global_1$1.parseInt;
var floor$6 = Math.floor;
var pow = Math.pow;
var charAt$7 = functionUncurryThis$1(''.charAt);
var exec$3 = functionUncurryThis$1(/./.exec);
var join$4 = functionUncurryThis$1([].join);
var numberToString = functionUncurryThis$1(1.0.toString);
var pop = functionUncurryThis$1([].pop);
var push$6 = functionUncurryThis$1([].push);
var replace$6 = functionUncurryThis$1(''.replace);
var shift$2 = functionUncurryThis$1([].shift);
var split$5 = functionUncurryThis$1(''.split);
var stringSlice$8 = functionUncurryThis$1(''.slice);
var toLowerCase$1 = functionUncurryThis$1(''.toLowerCase);
var unshift = functionUncurryThis$1([].unshift);

var INVALID_AUTHORITY = 'Invalid authority';
var INVALID_SCHEME = 'Invalid scheme';
var INVALID_HOST = 'Invalid host';
var INVALID_PORT = 'Invalid port';

var ALPHA = /[a-z]/i;
// eslint-disable-next-line regexp/no-obscure-range -- safe
var ALPHANUMERIC = /[\d+-.a-z]/i;
var DIGIT = /\d/;
var HEX_START = /^0x/i;
var OCT = /^[0-7]+$/;
var DEC = /^\d+$/;
var HEX = /^[\da-f]+$/i;
/* eslint-disable regexp/no-control-character -- safe */
var FORBIDDEN_HOST_CODE_POINT = /[\0\t\n\r #%/:<>?@[\\\]^|]/;
var FORBIDDEN_HOST_CODE_POINT_EXCLUDING_PERCENT = /[\0\t\n\r #/:<>?@[\\\]^|]/;
var LEADING_AND_TRAILING_C0_CONTROL_OR_SPACE = /^[\u0000-\u0020]+|[\u0000-\u0020]+$/g;
var TAB_AND_NEW_LINE = /[\t\n\r]/g;
/* eslint-enable regexp/no-control-character -- safe */
var EOF;

// https://url.spec.whatwg.org/#ipv4-number-parser
var parseIPv4 = function (input) {
  var parts = split$5(input, '.');
  var partsLength, numbers, index, part, radix, number, ipv4;
  if (parts.length && parts[parts.length - 1] == '') {
    parts.length--;
  }
  partsLength = parts.length;
  if (partsLength > 4) return input;
  numbers = [];
  for (index = 0; index < partsLength; index++) {
    part = parts[index];
    if (part == '') return input;
    radix = 10;
    if (part.length > 1 && charAt$7(part, 0) == '0') {
      radix = exec$3(HEX_START, part) ? 16 : 8;
      part = stringSlice$8(part, radix == 8 ? 1 : 2);
    }
    if (part === '') {
      number = 0;
    } else {
      if (!exec$3(radix == 10 ? DEC : radix == 8 ? OCT : HEX, part)) return input;
      number = parseInt$1(part, radix);
    }
    push$6(numbers, number);
  }
  for (index = 0; index < partsLength; index++) {
    number = numbers[index];
    if (index == partsLength - 1) {
      if (number >= pow(256, 5 - partsLength)) return null;
    } else if (number > 255) return null;
  }
  ipv4 = pop(numbers);
  for (index = 0; index < numbers.length; index++) {
    ipv4 += numbers[index] * pow(256, 3 - index);
  }
  return ipv4;
};

// https://url.spec.whatwg.org/#concept-ipv6-parser
// eslint-disable-next-line max-statements -- TODO
var parseIPv6 = function (input) {
  var address = [0, 0, 0, 0, 0, 0, 0, 0];
  var pieceIndex = 0;
  var compress = null;
  var pointer = 0;
  var value, length, numbersSeen, ipv4Piece, number, swaps, swap;

  var chr = function () {
    return charAt$7(input, pointer);
  };

  if (chr() == ':') {
    if (charAt$7(input, 1) != ':') return;
    pointer += 2;
    pieceIndex++;
    compress = pieceIndex;
  }
  while (chr()) {
    if (pieceIndex == 8) return;
    if (chr() == ':') {
      if (compress !== null) return;
      pointer++;
      pieceIndex++;
      compress = pieceIndex;
      continue;
    }
    value = length = 0;
    while (length < 4 && exec$3(HEX, chr())) {
      value = value * 16 + parseInt$1(chr(), 16);
      pointer++;
      length++;
    }
    if (chr() == '.') {
      if (length == 0) return;
      pointer -= length;
      if (pieceIndex > 6) return;
      numbersSeen = 0;
      while (chr()) {
        ipv4Piece = null;
        if (numbersSeen > 0) {
          if (chr() == '.' && numbersSeen < 4) pointer++;
          else return;
        }
        if (!exec$3(DIGIT, chr())) return;
        while (exec$3(DIGIT, chr())) {
          number = parseInt$1(chr(), 10);
          if (ipv4Piece === null) ipv4Piece = number;
          else if (ipv4Piece == 0) return;
          else ipv4Piece = ipv4Piece * 10 + number;
          if (ipv4Piece > 255) return;
          pointer++;
        }
        address[pieceIndex] = address[pieceIndex] * 256 + ipv4Piece;
        numbersSeen++;
        if (numbersSeen == 2 || numbersSeen == 4) pieceIndex++;
      }
      if (numbersSeen != 4) return;
      break;
    } else if (chr() == ':') {
      pointer++;
      if (!chr()) return;
    } else if (chr()) return;
    address[pieceIndex++] = value;
  }
  if (compress !== null) {
    swaps = pieceIndex - compress;
    pieceIndex = 7;
    while (pieceIndex != 0 && swaps > 0) {
      swap = address[pieceIndex];
      address[pieceIndex--] = address[compress + swaps - 1];
      address[compress + --swaps] = swap;
    }
  } else if (pieceIndex != 8) return;
  return address;
};

var findLongestZeroSequence = function (ipv6) {
  var maxIndex = null;
  var maxLength = 1;
  var currStart = null;
  var currLength = 0;
  var index = 0;
  for (; index < 8; index++) {
    if (ipv6[index] !== 0) {
      if (currLength > maxLength) {
        maxIndex = currStart;
        maxLength = currLength;
      }
      currStart = null;
      currLength = 0;
    } else {
      if (currStart === null) currStart = index;
      ++currLength;
    }
  }
  if (currLength > maxLength) {
    maxIndex = currStart;
    maxLength = currLength;
  }
  return maxIndex;
};

// https://url.spec.whatwg.org/#host-serializing
var serializeHost = function (host) {
  var result, index, compress, ignore0;
  // ipv4
  if (typeof host == 'number') {
    result = [];
    for (index = 0; index < 4; index++) {
      unshift(result, host % 256);
      host = floor$6(host / 256);
    } return join$4(result, '.');
  // ipv6
  } else if (typeof host == 'object') {
    result = '';
    compress = findLongestZeroSequence(host);
    for (index = 0; index < 8; index++) {
      if (ignore0 && host[index] === 0) continue;
      if (ignore0) ignore0 = false;
      if (compress === index) {
        result += index ? ':' : '::';
        ignore0 = true;
      } else {
        result += numberToString(host[index], 16);
        if (index < 7) result += ':';
      }
    }
    return '[' + result + ']';
  } return host;
};

var C0ControlPercentEncodeSet = {};
var fragmentPercentEncodeSet = objectAssign$1({}, C0ControlPercentEncodeSet, {
  ' ': 1, '"': 1, '<': 1, '>': 1, '`': 1
});
var pathPercentEncodeSet = objectAssign$1({}, fragmentPercentEncodeSet, {
  '#': 1, '?': 1, '{': 1, '}': 1
});
var userinfoPercentEncodeSet = objectAssign$1({}, pathPercentEncodeSet, {
  '/': 1, ':': 1, ';': 1, '=': 1, '@': 1, '[': 1, '\\': 1, ']': 1, '^': 1, '|': 1
});

var percentEncode = function (chr, set) {
  var code = codeAt(chr, 0);
  return code > 0x20 && code < 0x7F && !hasOwnProperty_1$1(set, chr) ? chr : encodeURIComponent(chr);
};

// https://url.spec.whatwg.org/#special-scheme
var specialSchemes = {
  ftp: 21,
  file: null,
  http: 80,
  https: 443,
  ws: 80,
  wss: 443
};

// https://url.spec.whatwg.org/#windows-drive-letter
var isWindowsDriveLetter = function (string, normalized) {
  var second;
  return string.length == 2 && exec$3(ALPHA, charAt$7(string, 0))
    && ((second = charAt$7(string, 1)) == ':' || (!normalized && second == '|'));
};

// https://url.spec.whatwg.org/#start-with-a-windows-drive-letter
var startsWithWindowsDriveLetter = function (string) {
  var third;
  return string.length > 1 && isWindowsDriveLetter(stringSlice$8(string, 0, 2)) && (
    string.length == 2 ||
    ((third = charAt$7(string, 2)) === '/' || third === '\\' || third === '?' || third === '#')
  );
};

// https://url.spec.whatwg.org/#single-dot-path-segment
var isSingleDot = function (segment) {
  return segment === '.' || toLowerCase$1(segment) === '%2e';
};

// https://url.spec.whatwg.org/#double-dot-path-segment
var isDoubleDot = function (segment) {
  segment = toLowerCase$1(segment);
  return segment === '..' || segment === '%2e.' || segment === '.%2e' || segment === '%2e%2e';
};

// States:
var SCHEME_START = {};
var SCHEME = {};
var NO_SCHEME = {};
var SPECIAL_RELATIVE_OR_AUTHORITY = {};
var PATH_OR_AUTHORITY = {};
var RELATIVE = {};
var RELATIVE_SLASH = {};
var SPECIAL_AUTHORITY_SLASHES = {};
var SPECIAL_AUTHORITY_IGNORE_SLASHES = {};
var AUTHORITY = {};
var HOST = {};
var HOSTNAME = {};
var PORT = {};
var FILE = {};
var FILE_SLASH = {};
var FILE_HOST = {};
var PATH_START = {};
var PATH = {};
var CANNOT_BE_A_BASE_URL_PATH = {};
var QUERY = {};
var FRAGMENT = {};

var URLState = function (url, isBase, base) {
  var urlString = toString_1$1(url);
  var baseState, failure, searchParams;
  if (isBase) {
    failure = this.parse(urlString);
    if (failure) throw TypeError$8(failure);
    this.searchParams = null;
  } else {
    if (base !== undefined) baseState = new URLState(base, true);
    failure = this.parse(urlString, null, baseState);
    if (failure) throw TypeError$8(failure);
    searchParams = getInternalSearchParamsState(new URLSearchParams$1());
    searchParams.bindURL(this);
    this.searchParams = searchParams;
  }
};

URLState.prototype = {
  type: 'URL',
  // https://url.spec.whatwg.org/#url-parsing
  // eslint-disable-next-line max-statements -- TODO
  parse: function (input, stateOverride, base) {
    var url = this;
    var state = stateOverride || SCHEME_START;
    var pointer = 0;
    var buffer = '';
    var seenAt = false;
    var seenBracket = false;
    var seenPasswordToken = false;
    var codePoints, chr, bufferCodePoints, failure;

    input = toString_1$1(input);

    if (!stateOverride) {
      url.scheme = '';
      url.username = '';
      url.password = '';
      url.host = null;
      url.port = null;
      url.path = [];
      url.query = null;
      url.fragment = null;
      url.cannotBeABaseURL = false;
      input = replace$6(input, LEADING_AND_TRAILING_C0_CONTROL_OR_SPACE, '');
    }

    input = replace$6(input, TAB_AND_NEW_LINE, '');

    codePoints = arrayFrom(input);

    while (pointer <= codePoints.length) {
      chr = codePoints[pointer];
      switch (state) {
        case SCHEME_START:
          if (chr && exec$3(ALPHA, chr)) {
            buffer += toLowerCase$1(chr);
            state = SCHEME;
          } else if (!stateOverride) {
            state = NO_SCHEME;
            continue;
          } else return INVALID_SCHEME;
          break;

        case SCHEME:
          if (chr && (exec$3(ALPHANUMERIC, chr) || chr == '+' || chr == '-' || chr == '.')) {
            buffer += toLowerCase$1(chr);
          } else if (chr == ':') {
            if (stateOverride && (
              (url.isSpecial() != hasOwnProperty_1$1(specialSchemes, buffer)) ||
              (buffer == 'file' && (url.includesCredentials() || url.port !== null)) ||
              (url.scheme == 'file' && !url.host)
            )) return;
            url.scheme = buffer;
            if (stateOverride) {
              if (url.isSpecial() && specialSchemes[url.scheme] == url.port) url.port = null;
              return;
            }
            buffer = '';
            if (url.scheme == 'file') {
              state = FILE;
            } else if (url.isSpecial() && base && base.scheme == url.scheme) {
              state = SPECIAL_RELATIVE_OR_AUTHORITY;
            } else if (url.isSpecial()) {
              state = SPECIAL_AUTHORITY_SLASHES;
            } else if (codePoints[pointer + 1] == '/') {
              state = PATH_OR_AUTHORITY;
              pointer++;
            } else {
              url.cannotBeABaseURL = true;
              push$6(url.path, '');
              state = CANNOT_BE_A_BASE_URL_PATH;
            }
          } else if (!stateOverride) {
            buffer = '';
            state = NO_SCHEME;
            pointer = 0;
            continue;
          } else return INVALID_SCHEME;
          break;

        case NO_SCHEME:
          if (!base || (base.cannotBeABaseURL && chr != '#')) return INVALID_SCHEME;
          if (base.cannotBeABaseURL && chr == '#') {
            url.scheme = base.scheme;
            url.path = arraySliceSimple$1(base.path);
            url.query = base.query;
            url.fragment = '';
            url.cannotBeABaseURL = true;
            state = FRAGMENT;
            break;
          }
          state = base.scheme == 'file' ? FILE : RELATIVE;
          continue;

        case SPECIAL_RELATIVE_OR_AUTHORITY:
          if (chr == '/' && codePoints[pointer + 1] == '/') {
            state = SPECIAL_AUTHORITY_IGNORE_SLASHES;
            pointer++;
          } else {
            state = RELATIVE;
            continue;
          } break;

        case PATH_OR_AUTHORITY:
          if (chr == '/') {
            state = AUTHORITY;
            break;
          } else {
            state = PATH;
            continue;
          }

        case RELATIVE:
          url.scheme = base.scheme;
          if (chr == EOF) {
            url.username = base.username;
            url.password = base.password;
            url.host = base.host;
            url.port = base.port;
            url.path = arraySliceSimple$1(base.path);
            url.query = base.query;
          } else if (chr == '/' || (chr == '\\' && url.isSpecial())) {
            state = RELATIVE_SLASH;
          } else if (chr == '?') {
            url.username = base.username;
            url.password = base.password;
            url.host = base.host;
            url.port = base.port;
            url.path = arraySliceSimple$1(base.path);
            url.query = '';
            state = QUERY;
          } else if (chr == '#') {
            url.username = base.username;
            url.password = base.password;
            url.host = base.host;
            url.port = base.port;
            url.path = arraySliceSimple$1(base.path);
            url.query = base.query;
            url.fragment = '';
            state = FRAGMENT;
          } else {
            url.username = base.username;
            url.password = base.password;
            url.host = base.host;
            url.port = base.port;
            url.path = arraySliceSimple$1(base.path);
            url.path.length--;
            state = PATH;
            continue;
          } break;

        case RELATIVE_SLASH:
          if (url.isSpecial() && (chr == '/' || chr == '\\')) {
            state = SPECIAL_AUTHORITY_IGNORE_SLASHES;
          } else if (chr == '/') {
            state = AUTHORITY;
          } else {
            url.username = base.username;
            url.password = base.password;
            url.host = base.host;
            url.port = base.port;
            state = PATH;
            continue;
          } break;

        case SPECIAL_AUTHORITY_SLASHES:
          state = SPECIAL_AUTHORITY_IGNORE_SLASHES;
          if (chr != '/' || charAt$7(buffer, pointer + 1) != '/') continue;
          pointer++;
          break;

        case SPECIAL_AUTHORITY_IGNORE_SLASHES:
          if (chr != '/' && chr != '\\') {
            state = AUTHORITY;
            continue;
          } break;

        case AUTHORITY:
          if (chr == '@') {
            if (seenAt) buffer = '%40' + buffer;
            seenAt = true;
            bufferCodePoints = arrayFrom(buffer);
            for (var i = 0; i < bufferCodePoints.length; i++) {
              var codePoint = bufferCodePoints[i];
              if (codePoint == ':' && !seenPasswordToken) {
                seenPasswordToken = true;
                continue;
              }
              var encodedCodePoints = percentEncode(codePoint, userinfoPercentEncodeSet);
              if (seenPasswordToken) url.password += encodedCodePoints;
              else url.username += encodedCodePoints;
            }
            buffer = '';
          } else if (
            chr == EOF || chr == '/' || chr == '?' || chr == '#' ||
            (chr == '\\' && url.isSpecial())
          ) {
            if (seenAt && buffer == '') return INVALID_AUTHORITY;
            pointer -= arrayFrom(buffer).length + 1;
            buffer = '';
            state = HOST;
          } else buffer += chr;
          break;

        case HOST:
        case HOSTNAME:
          if (stateOverride && url.scheme == 'file') {
            state = FILE_HOST;
            continue;
          } else if (chr == ':' && !seenBracket) {
            if (buffer == '') return INVALID_HOST;
            failure = url.parseHost(buffer);
            if (failure) return failure;
            buffer = '';
            state = PORT;
            if (stateOverride == HOSTNAME) return;
          } else if (
            chr == EOF || chr == '/' || chr == '?' || chr == '#' ||
            (chr == '\\' && url.isSpecial())
          ) {
            if (url.isSpecial() && buffer == '') return INVALID_HOST;
            if (stateOverride && buffer == '' && (url.includesCredentials() || url.port !== null)) return;
            failure = url.parseHost(buffer);
            if (failure) return failure;
            buffer = '';
            state = PATH_START;
            if (stateOverride) return;
            continue;
          } else {
            if (chr == '[') seenBracket = true;
            else if (chr == ']') seenBracket = false;
            buffer += chr;
          } break;

        case PORT:
          if (exec$3(DIGIT, chr)) {
            buffer += chr;
          } else if (
            chr == EOF || chr == '/' || chr == '?' || chr == '#' ||
            (chr == '\\' && url.isSpecial()) ||
            stateOverride
          ) {
            if (buffer != '') {
              var port = parseInt$1(buffer, 10);
              if (port > 0xFFFF) return INVALID_PORT;
              url.port = (url.isSpecial() && port === specialSchemes[url.scheme]) ? null : port;
              buffer = '';
            }
            if (stateOverride) return;
            state = PATH_START;
            continue;
          } else return INVALID_PORT;
          break;

        case FILE:
          url.scheme = 'file';
          if (chr == '/' || chr == '\\') state = FILE_SLASH;
          else if (base && base.scheme == 'file') {
            if (chr == EOF) {
              url.host = base.host;
              url.path = arraySliceSimple$1(base.path);
              url.query = base.query;
            } else if (chr == '?') {
              url.host = base.host;
              url.path = arraySliceSimple$1(base.path);
              url.query = '';
              state = QUERY;
            } else if (chr == '#') {
              url.host = base.host;
              url.path = arraySliceSimple$1(base.path);
              url.query = base.query;
              url.fragment = '';
              state = FRAGMENT;
            } else {
              if (!startsWithWindowsDriveLetter(join$4(arraySliceSimple$1(codePoints, pointer), ''))) {
                url.host = base.host;
                url.path = arraySliceSimple$1(base.path);
                url.shortenPath();
              }
              state = PATH;
              continue;
            }
          } else {
            state = PATH;
            continue;
          } break;

        case FILE_SLASH:
          if (chr == '/' || chr == '\\') {
            state = FILE_HOST;
            break;
          }
          if (base && base.scheme == 'file' && !startsWithWindowsDriveLetter(join$4(arraySliceSimple$1(codePoints, pointer), ''))) {
            if (isWindowsDriveLetter(base.path[0], true)) push$6(url.path, base.path[0]);
            else url.host = base.host;
          }
          state = PATH;
          continue;

        case FILE_HOST:
          if (chr == EOF || chr == '/' || chr == '\\' || chr == '?' || chr == '#') {
            if (!stateOverride && isWindowsDriveLetter(buffer)) {
              state = PATH;
            } else if (buffer == '') {
              url.host = '';
              if (stateOverride) return;
              state = PATH_START;
            } else {
              failure = url.parseHost(buffer);
              if (failure) return failure;
              if (url.host == 'localhost') url.host = '';
              if (stateOverride) return;
              buffer = '';
              state = PATH_START;
            } continue;
          } else buffer += chr;
          break;

        case PATH_START:
          if (url.isSpecial()) {
            state = PATH;
            if (chr != '/' && chr != '\\') continue;
          } else if (!stateOverride && chr == '?') {
            url.query = '';
            state = QUERY;
          } else if (!stateOverride && chr == '#') {
            url.fragment = '';
            state = FRAGMENT;
          } else if (chr != EOF) {
            state = PATH;
            if (chr != '/') continue;
          } break;

        case PATH:
          if (
            chr == EOF || chr == '/' ||
            (chr == '\\' && url.isSpecial()) ||
            (!stateOverride && (chr == '?' || chr == '#'))
          ) {
            if (isDoubleDot(buffer)) {
              url.shortenPath();
              if (chr != '/' && !(chr == '\\' && url.isSpecial())) {
                push$6(url.path, '');
              }
            } else if (isSingleDot(buffer)) {
              if (chr != '/' && !(chr == '\\' && url.isSpecial())) {
                push$6(url.path, '');
              }
            } else {
              if (url.scheme == 'file' && !url.path.length && isWindowsDriveLetter(buffer)) {
                if (url.host) url.host = '';
                buffer = charAt$7(buffer, 0) + ':'; // normalize windows drive letter
              }
              push$6(url.path, buffer);
            }
            buffer = '';
            if (url.scheme == 'file' && (chr == EOF || chr == '?' || chr == '#')) {
              while (url.path.length > 1 && url.path[0] === '') {
                shift$2(url.path);
              }
            }
            if (chr == '?') {
              url.query = '';
              state = QUERY;
            } else if (chr == '#') {
              url.fragment = '';
              state = FRAGMENT;
            }
          } else {
            buffer += percentEncode(chr, pathPercentEncodeSet);
          } break;

        case CANNOT_BE_A_BASE_URL_PATH:
          if (chr == '?') {
            url.query = '';
            state = QUERY;
          } else if (chr == '#') {
            url.fragment = '';
            state = FRAGMENT;
          } else if (chr != EOF) {
            url.path[0] += percentEncode(chr, C0ControlPercentEncodeSet);
          } break;

        case QUERY:
          if (!stateOverride && chr == '#') {
            url.fragment = '';
            state = FRAGMENT;
          } else if (chr != EOF) {
            if (chr == "'" && url.isSpecial()) url.query += '%27';
            else if (chr == '#') url.query += '%23';
            else url.query += percentEncode(chr, C0ControlPercentEncodeSet);
          } break;

        case FRAGMENT:
          if (chr != EOF) url.fragment += percentEncode(chr, fragmentPercentEncodeSet);
          break;
      }

      pointer++;
    }
  },
  // https://url.spec.whatwg.org/#host-parsing
  parseHost: function (input) {
    var result, codePoints, index;
    if (charAt$7(input, 0) == '[') {
      if (charAt$7(input, input.length - 1) != ']') return INVALID_HOST;
      result = parseIPv6(stringSlice$8(input, 1, -1));
      if (!result) return INVALID_HOST;
      this.host = result;
    // opaque host
    } else if (!this.isSpecial()) {
      if (exec$3(FORBIDDEN_HOST_CODE_POINT_EXCLUDING_PERCENT, input)) return INVALID_HOST;
      result = '';
      codePoints = arrayFrom(input);
      for (index = 0; index < codePoints.length; index++) {
        result += percentEncode(codePoints[index], C0ControlPercentEncodeSet);
      }
      this.host = result;
    } else {
      input = stringPunycodeToAscii(input);
      if (exec$3(FORBIDDEN_HOST_CODE_POINT, input)) return INVALID_HOST;
      result = parseIPv4(input);
      if (result === null) return INVALID_HOST;
      this.host = result;
    }
  },
  // https://url.spec.whatwg.org/#cannot-have-a-username-password-port
  cannotHaveUsernamePasswordPort: function () {
    return !this.host || this.cannotBeABaseURL || this.scheme == 'file';
  },
  // https://url.spec.whatwg.org/#include-credentials
  includesCredentials: function () {
    return this.username != '' || this.password != '';
  },
  // https://url.spec.whatwg.org/#is-special
  isSpecial: function () {
    return hasOwnProperty_1$1(specialSchemes, this.scheme);
  },
  // https://url.spec.whatwg.org/#shorten-a-urls-path
  shortenPath: function () {
    var path = this.path;
    var pathSize = path.length;
    if (pathSize && (this.scheme != 'file' || pathSize != 1 || !isWindowsDriveLetter(path[0], true))) {
      path.length--;
    }
  },
  // https://url.spec.whatwg.org/#concept-url-serializer
  serialize: function () {
    var url = this;
    var scheme = url.scheme;
    var username = url.username;
    var password = url.password;
    var host = url.host;
    var port = url.port;
    var path = url.path;
    var query = url.query;
    var fragment = url.fragment;
    var output = scheme + ':';
    if (host !== null) {
      output += '//';
      if (url.includesCredentials()) {
        output += username + (password ? ':' + password : '') + '@';
      }
      output += serializeHost(host);
      if (port !== null) output += ':' + port;
    } else if (scheme == 'file') output += '//';
    output += url.cannotBeABaseURL ? path[0] : path.length ? '/' + join$4(path, '/') : '';
    if (query !== null) output += '?' + query;
    if (fragment !== null) output += '#' + fragment;
    return output;
  },
  // https://url.spec.whatwg.org/#dom-url-href
  setHref: function (href) {
    var failure = this.parse(href);
    if (failure) throw TypeError$8(failure);
    this.searchParams.update();
  },
  // https://url.spec.whatwg.org/#dom-url-origin
  getOrigin: function () {
    var scheme = this.scheme;
    var port = this.port;
    if (scheme == 'blob') try {
      return new URLConstructor(scheme.path[0]).origin;
    } catch (error) {
      return 'null';
    }
    if (scheme == 'file' || !this.isSpecial()) return 'null';
    return scheme + '://' + serializeHost(this.host) + (port !== null ? ':' + port : '');
  },
  // https://url.spec.whatwg.org/#dom-url-protocol
  getProtocol: function () {
    return this.scheme + ':';
  },
  setProtocol: function (protocol) {
    this.parse(toString_1$1(protocol) + ':', SCHEME_START);
  },
  // https://url.spec.whatwg.org/#dom-url-username
  getUsername: function () {
    return this.username;
  },
  setUsername: function (username) {
    var codePoints = arrayFrom(toString_1$1(username));
    if (this.cannotHaveUsernamePasswordPort()) return;
    this.username = '';
    for (var i = 0; i < codePoints.length; i++) {
      this.username += percentEncode(codePoints[i], userinfoPercentEncodeSet);
    }
  },
  // https://url.spec.whatwg.org/#dom-url-password
  getPassword: function () {
    return this.password;
  },
  setPassword: function (password) {
    var codePoints = arrayFrom(toString_1$1(password));
    if (this.cannotHaveUsernamePasswordPort()) return;
    this.password = '';
    for (var i = 0; i < codePoints.length; i++) {
      this.password += percentEncode(codePoints[i], userinfoPercentEncodeSet);
    }
  },
  // https://url.spec.whatwg.org/#dom-url-host
  getHost: function () {
    var host = this.host;
    var port = this.port;
    return host === null ? ''
      : port === null ? serializeHost(host)
      : serializeHost(host) + ':' + port;
  },
  setHost: function (host) {
    if (this.cannotBeABaseURL) return;
    this.parse(host, HOST);
  },
  // https://url.spec.whatwg.org/#dom-url-hostname
  getHostname: function () {
    var host = this.host;
    return host === null ? '' : serializeHost(host);
  },
  setHostname: function (hostname) {
    if (this.cannotBeABaseURL) return;
    this.parse(hostname, HOSTNAME);
  },
  // https://url.spec.whatwg.org/#dom-url-port
  getPort: function () {
    var port = this.port;
    return port === null ? '' : toString_1$1(port);
  },
  setPort: function (port) {
    if (this.cannotHaveUsernamePasswordPort()) return;
    port = toString_1$1(port);
    if (port == '') this.port = null;
    else this.parse(port, PORT);
  },
  // https://url.spec.whatwg.org/#dom-url-pathname
  getPathname: function () {
    var path = this.path;
    return this.cannotBeABaseURL ? path[0] : path.length ? '/' + join$4(path, '/') : '';
  },
  setPathname: function (pathname) {
    if (this.cannotBeABaseURL) return;
    this.path = [];
    this.parse(pathname, PATH_START);
  },
  // https://url.spec.whatwg.org/#dom-url-search
  getSearch: function () {
    var query = this.query;
    return query ? '?' + query : '';
  },
  setSearch: function (search) {
    search = toString_1$1(search);
    if (search == '') {
      this.query = null;
    } else {
      if ('?' == charAt$7(search, 0)) search = stringSlice$8(search, 1);
      this.query = '';
      this.parse(search, QUERY);
    }
    this.searchParams.update();
  },
  // https://url.spec.whatwg.org/#dom-url-searchparams
  getSearchParams: function () {
    return this.searchParams.facade;
  },
  // https://url.spec.whatwg.org/#dom-url-hash
  getHash: function () {
    var fragment = this.fragment;
    return fragment ? '#' + fragment : '';
  },
  setHash: function (hash) {
    hash = toString_1$1(hash);
    if (hash == '') {
      this.fragment = null;
      return;
    }
    if ('#' == charAt$7(hash, 0)) hash = stringSlice$8(hash, 1);
    this.fragment = '';
    this.parse(hash, FRAGMENT);
  },
  update: function () {
    this.query = this.searchParams.serialize() || null;
  }
};

// `URL` constructor
// https://url.spec.whatwg.org/#url-class
var URLConstructor = function URL(url /* , base */) {
  var that = anInstance$1(this, URLPrototype);
  var base = validateArgumentsLength$1(arguments.length, 1) > 1 ? arguments[1] : undefined;
  var state = setInternalState$7(that, new URLState(url, false, base));
  if (!descriptors$1) {
    that.href = state.serialize();
    that.origin = state.getOrigin();
    that.protocol = state.getProtocol();
    that.username = state.getUsername();
    that.password = state.getPassword();
    that.host = state.getHost();
    that.hostname = state.getHostname();
    that.port = state.getPort();
    that.pathname = state.getPathname();
    that.search = state.getSearch();
    that.searchParams = state.getSearchParams();
    that.hash = state.getHash();
  }
};

var URLPrototype = URLConstructor.prototype;

var accessorDescriptor = function (getter, setter) {
  return {
    get: function () {
      return getInternalURLState(this)[getter]();
    },
    set: setter && function (value) {
      return getInternalURLState(this)[setter](value);
    },
    configurable: true,
    enumerable: true
  };
};

if (descriptors$1) {
  // `URL.prototype.href` accessors pair
  // https://url.spec.whatwg.org/#dom-url-href
  defineBuiltInAccessor(URLPrototype, 'href', accessorDescriptor('serialize', 'setHref'));
  // `URL.prototype.origin` getter
  // https://url.spec.whatwg.org/#dom-url-origin
  defineBuiltInAccessor(URLPrototype, 'origin', accessorDescriptor('getOrigin'));
  // `URL.prototype.protocol` accessors pair
  // https://url.spec.whatwg.org/#dom-url-protocol
  defineBuiltInAccessor(URLPrototype, 'protocol', accessorDescriptor('getProtocol', 'setProtocol'));
  // `URL.prototype.username` accessors pair
  // https://url.spec.whatwg.org/#dom-url-username
  defineBuiltInAccessor(URLPrototype, 'username', accessorDescriptor('getUsername', 'setUsername'));
  // `URL.prototype.password` accessors pair
  // https://url.spec.whatwg.org/#dom-url-password
  defineBuiltInAccessor(URLPrototype, 'password', accessorDescriptor('getPassword', 'setPassword'));
  // `URL.prototype.host` accessors pair
  // https://url.spec.whatwg.org/#dom-url-host
  defineBuiltInAccessor(URLPrototype, 'host', accessorDescriptor('getHost', 'setHost'));
  // `URL.prototype.hostname` accessors pair
  // https://url.spec.whatwg.org/#dom-url-hostname
  defineBuiltInAccessor(URLPrototype, 'hostname', accessorDescriptor('getHostname', 'setHostname'));
  // `URL.prototype.port` accessors pair
  // https://url.spec.whatwg.org/#dom-url-port
  defineBuiltInAccessor(URLPrototype, 'port', accessorDescriptor('getPort', 'setPort'));
  // `URL.prototype.pathname` accessors pair
  // https://url.spec.whatwg.org/#dom-url-pathname
  defineBuiltInAccessor(URLPrototype, 'pathname', accessorDescriptor('getPathname', 'setPathname'));
  // `URL.prototype.search` accessors pair
  // https://url.spec.whatwg.org/#dom-url-search
  defineBuiltInAccessor(URLPrototype, 'search', accessorDescriptor('getSearch', 'setSearch'));
  // `URL.prototype.searchParams` getter
  // https://url.spec.whatwg.org/#dom-url-searchparams
  defineBuiltInAccessor(URLPrototype, 'searchParams', accessorDescriptor('getSearchParams'));
  // `URL.prototype.hash` accessors pair
  // https://url.spec.whatwg.org/#dom-url-hash
  defineBuiltInAccessor(URLPrototype, 'hash', accessorDescriptor('getHash', 'setHash'));
}

// `URL.prototype.toJSON` method
// https://url.spec.whatwg.org/#dom-url-tojson
defineBuiltIn$1(URLPrototype, 'toJSON', function toJSON() {
  return getInternalURLState(this).serialize();
}, { enumerable: true });

// `URL.prototype.toString` method
// https://url.spec.whatwg.org/#URL-stringification-behavior
defineBuiltIn$1(URLPrototype, 'toString', function toString() {
  return getInternalURLState(this).serialize();
}, { enumerable: true });

if (NativeURL) {
  var nativeCreateObjectURL = NativeURL.createObjectURL;
  var nativeRevokeObjectURL = NativeURL.revokeObjectURL;
  // `URL.createObjectURL` method
  // https://developer.mozilla.org/en-US/docs/Web/API/URL/createObjectURL
  if (nativeCreateObjectURL) defineBuiltIn$1(URLConstructor, 'createObjectURL', functionBindContext$1(nativeCreateObjectURL, NativeURL));
  // `URL.revokeObjectURL` method
  // https://developer.mozilla.org/en-US/docs/Web/API/URL/revokeObjectURL
  if (nativeRevokeObjectURL) defineBuiltIn$1(URLConstructor, 'revokeObjectURL', functionBindContext$1(nativeRevokeObjectURL, NativeURL));
}

setToStringTag$1(URLConstructor, 'URL');

_export$1({ global: true, constructor: true, forced: !urlConstructorDetection$1, sham: !descriptors$1 }, {
  URL: URLConstructor
});

const PROTOCOL_MAP = {
  "http:": http.request,
  "https:": https.request
};
const HTTPS_AGENT = new https.Agent({
  keepAlive: true
});
const HTTP_AGENT = new http.Agent({
  keepAlive: true
});
const AGENT_MAP = {
  "http:": HTTP_AGENT,
  "https:": HTTPS_AGENT
};
const GET = "GET";
const POST = "POST";
const SECURE_PROTOCOL = "https:";
const UTF8_ENCODING = "utf8";
const ERROR = "error";
const PARSE_ERROR = "parse_error";
const ABORT = "abort";
const TIMEOUT = "timeout";
const ABORTED = "Request aborted";
const TIMED_OUT = "Request timed out";
const RESPONSE_EVENT = "response";
const DATA_EVENT = "data";
const END_EVENT = "end";
const ABORT_EVENT = "abort";
const TIMEOUT_EVENT = "timeout";
const ERROR_EVENT = "error";
const SOCKET_EVENT = "socket";
const LOOKUP_EVENT = "lookup";
const CONNECT_EVENT = "connect";
const SECURE_CONNECT_EVENT = "secureConnect";
const OK = 200;
const NOT_MODIFIED$1 = 304;
const INVALID_URL = "Request URL is invalid.  Must use either http or https protocol.";

function creatError(status, err, timings, statusCode) {
  let message;

  try {
    message = typeof err === "object" ? JSON.stringify(err) : err;
  } catch (stringifyErr) {
    // Catches error converting circular structure to json
    message = err.message;
  }

  return {
    status,
    message,
    timings,
    statusCode
  };
}

function makeHeadersFetchCompatible(headers = {}) {
  return {
    get: headerName => headers[headerName.toLowerCase()]
  };
}

function createResponse(data, response, timings, status, headers) {
  return {
    data,
    response,
    timings,
    status,
    headers: makeHeadersFetchCompatible(headers),
    ok: status === OK,
    json: () => Promise.resolve(data)
  };
}
/**
 * We need to maintain cross-compatibility with browser fetch impl,
 * so this returns a response object with the same interface.
 * @return {import("../types/FetchResponse").FetchResponse}
 */


function createSuccess(data, response, timings, status, headers) {
  const fetchResponse = createResponse(data, response, timings, status, headers); // eslint-disable-next-line prefer-rest-params

  fetchResponse.clone = () => createResponse(...arguments);

  return fetchResponse;
}

function getTimings(timings, responseContent) {
  if (!timings.socket) {
    timings.socket = 0;
  }

  if (!timings.lookup) {
    timings.lookup = timings.socket;
  }

  if (!timings.connect) {
    timings.connect = timings.lookup;
  }

  if (!timings.secureConnect) {
    timings.secureConnect = timings.connect;
  }

  if (!timings.response) {
    timings.response = timings.secureConnect;
  }

  const requestTimings = {
    dns: timings.lookup - timings.socket,
    tls: timings.secureConnect - timings.connect,
    timeToFirstByte: timings.response - timings.secureConnect,
    download: timings.end - timings.response,
    parsingTime: timings.parsingTime
  };

  if (responseContent) {
    requestTimings.responseSize = Buffer.byteLength(responseContent, ["utf8"]);
  }

  return requestTimings;
}

function createRequestOptions(host, path, queryParams, requestOpts) {
  const {
    body,
    headers,
    agent,
    protocol = SECURE_PROTOCOL
  } = requestOpts;
  return {
    method: body ? POST : GET,
    protocol,
    host,
    path: queryParams ? `${path}${queryParams}` : path,
    headers,
    agent: agent || AGENT_MAP[protocol]
  };
}

function executeRequest(options, body, timeout, callback, requestImpl) {
  const timings = {};
  const chunks = [];
  const startTimeNow = performanceNow();
  const request = requestImpl(options, res => {
    res.setEncoding(UTF8_ENCODING);
  });

  const onLookup = () => {
    timings.lookup = performanceNow() - startTimeNow;
  };

  const onConnect = () => {
    timings.connect = performanceNow() - startTimeNow;
  };

  const onSecureConnect = () => {
    timings.secureConnect = performanceNow() - startTimeNow;
  };

  const onError = err => {
    callback(creatError(ERROR, err, getTimings(timings)));

    if (request.socket) {
      request.socket.removeListener(LOOKUP_EVENT, onLookup);
      request.socket.removeListener(CONNECT_EVENT, onConnect);
      request.socket.removeListener(SECURE_CONNECT_EVENT, onSecureConnect);
    }
  };

  const onSocket = socket => {
    timings.socket = performanceNow() - startTimeNow;

    if (socket._connecting || socket.connecting) {
      socket.once(LOOKUP_EVENT, onLookup);
      socket.once(CONNECT_EVENT, onConnect);
      socket.once(SECURE_CONNECT_EVENT, onSecureConnect);
      socket.once(ERROR_EVENT, onError);
    }
  };

  const onResponse = response => {
    timings.response = performanceNow() - startTimeNow;
    response.on(DATA_EVENT, chunk => {
      chunks.push(chunk);
    });
    response.once(END_EVENT, () => {
      const content = chunks.join("");
      timings.end = performanceNow() - startTimeNow;

      if (response.statusCode !== OK && response.statusCode !== NOT_MODIFIED$1) {
        callback(creatError(ERROR, content, getTimings(timings), response.statusCode));
        return;
      }

      try {
        const parsingStartTime = performanceNow();
        const data = JSON.parse(content);
        timings.parsingTime = performanceNow() - parsingStartTime;
        callback(null, createSuccess(data, content, getTimings(timings, content), response.statusCode, response.headers));
      } catch (error) {
        callback(creatError(PARSE_ERROR, error, getTimings(timings), response.statusCode));
      }
    });
  };

  request.once(RESPONSE_EVENT, onResponse);
  request.once(SOCKET_EVENT, onSocket);
  request.once(ABORT_EVENT, () => callback(creatError(ABORT, ABORTED, getTimings(timings))));
  request.once(TIMEOUT_EVENT, () => callback(creatError(TIMEOUT, TIMED_OUT, getTimings(timings))));
  request.once(ERROR_EVENT, onError);
  request.setTimeout(timeout);

  if (options.method === POST) {
    request.write(body);
  }

  request.end();
}

function determineRequestImpl(protocol, requestImpl) {
  if (requestImpl) {
    return requestImpl;
  }

  const reqImpl = PROTOCOL_MAP[protocol];

  if (!reqImpl) {
    throw new Error(INVALID_URL);
  }

  return reqImpl;
}
/**
 * Invokes the REST service using the supplied settings and parameters.
 * @param {String} host The server host.
 * @param {String} path The base URL to invoke.
 * @param {Object.<String, Object>} queryParams A map of query parameters and their values.
 * @param {Object} requestOpts Various request options:  body, headers, timeout, agent
 * @returns {Promise} A {@link https://www.promisejs.org/|Promise} object.
 */


function handleRequest(host, path, queryParams, requestOpts, requestImpl) {
  const {
    body,
    protocol,
    timeout = 10000
  } = requestOpts;
  const options = createRequestOptions(host, path, queryParams, requestOpts);
  return new Promise((resolve, reject) => {
    const callback = (err, response) => {
      if (err) {
        reject(err);
        return;
      }

      resolve(response);
    };

    executeRequest(options, body, timeout, callback, determineRequestImpl(protocol, requestImpl));
  });
}
/**
 * Fetch implementation that uses builtin https module and listens to socket events to capture telemetry data for requests.
 * The request/response interface align with the browser fetch implementation to preserve cross-compatibility.
 * @param {String} url The request url
 * @param {Object} requestOpts Options that can be used to configure the request (optional)
 * @param {Function} requestImpl Low-level request function that can be used to override the default http/s module (optional)
 * @return {Promise<import("../types/FetchResponse").FetchResponse>}
 */


function fetchWithTelemetry(url, requestOpts, requestImpl) {
  const urlObject = new URL(url);
  const host = urlObject.hostname;
  const path = urlObject.pathname;
  const queryParams = urlObject.search;
  requestOpts.protocol = urlObject.protocol;
  return handleRequest(host, path, queryParams, requestOpts, requestImpl);
}

function getFetchWithTelemetry(requestImpl) {
  return function fetch(url, options = {}) {
    return fetchWithTelemetry(url, options, requestImpl);
  };
}

var check$2 = function (it) {
  return it && it.Math == Math && it;
};

// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028
var global_1$2 =
  // eslint-disable-next-line es/no-global-this -- safe
  check$2(typeof globalThis == 'object' && globalThis) ||
  check$2(typeof window == 'object' && window) ||
  // eslint-disable-next-line no-restricted-globals -- safe
  check$2(typeof self == 'object' && self) ||
  check$2(typeof commonjsGlobal == 'object' && commonjsGlobal) ||
  // eslint-disable-next-line no-new-func -- fallback
  (function () { return this; })() || Function('return this')();

var fails$2 = function (exec) {
  try {
    return !!exec();
  } catch (error) {
    return true;
  }
};

// Detect IE8's incomplete defineProperty implementation
var descriptors$2 = !fails$2(function () {
  // eslint-disable-next-line es/no-object-defineproperty -- required for testing
  return Object.defineProperty({}, 1, { get: function () { return 7; } })[1] != 7;
});

var functionBindNative$2 = !fails$2(function () {
  // eslint-disable-next-line es/no-function-prototype-bind -- safe
  var test = (function () { /* empty */ }).bind();
  // eslint-disable-next-line no-prototype-builtins -- safe
  return typeof test != 'function' || test.hasOwnProperty('prototype');
});

var call$6 = Function.prototype.call;

var functionCall$2 = functionBindNative$2 ? call$6.bind(call$6) : function () {
  return call$6.apply(call$6, arguments);
};

var $propertyIsEnumerable$2 = {}.propertyIsEnumerable;
// eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe
var getOwnPropertyDescriptor$8 = Object.getOwnPropertyDescriptor;

// Nashorn ~ JDK8 bug
var NASHORN_BUG$2 = getOwnPropertyDescriptor$8 && !$propertyIsEnumerable$2.call({ 1: 2 }, 1);

// `Object.prototype.propertyIsEnumerable` method implementation
// https://tc39.es/ecma262/#sec-object.prototype.propertyisenumerable
var f$e = NASHORN_BUG$2 ? function propertyIsEnumerable(V) {
  var descriptor = getOwnPropertyDescriptor$8(this, V);
  return !!descriptor && descriptor.enumerable;
} : $propertyIsEnumerable$2;

var objectPropertyIsEnumerable$2 = {
	f: f$e
};

var createPropertyDescriptor$2 = function (bitmap, value) {
  return {
    enumerable: !(bitmap & 1),
    configurable: !(bitmap & 2),
    writable: !(bitmap & 4),
    value: value
  };
};

var FunctionPrototype$6 = Function.prototype;
var call$7 = FunctionPrototype$6.call;
var uncurryThisWithBind$2 = functionBindNative$2 && FunctionPrototype$6.bind.bind(call$7, call$7);

var functionUncurryThisRaw$2 = function (fn) {
  return functionBindNative$2 ? uncurryThisWithBind$2(fn) : function () {
    return call$7.apply(fn, arguments);
  };
};

var toString$4 = functionUncurryThisRaw$2({}.toString);
var stringSlice$9 = functionUncurryThisRaw$2(''.slice);

var classofRaw$2 = function (it) {
  return stringSlice$9(toString$4(it), 8, -1);
};

var functionUncurryThis$2 = function (fn) {
  // Nashorn bug:
  //   https://github.com/zloirock/core-js/issues/1128
  //   https://github.com/zloirock/core-js/issues/1130
  if (classofRaw$2(fn) === 'Function') return functionUncurryThisRaw$2(fn);
};

var $Object$a = Object;
var split$6 = functionUncurryThis$2(''.split);

// fallback for non-array-like ES3 and non-enumerable old V8 strings
var indexedObject$2 = fails$2(function () {
  // throws an error in rhino, see https://github.com/mozilla/rhino/issues/346
  // eslint-disable-next-line no-prototype-builtins -- safe
  return !$Object$a('z').propertyIsEnumerable(0);
}) ? function (it) {
  return classofRaw$2(it) == 'String' ? split$6(it, '') : $Object$a(it);
} : $Object$a;

// we can't use just `it == null` since of `document.all` special case
// https://tc39.es/ecma262/#sec-IsHTMLDDA-internal-slot-aec
var isNullOrUndefined$2 = function (it) {
  return it === null || it === undefined;
};

var $TypeError$r = TypeError;

// `RequireObjectCoercible` abstract operation
// https://tc39.es/ecma262/#sec-requireobjectcoercible
var requireObjectCoercible$2 = function (it) {
  if (isNullOrUndefined$2(it)) throw $TypeError$r("Can't call method on " + it);
  return it;
};

// toObject with fallback for non-array-like ES3 strings



var toIndexedObject$2 = function (it) {
  return indexedObject$2(requireObjectCoercible$2(it));
};

var documentAll$6 = typeof document == 'object' && document.all;

// https://tc39.es/ecma262/#sec-IsHTMLDDA-internal-slot
var IS_HTMLDDA$2 = typeof documentAll$6 == 'undefined' && documentAll$6 !== undefined;

var documentAll_1$2 = {
  all: documentAll$6,
  IS_HTMLDDA: IS_HTMLDDA$2
};

var documentAll$7 = documentAll_1$2.all;

// `IsCallable` abstract operation
// https://tc39.es/ecma262/#sec-iscallable
var isCallable$2 = documentAll_1$2.IS_HTMLDDA ? function (argument) {
  return typeof argument == 'function' || argument === documentAll$7;
} : function (argument) {
  return typeof argument == 'function';
};

var documentAll$8 = documentAll_1$2.all;

var isObject$3 = documentAll_1$2.IS_HTMLDDA ? function (it) {
  return typeof it == 'object' ? it !== null : isCallable$2(it) || it === documentAll$8;
} : function (it) {
  return typeof it == 'object' ? it !== null : isCallable$2(it);
};

var aFunction$2 = function (argument) {
  return isCallable$2(argument) ? argument : undefined;
};

var getBuiltIn$2 = function (namespace, method) {
  return arguments.length < 2 ? aFunction$2(global_1$2[namespace]) : global_1$2[namespace] && global_1$2[namespace][method];
};

var objectIsPrototypeOf$2 = functionUncurryThis$2({}.isPrototypeOf);

var engineUserAgent$2 = getBuiltIn$2('navigator', 'userAgent') || '';

var process$9 = global_1$2.process;
var Deno$3 = global_1$2.Deno;
var versions$2 = process$9 && process$9.versions || Deno$3 && Deno$3.version;
var v8$2 = versions$2 && versions$2.v8;
var match$2, version$2;

if (v8$2) {
  match$2 = v8$2.split('.');
  // in old Chrome, versions of V8 isn't V8 = Chrome / 10
  // but their correct versions are not interesting for us
  version$2 = match$2[0] > 0 && match$2[0] < 4 ? 1 : +(match$2[0] + match$2[1]);
}

// BrowserFS NodeJS `process` polyfill incorrectly set `.v8` to `0.0`
// so check `userAgent` even if `.v8` exists, but 0
if (!version$2 && engineUserAgent$2) {
  match$2 = engineUserAgent$2.match(/Edge\/(\d+)/);
  if (!match$2 || match$2[1] >= 74) {
    match$2 = engineUserAgent$2.match(/Chrome\/(\d+)/);
    if (match$2) version$2 = +match$2[1];
  }
}

var engineV8Version$2 = version$2;

/* eslint-disable es/no-symbol -- required for testing */



// eslint-disable-next-line es/no-object-getownpropertysymbols -- required for testing
var symbolConstructorDetection$2 = !!Object.getOwnPropertySymbols && !fails$2(function () {
  var symbol = Symbol();
  // Chrome 38 Symbol has incorrect toString conversion
  // `get-own-property-symbols` polyfill symbols converted to object are not Symbol instances
  return !String(symbol) || !(Object(symbol) instanceof Symbol) ||
    // Chrome 38-40 symbols are not inherited from DOM collections prototypes to instances
    !Symbol.sham && engineV8Version$2 && engineV8Version$2 < 41;
});

/* eslint-disable es/no-symbol -- required for testing */


var useSymbolAsUid$2 = symbolConstructorDetection$2
  && !Symbol.sham
  && typeof Symbol.iterator == 'symbol';

var $Object$b = Object;

var isSymbol$2 = useSymbolAsUid$2 ? function (it) {
  return typeof it == 'symbol';
} : function (it) {
  var $Symbol = getBuiltIn$2('Symbol');
  return isCallable$2($Symbol) && objectIsPrototypeOf$2($Symbol.prototype, $Object$b(it));
};

var $String$8 = String;

var tryToString$2 = function (argument) {
  try {
    return $String$8(argument);
  } catch (error) {
    return 'Object';
  }
};

var $TypeError$s = TypeError;

// `Assert: IsCallable(argument) is true`
var aCallable$2 = function (argument) {
  if (isCallable$2(argument)) return argument;
  throw $TypeError$s(tryToString$2(argument) + ' is not a function');
};

// `GetMethod` abstract operation
// https://tc39.es/ecma262/#sec-getmethod
var getMethod$2 = function (V, P) {
  var func = V[P];
  return isNullOrUndefined$2(func) ? undefined : aCallable$2(func);
};

var $TypeError$t = TypeError;

// `OrdinaryToPrimitive` abstract operation
// https://tc39.es/ecma262/#sec-ordinarytoprimitive
var ordinaryToPrimitive$2 = function (input, pref) {
  var fn, val;
  if (pref === 'string' && isCallable$2(fn = input.toString) && !isObject$3(val = functionCall$2(fn, input))) return val;
  if (isCallable$2(fn = input.valueOf) && !isObject$3(val = functionCall$2(fn, input))) return val;
  if (pref !== 'string' && isCallable$2(fn = input.toString) && !isObject$3(val = functionCall$2(fn, input))) return val;
  throw $TypeError$t("Can't convert object to primitive value");
};

// eslint-disable-next-line es/no-object-defineproperty -- safe
var defineProperty$a = Object.defineProperty;

var defineGlobalProperty$2 = function (key, value) {
  try {
    defineProperty$a(global_1$2, key, { value: value, configurable: true, writable: true });
  } catch (error) {
    global_1$2[key] = value;
  } return value;
};

var SHARED$2 = '__core-js_shared__';
var store$4 = global_1$2[SHARED$2] || defineGlobalProperty$2(SHARED$2, {});

var sharedStore$2 = store$4;

var shared$2 = createCommonjsModule(function (module) {
(module.exports = function (key, value) {
  return sharedStore$2[key] || (sharedStore$2[key] = value !== undefined ? value : {});
})('versions', []).push({
  version: '3.25.5',
  mode:  'global',
  copyright: 'Â© 2014-2022 Denis Pushkarev (zloirock.ru)',
  license: 'https://github.com/zloirock/core-js/blob/v3.25.5/LICENSE',
  source: 'https://github.com/zloirock/core-js'
});
});

var $Object$c = Object;

// `ToObject` abstract operation
// https://tc39.es/ecma262/#sec-toobject
var toObject$3 = function (argument) {
  return $Object$c(requireObjectCoercible$2(argument));
};

var hasOwnProperty$5 = functionUncurryThis$2({}.hasOwnProperty);

// `HasOwnProperty` abstract operation
// https://tc39.es/ecma262/#sec-hasownproperty
// eslint-disable-next-line es/no-object-hasown -- safe
var hasOwnProperty_1$2 = Object.hasOwn || function hasOwn(it, key) {
  return hasOwnProperty$5(toObject$3(it), key);
};

var id$2 = 0;
var postfix$2 = Math.random();
var toString$5 = functionUncurryThis$2(1.0.toString);

var uid$2 = function (key) {
  return 'Symbol(' + (key === undefined ? '' : key) + ')_' + toString$5(++id$2 + postfix$2, 36);
};

var WellKnownSymbolsStore$2 = shared$2('wks');
var Symbol$3 = global_1$2.Symbol;
var symbolFor$2 = Symbol$3 && Symbol$3['for'];
var createWellKnownSymbol$2 = useSymbolAsUid$2 ? Symbol$3 : Symbol$3 && Symbol$3.withoutSetter || uid$2;

var wellKnownSymbol$2 = function (name) {
  if (!hasOwnProperty_1$2(WellKnownSymbolsStore$2, name) || !(symbolConstructorDetection$2 || typeof WellKnownSymbolsStore$2[name] == 'string')) {
    var description = 'Symbol.' + name;
    if (symbolConstructorDetection$2 && hasOwnProperty_1$2(Symbol$3, name)) {
      WellKnownSymbolsStore$2[name] = Symbol$3[name];
    } else if (useSymbolAsUid$2 && symbolFor$2) {
      WellKnownSymbolsStore$2[name] = symbolFor$2(description);
    } else {
      WellKnownSymbolsStore$2[name] = createWellKnownSymbol$2(description);
    }
  } return WellKnownSymbolsStore$2[name];
};

var $TypeError$u = TypeError;
var TO_PRIMITIVE$2 = wellKnownSymbol$2('toPrimitive');

// `ToPrimitive` abstract operation
// https://tc39.es/ecma262/#sec-toprimitive
var toPrimitive$2 = function (input, pref) {
  if (!isObject$3(input) || isSymbol$2(input)) return input;
  var exoticToPrim = getMethod$2(input, TO_PRIMITIVE$2);
  var result;
  if (exoticToPrim) {
    if (pref === undefined) pref = 'default';
    result = functionCall$2(exoticToPrim, input, pref);
    if (!isObject$3(result) || isSymbol$2(result)) return result;
    throw $TypeError$u("Can't convert object to primitive value");
  }
  if (pref === undefined) pref = 'number';
  return ordinaryToPrimitive$2(input, pref);
};

// `ToPropertyKey` abstract operation
// https://tc39.es/ecma262/#sec-topropertykey
var toPropertyKey$2 = function (argument) {
  var key = toPrimitive$2(argument, 'string');
  return isSymbol$2(key) ? key : key + '';
};

var document$7 = global_1$2.document;
// typeof document.createElement is 'object' in old IE
var EXISTS$4 = isObject$3(document$7) && isObject$3(document$7.createElement);

var documentCreateElement$2 = function (it) {
  return EXISTS$4 ? document$7.createElement(it) : {};
};

// Thanks to IE8 for its funny defineProperty
var ie8DomDefine$2 = !descriptors$2 && !fails$2(function () {
  // eslint-disable-next-line es/no-object-defineproperty -- required for testing
  return Object.defineProperty(documentCreateElement$2('div'), 'a', {
    get: function () { return 7; }
  }).a != 7;
});

// eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe
var $getOwnPropertyDescriptor$4 = Object.getOwnPropertyDescriptor;

// `Object.getOwnPropertyDescriptor` method
// https://tc39.es/ecma262/#sec-object.getownpropertydescriptor
var f$f = descriptors$2 ? $getOwnPropertyDescriptor$4 : function getOwnPropertyDescriptor(O, P) {
  O = toIndexedObject$2(O);
  P = toPropertyKey$2(P);
  if (ie8DomDefine$2) try {
    return $getOwnPropertyDescriptor$4(O, P);
  } catch (error) { /* empty */ }
  if (hasOwnProperty_1$2(O, P)) return createPropertyDescriptor$2(!functionCall$2(objectPropertyIsEnumerable$2.f, O, P), O[P]);
};

var objectGetOwnPropertyDescriptor$2 = {
	f: f$f
};

// V8 ~ Chrome 36-
// https://bugs.chromium.org/p/v8/issues/detail?id=3334
var v8PrototypeDefineBug$2 = descriptors$2 && fails$2(function () {
  // eslint-disable-next-line es/no-object-defineproperty -- required for testing
  return Object.defineProperty(function () { /* empty */ }, 'prototype', {
    value: 42,
    writable: false
  }).prototype != 42;
});

var $String$9 = String;
var $TypeError$v = TypeError;

// `Assert: Type(argument) is Object`
var anObject$2 = function (argument) {
  if (isObject$3(argument)) return argument;
  throw $TypeError$v($String$9(argument) + ' is not an object');
};

var $TypeError$w = TypeError;
// eslint-disable-next-line es/no-object-defineproperty -- safe
var $defineProperty$2 = Object.defineProperty;
// eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe
var $getOwnPropertyDescriptor$5 = Object.getOwnPropertyDescriptor;
var ENUMERABLE$2 = 'enumerable';
var CONFIGURABLE$4 = 'configurable';
var WRITABLE$2 = 'writable';

// `Object.defineProperty` method
// https://tc39.es/ecma262/#sec-object.defineproperty
var f$g = descriptors$2 ? v8PrototypeDefineBug$2 ? function defineProperty(O, P, Attributes) {
  anObject$2(O);
  P = toPropertyKey$2(P);
  anObject$2(Attributes);
  if (typeof O === 'function' && P === 'prototype' && 'value' in Attributes && WRITABLE$2 in Attributes && !Attributes[WRITABLE$2]) {
    var current = $getOwnPropertyDescriptor$5(O, P);
    if (current && current[WRITABLE$2]) {
      O[P] = Attributes.value;
      Attributes = {
        configurable: CONFIGURABLE$4 in Attributes ? Attributes[CONFIGURABLE$4] : current[CONFIGURABLE$4],
        enumerable: ENUMERABLE$2 in Attributes ? Attributes[ENUMERABLE$2] : current[ENUMERABLE$2],
        writable: false
      };
    }
  } return $defineProperty$2(O, P, Attributes);
} : $defineProperty$2 : function defineProperty(O, P, Attributes) {
  anObject$2(O);
  P = toPropertyKey$2(P);
  anObject$2(Attributes);
  if (ie8DomDefine$2) try {
    return $defineProperty$2(O, P, Attributes);
  } catch (error) { /* empty */ }
  if ('get' in Attributes || 'set' in Attributes) throw $TypeError$w('Accessors not supported');
  if ('value' in Attributes) O[P] = Attributes.value;
  return O;
};

var objectDefineProperty$2 = {
	f: f$g
};

var createNonEnumerableProperty$2 = descriptors$2 ? function (object, key, value) {
  return objectDefineProperty$2.f(object, key, createPropertyDescriptor$2(1, value));
} : function (object, key, value) {
  object[key] = value;
  return object;
};

var FunctionPrototype$7 = Function.prototype;
// eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe
var getDescriptor$2 = descriptors$2 && Object.getOwnPropertyDescriptor;

var EXISTS$5 = hasOwnProperty_1$2(FunctionPrototype$7, 'name');
// additional protection from minified / mangled / dropped function names
var PROPER$2 = EXISTS$5 && (function something() { /* empty */ }).name === 'something';
var CONFIGURABLE$5 = EXISTS$5 && (!descriptors$2 || (descriptors$2 && getDescriptor$2(FunctionPrototype$7, 'name').configurable));

var functionName$2 = {
  EXISTS: EXISTS$5,
  PROPER: PROPER$2,
  CONFIGURABLE: CONFIGURABLE$5
};

var functionToString$2 = functionUncurryThis$2(Function.toString);

// this helper broken in `core-js@3.4.1-3.4.4`, so we can't use `shared` helper
if (!isCallable$2(sharedStore$2.inspectSource)) {
  sharedStore$2.inspectSource = function (it) {
    return functionToString$2(it);
  };
}

var inspectSource$2 = sharedStore$2.inspectSource;

var WeakMap$4 = global_1$2.WeakMap;

var weakMapBasicDetection$2 = isCallable$2(WeakMap$4) && /native code/.test(String(WeakMap$4));

var keys$3 = shared$2('keys');

var sharedKey$2 = function (key) {
  return keys$3[key] || (keys$3[key] = uid$2(key));
};

var hiddenKeys$4 = {};

var OBJECT_ALREADY_INITIALIZED$2 = 'Object already initialized';
var TypeError$9 = global_1$2.TypeError;
var WeakMap$5 = global_1$2.WeakMap;
var set$4, get$2, has$2;

var enforce$2 = function (it) {
  return has$2(it) ? get$2(it) : set$4(it, {});
};

var getterFor$2 = function (TYPE) {
  return function (it) {
    var state;
    if (!isObject$3(it) || (state = get$2(it)).type !== TYPE) {
      throw TypeError$9('Incompatible receiver, ' + TYPE + ' required');
    } return state;
  };
};

if (weakMapBasicDetection$2 || sharedStore$2.state) {
  var store$5 = sharedStore$2.state || (sharedStore$2.state = new WeakMap$5());
  /* eslint-disable no-self-assign -- prototype methods protection */
  store$5.get = store$5.get;
  store$5.has = store$5.has;
  store$5.set = store$5.set;
  /* eslint-enable no-self-assign -- prototype methods protection */
  set$4 = function (it, metadata) {
    if (store$5.has(it)) throw TypeError$9(OBJECT_ALREADY_INITIALIZED$2);
    metadata.facade = it;
    store$5.set(it, metadata);
    return metadata;
  };
  get$2 = function (it) {
    return store$5.get(it) || {};
  };
  has$2 = function (it) {
    return store$5.has(it);
  };
} else {
  var STATE$2 = sharedKey$2('state');
  hiddenKeys$4[STATE$2] = true;
  set$4 = function (it, metadata) {
    if (hasOwnProperty_1$2(it, STATE$2)) throw TypeError$9(OBJECT_ALREADY_INITIALIZED$2);
    metadata.facade = it;
    createNonEnumerableProperty$2(it, STATE$2, metadata);
    return metadata;
  };
  get$2 = function (it) {
    return hasOwnProperty_1$2(it, STATE$2) ? it[STATE$2] : {};
  };
  has$2 = function (it) {
    return hasOwnProperty_1$2(it, STATE$2);
  };
}

var internalState$2 = {
  set: set$4,
  get: get$2,
  has: has$2,
  enforce: enforce$2,
  getterFor: getterFor$2
};

var makeBuiltIn_1$2 = createCommonjsModule(function (module) {
var CONFIGURABLE_FUNCTION_NAME = functionName$2.CONFIGURABLE;



var enforceInternalState = internalState$2.enforce;
var getInternalState = internalState$2.get;
// eslint-disable-next-line es/no-object-defineproperty -- safe
var defineProperty = Object.defineProperty;

var CONFIGURABLE_LENGTH = descriptors$2 && !fails$2(function () {
  return defineProperty(function () { /* empty */ }, 'length', { value: 8 }).length !== 8;
});

var TEMPLATE = String(String).split('String');

var makeBuiltIn = module.exports = function (value, name, options) {
  if (String(name).slice(0, 7) === 'Symbol(') {
    name = '[' + String(name).replace(/^Symbol\(([^)]*)\)/, '$1') + ']';
  }
  if (options && options.getter) name = 'get ' + name;
  if (options && options.setter) name = 'set ' + name;
  if (!hasOwnProperty_1$2(value, 'name') || (CONFIGURABLE_FUNCTION_NAME && value.name !== name)) {
    if (descriptors$2) defineProperty(value, 'name', { value: name, configurable: true });
    else value.name = name;
  }
  if (CONFIGURABLE_LENGTH && options && hasOwnProperty_1$2(options, 'arity') && value.length !== options.arity) {
    defineProperty(value, 'length', { value: options.arity });
  }
  try {
    if (options && hasOwnProperty_1$2(options, 'constructor') && options.constructor) {
      if (descriptors$2) defineProperty(value, 'prototype', { writable: false });
    // in V8 ~ Chrome 53, prototypes of some methods, like `Array.prototype.values`, are non-writable
    } else if (value.prototype) value.prototype = undefined;
  } catch (error) { /* empty */ }
  var state = enforceInternalState(value);
  if (!hasOwnProperty_1$2(state, 'source')) {
    state.source = TEMPLATE.join(typeof name == 'string' ? name : '');
  } return value;
};

// add fake Function#toString for correct work wrapped methods / constructors with methods like LoDash isNative
// eslint-disable-next-line no-extend-native -- required
Function.prototype.toString = makeBuiltIn(function toString() {
  return isCallable$2(this) && getInternalState(this).source || inspectSource$2(this);
}, 'toString');
});

var defineBuiltIn$2 = function (O, key, value, options) {
  if (!options) options = {};
  var simple = options.enumerable;
  var name = options.name !== undefined ? options.name : key;
  if (isCallable$2(value)) makeBuiltIn_1$2(value, name, options);
  if (options.global) {
    if (simple) O[key] = value;
    else defineGlobalProperty$2(key, value);
  } else {
    try {
      if (!options.unsafe) delete O[key];
      else if (O[key]) simple = true;
    } catch (error) { /* empty */ }
    if (simple) O[key] = value;
    else objectDefineProperty$2.f(O, key, {
      value: value,
      enumerable: false,
      configurable: !options.nonConfigurable,
      writable: !options.nonWritable
    });
  } return O;
};

var ceil$2 = Math.ceil;
var floor$7 = Math.floor;

// `Math.trunc` method
// https://tc39.es/ecma262/#sec-math.trunc
// eslint-disable-next-line es/no-math-trunc -- safe
var mathTrunc$2 = Math.trunc || function trunc(x) {
  var n = +x;
  return (n > 0 ? floor$7 : ceil$2)(n);
};

// `ToIntegerOrInfinity` abstract operation
// https://tc39.es/ecma262/#sec-tointegerorinfinity
var toIntegerOrInfinity$2 = function (argument) {
  var number = +argument;
  // eslint-disable-next-line no-self-compare -- NaN check
  return number !== number || number === 0 ? 0 : mathTrunc$2(number);
};

var max$5 = Math.max;
var min$5 = Math.min;

// Helper for a popular repeating case of the spec:
// Let integer be ? ToInteger(index).
// If integer < 0, let result be max((length + integer), 0); else let result be min(integer, length).
var toAbsoluteIndex$2 = function (index, length) {
  var integer = toIntegerOrInfinity$2(index);
  return integer < 0 ? max$5(integer + length, 0) : min$5(integer, length);
};

var min$6 = Math.min;

// `ToLength` abstract operation
// https://tc39.es/ecma262/#sec-tolength
var toLength$2 = function (argument) {
  return argument > 0 ? min$6(toIntegerOrInfinity$2(argument), 0x1FFFFFFFFFFFFF) : 0; // 2 ** 53 - 1 == 9007199254740991
};

// `LengthOfArrayLike` abstract operation
// https://tc39.es/ecma262/#sec-lengthofarraylike
var lengthOfArrayLike$2 = function (obj) {
  return toLength$2(obj.length);
};

// `Array.prototype.{ indexOf, includes }` methods implementation
var createMethod$4 = function (IS_INCLUDES) {
  return function ($this, el, fromIndex) {
    var O = toIndexedObject$2($this);
    var length = lengthOfArrayLike$2(O);
    var index = toAbsoluteIndex$2(fromIndex, length);
    var value;
    // Array#includes uses SameValueZero equality algorithm
    // eslint-disable-next-line no-self-compare -- NaN check
    if (IS_INCLUDES && el != el) while (length > index) {
      value = O[index++];
      // eslint-disable-next-line no-self-compare -- NaN check
      if (value != value) return true;
    // Array#indexOf ignores holes, Array#includes - not
    } else for (;length > index; index++) {
      if ((IS_INCLUDES || index in O) && O[index] === el) return IS_INCLUDES || index || 0;
    } return !IS_INCLUDES && -1;
  };
};

var arrayIncludes$2 = {
  // `Array.prototype.includes` method
  // https://tc39.es/ecma262/#sec-array.prototype.includes
  includes: createMethod$4(true),
  // `Array.prototype.indexOf` method
  // https://tc39.es/ecma262/#sec-array.prototype.indexof
  indexOf: createMethod$4(false)
};

var indexOf$3 = arrayIncludes$2.indexOf;


var push$7 = functionUncurryThis$2([].push);

var objectKeysInternal$2 = function (object, names) {
  var O = toIndexedObject$2(object);
  var i = 0;
  var result = [];
  var key;
  for (key in O) !hasOwnProperty_1$2(hiddenKeys$4, key) && hasOwnProperty_1$2(O, key) && push$7(result, key);
  // Don't enum bug & hidden keys
  while (names.length > i) if (hasOwnProperty_1$2(O, key = names[i++])) {
    ~indexOf$3(result, key) || push$7(result, key);
  }
  return result;
};

// IE8- don't enum bug keys
var enumBugKeys$2 = [
  'constructor',
  'hasOwnProperty',
  'isPrototypeOf',
  'propertyIsEnumerable',
  'toLocaleString',
  'toString',
  'valueOf'
];

var hiddenKeys$5 = enumBugKeys$2.concat('length', 'prototype');

// `Object.getOwnPropertyNames` method
// https://tc39.es/ecma262/#sec-object.getownpropertynames
// eslint-disable-next-line es/no-object-getownpropertynames -- safe
var f$h = Object.getOwnPropertyNames || function getOwnPropertyNames(O) {
  return objectKeysInternal$2(O, hiddenKeys$5);
};

var objectGetOwnPropertyNames$2 = {
	f: f$h
};

// eslint-disable-next-line es/no-object-getownpropertysymbols -- safe
var f$i = Object.getOwnPropertySymbols;

var objectGetOwnPropertySymbols$2 = {
	f: f$i
};

var concat$4 = functionUncurryThis$2([].concat);

// all object keys, includes non-enumerable and symbols
var ownKeys$3 = getBuiltIn$2('Reflect', 'ownKeys') || function ownKeys(it) {
  var keys = objectGetOwnPropertyNames$2.f(anObject$2(it));
  var getOwnPropertySymbols = objectGetOwnPropertySymbols$2.f;
  return getOwnPropertySymbols ? concat$4(keys, getOwnPropertySymbols(it)) : keys;
};

var copyConstructorProperties$2 = function (target, source, exceptions) {
  var keys = ownKeys$3(source);
  var defineProperty = objectDefineProperty$2.f;
  var getOwnPropertyDescriptor = objectGetOwnPropertyDescriptor$2.f;
  for (var i = 0; i < keys.length; i++) {
    var key = keys[i];
    if (!hasOwnProperty_1$2(target, key) && !(exceptions && hasOwnProperty_1$2(exceptions, key))) {
      defineProperty(target, key, getOwnPropertyDescriptor(source, key));
    }
  }
};

var replacement$2 = /#|\.prototype\./;

var isForced$2 = function (feature, detection) {
  var value = data$2[normalize$2(feature)];
  return value == POLYFILL$2 ? true
    : value == NATIVE$2 ? false
    : isCallable$2(detection) ? fails$2(detection)
    : !!detection;
};

var normalize$2 = isForced$2.normalize = function (string) {
  return String(string).replace(replacement$2, '.').toLowerCase();
};

var data$2 = isForced$2.data = {};
var NATIVE$2 = isForced$2.NATIVE = 'N';
var POLYFILL$2 = isForced$2.POLYFILL = 'P';

var isForced_1$2 = isForced$2;

var getOwnPropertyDescriptor$9 = objectGetOwnPropertyDescriptor$2.f;






/*
  options.target         - name of the target object
  options.global         - target is the global object
  options.stat           - export as static methods of target
  options.proto          - export as prototype methods of target
  options.real           - real prototype method for the `pure` version
  options.forced         - export even if the native feature is available
  options.bind           - bind methods to the target, required for the `pure` version
  options.wrap           - wrap constructors to preventing global pollution, required for the `pure` version
  options.unsafe         - use the simple assignment of property instead of delete + defineProperty
  options.sham           - add a flag to not completely full polyfills
  options.enumerable     - export as enumerable property
  options.dontCallGetSet - prevent calling a getter on target
  options.name           - the .name of the function if it does not match the key
*/
var _export$2 = function (options, source) {
  var TARGET = options.target;
  var GLOBAL = options.global;
  var STATIC = options.stat;
  var FORCED, target, key, targetProperty, sourceProperty, descriptor;
  if (GLOBAL) {
    target = global_1$2;
  } else if (STATIC) {
    target = global_1$2[TARGET] || defineGlobalProperty$2(TARGET, {});
  } else {
    target = (global_1$2[TARGET] || {}).prototype;
  }
  if (target) for (key in source) {
    sourceProperty = source[key];
    if (options.dontCallGetSet) {
      descriptor = getOwnPropertyDescriptor$9(target, key);
      targetProperty = descriptor && descriptor.value;
    } else targetProperty = target[key];
    FORCED = isForced_1$2(GLOBAL ? key : TARGET + (STATIC ? '.' : '#') + key, options.forced);
    // contained in target
    if (!FORCED && targetProperty !== undefined) {
      if (typeof sourceProperty == typeof targetProperty) continue;
      copyConstructorProperties$2(sourceProperty, targetProperty);
    }
    // add a flag to not completely full polyfills
    if (options.sham || (targetProperty && targetProperty.sham)) {
      createNonEnumerableProperty$2(sourceProperty, 'sham', true);
    }
    defineBuiltIn$2(target, key, sourceProperty, options);
  }
};

var engineIsNode$2 = classofRaw$2(global_1$2.process) == 'process';

var $String$a = String;
var $TypeError$x = TypeError;

var aPossiblePrototype$2 = function (argument) {
  if (typeof argument == 'object' || isCallable$2(argument)) return argument;
  throw $TypeError$x("Can't set " + $String$a(argument) + ' as a prototype');
};

/* eslint-disable no-proto -- safe */




// `Object.setPrototypeOf` method
// https://tc39.es/ecma262/#sec-object.setprototypeof
// Works with __proto__ only. Old v8 can't work with null proto objects.
// eslint-disable-next-line es/no-object-setprototypeof -- safe
var objectSetPrototypeOf$2 = Object.setPrototypeOf || ('__proto__' in {} ? function () {
  var CORRECT_SETTER = false;
  var test = {};
  var setter;
  try {
    // eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe
    setter = functionUncurryThis$2(Object.getOwnPropertyDescriptor(Object.prototype, '__proto__').set);
    setter(test, []);
    CORRECT_SETTER = test instanceof Array;
  } catch (error) { /* empty */ }
  return function setPrototypeOf(O, proto) {
    anObject$2(O);
    aPossiblePrototype$2(proto);
    if (CORRECT_SETTER) setter(O, proto);
    else O.__proto__ = proto;
    return O;
  };
}() : undefined);

var defineProperty$b = objectDefineProperty$2.f;



var TO_STRING_TAG$7 = wellKnownSymbol$2('toStringTag');

var setToStringTag$2 = function (target, TAG, STATIC) {
  if (target && !STATIC) target = target.prototype;
  if (target && !hasOwnProperty_1$2(target, TO_STRING_TAG$7)) {
    defineProperty$b(target, TO_STRING_TAG$7, { configurable: true, value: TAG });
  }
};

var SPECIES$7 = wellKnownSymbol$2('species');

var setSpecies$2 = function (CONSTRUCTOR_NAME) {
  var Constructor = getBuiltIn$2(CONSTRUCTOR_NAME);
  var defineProperty = objectDefineProperty$2.f;

  if (descriptors$2 && Constructor && !Constructor[SPECIES$7]) {
    defineProperty(Constructor, SPECIES$7, {
      configurable: true,
      get: function () { return this; }
    });
  }
};

var $TypeError$y = TypeError;

var anInstance$2 = function (it, Prototype) {
  if (objectIsPrototypeOf$2(Prototype, it)) return it;
  throw $TypeError$y('Incorrect invocation');
};

var TO_STRING_TAG$8 = wellKnownSymbol$2('toStringTag');
var test$2 = {};

test$2[TO_STRING_TAG$8] = 'z';

var toStringTagSupport$2 = String(test$2) === '[object z]';

var TO_STRING_TAG$9 = wellKnownSymbol$2('toStringTag');
var $Object$d = Object;

// ES3 wrong here
var CORRECT_ARGUMENTS$2 = classofRaw$2(function () { return arguments; }()) == 'Arguments';

// fallback for IE11 Script Access Denied error
var tryGet$2 = function (it, key) {
  try {
    return it[key];
  } catch (error) { /* empty */ }
};

// getting tag from ES6+ `Object.prototype.toString`
var classof$2 = toStringTagSupport$2 ? classofRaw$2 : function (it) {
  var O, tag, result;
  return it === undefined ? 'Undefined' : it === null ? 'Null'
    // @@toStringTag case
    : typeof (tag = tryGet$2(O = $Object$d(it), TO_STRING_TAG$9)) == 'string' ? tag
    // builtinTag case
    : CORRECT_ARGUMENTS$2 ? classofRaw$2(O)
    // ES3 arguments fallback
    : (result = classofRaw$2(O)) == 'Object' && isCallable$2(O.callee) ? 'Arguments' : result;
};

var noop$3 = function () { /* empty */ };
var empty$2 = [];
var construct$2 = getBuiltIn$2('Reflect', 'construct');
var constructorRegExp$2 = /^\s*(?:class|function)\b/;
var exec$4 = functionUncurryThis$2(constructorRegExp$2.exec);
var INCORRECT_TO_STRING$2 = !constructorRegExp$2.exec(noop$3);

var isConstructorModern$2 = function isConstructor(argument) {
  if (!isCallable$2(argument)) return false;
  try {
    construct$2(noop$3, empty$2, argument);
    return true;
  } catch (error) {
    return false;
  }
};

var isConstructorLegacy$2 = function isConstructor(argument) {
  if (!isCallable$2(argument)) return false;
  switch (classof$2(argument)) {
    case 'AsyncFunction':
    case 'GeneratorFunction':
    case 'AsyncGeneratorFunction': return false;
  }
  try {
    // we can't check .prototype since constructors produced by .bind haven't it
    // `Function#toString` throws on some built-it function in some legacy engines
    // (for example, `DOMQuad` and similar in FF41-)
    return INCORRECT_TO_STRING$2 || !!exec$4(constructorRegExp$2, inspectSource$2(argument));
  } catch (error) {
    return true;
  }
};

isConstructorLegacy$2.sham = true;

// `IsConstructor` abstract operation
// https://tc39.es/ecma262/#sec-isconstructor
var isConstructor$2 = !construct$2 || fails$2(function () {
  var called;
  return isConstructorModern$2(isConstructorModern$2.call)
    || !isConstructorModern$2(Object)
    || !isConstructorModern$2(function () { called = true; })
    || called;
}) ? isConstructorLegacy$2 : isConstructorModern$2;

var $TypeError$z = TypeError;

// `Assert: IsConstructor(argument) is true`
var aConstructor$2 = function (argument) {
  if (isConstructor$2(argument)) return argument;
  throw $TypeError$z(tryToString$2(argument) + ' is not a constructor');
};

var SPECIES$8 = wellKnownSymbol$2('species');

// `SpeciesConstructor` abstract operation
// https://tc39.es/ecma262/#sec-speciesconstructor
var speciesConstructor$2 = function (O, defaultConstructor) {
  var C = anObject$2(O).constructor;
  var S;
  return C === undefined || isNullOrUndefined$2(S = anObject$2(C)[SPECIES$8]) ? defaultConstructor : aConstructor$2(S);
};

var FunctionPrototype$8 = Function.prototype;
var apply$2 = FunctionPrototype$8.apply;
var call$8 = FunctionPrototype$8.call;

// eslint-disable-next-line es/no-reflect -- safe
var functionApply$2 = typeof Reflect == 'object' && Reflect.apply || (functionBindNative$2 ? call$8.bind(apply$2) : function () {
  return call$8.apply(apply$2, arguments);
});

var bind$4 = functionUncurryThis$2(functionUncurryThis$2.bind);

// optional / simple context binding
var functionBindContext$2 = function (fn, that) {
  aCallable$2(fn);
  return that === undefined ? fn : functionBindNative$2 ? bind$4(fn, that) : function (/* ...args */) {
    return fn.apply(that, arguments);
  };
};

var html$2 = getBuiltIn$2('document', 'documentElement');

var arraySlice$2 = functionUncurryThis$2([].slice);

var $TypeError$A = TypeError;

var validateArgumentsLength$2 = function (passed, required) {
  if (passed < required) throw $TypeError$A('Not enough arguments');
  return passed;
};

var engineIsIos$2 = /(?:ipad|iphone|ipod).*applewebkit/i.test(engineUserAgent$2);

var set$5 = global_1$2.setImmediate;
var clear$2 = global_1$2.clearImmediate;
var process$a = global_1$2.process;
var Dispatch$2 = global_1$2.Dispatch;
var Function$3 = global_1$2.Function;
var MessageChannel$2 = global_1$2.MessageChannel;
var String$3 = global_1$2.String;
var counter$2 = 0;
var queue$4 = {};
var ONREADYSTATECHANGE$2 = 'onreadystatechange';
var $location$2, defer$2, channel$2, port$2;

try {
  // Deno throws a ReferenceError on `location` access without `--location` flag
  $location$2 = global_1$2.location;
} catch (error) { /* empty */ }

var run$2 = function (id) {
  if (hasOwnProperty_1$2(queue$4, id)) {
    var fn = queue$4[id];
    delete queue$4[id];
    fn();
  }
};

var runner$2 = function (id) {
  return function () {
    run$2(id);
  };
};

var listener$2 = function (event) {
  run$2(event.data);
};

var post$2 = function (id) {
  // old engines have not location.origin
  global_1$2.postMessage(String$3(id), $location$2.protocol + '//' + $location$2.host);
};

// Node.js 0.9+ & IE10+ has setImmediate, otherwise:
if (!set$5 || !clear$2) {
  set$5 = function setImmediate(handler) {
    validateArgumentsLength$2(arguments.length, 1);
    var fn = isCallable$2(handler) ? handler : Function$3(handler);
    var args = arraySlice$2(arguments, 1);
    queue$4[++counter$2] = function () {
      functionApply$2(fn, undefined, args);
    };
    defer$2(counter$2);
    return counter$2;
  };
  clear$2 = function clearImmediate(id) {
    delete queue$4[id];
  };
  // Node.js 0.8-
  if (engineIsNode$2) {
    defer$2 = function (id) {
      process$a.nextTick(runner$2(id));
    };
  // Sphere (JS game engine) Dispatch API
  } else if (Dispatch$2 && Dispatch$2.now) {
    defer$2 = function (id) {
      Dispatch$2.now(runner$2(id));
    };
  // Browsers with MessageChannel, includes WebWorkers
  // except iOS - https://github.com/zloirock/core-js/issues/624
  } else if (MessageChannel$2 && !engineIsIos$2) {
    channel$2 = new MessageChannel$2();
    port$2 = channel$2.port2;
    channel$2.port1.onmessage = listener$2;
    defer$2 = functionBindContext$2(port$2.postMessage, port$2);
  // Browsers with postMessage, skip WebWorkers
  // IE8 has postMessage, but it's sync & typeof its postMessage is 'object'
  } else if (
    global_1$2.addEventListener &&
    isCallable$2(global_1$2.postMessage) &&
    !global_1$2.importScripts &&
    $location$2 && $location$2.protocol !== 'file:' &&
    !fails$2(post$2)
  ) {
    defer$2 = post$2;
    global_1$2.addEventListener('message', listener$2, false);
  // IE8-
  } else if (ONREADYSTATECHANGE$2 in documentCreateElement$2('script')) {
    defer$2 = function (id) {
      html$2.appendChild(documentCreateElement$2('script'))[ONREADYSTATECHANGE$2] = function () {
        html$2.removeChild(this);
        run$2(id);
      };
    };
  // Rest old browsers
  } else {
    defer$2 = function (id) {
      setTimeout(runner$2(id), 0);
    };
  }
}

var task$4 = {
  set: set$5,
  clear: clear$2
};

var engineIsIosPebble$2 = /ipad|iphone|ipod/i.test(engineUserAgent$2) && global_1$2.Pebble !== undefined;

var engineIsWebosWebkit$2 = /web0s(?!.*chrome)/i.test(engineUserAgent$2);

var getOwnPropertyDescriptor$a = objectGetOwnPropertyDescriptor$2.f;
var macrotask$2 = task$4.set;





var MutationObserver$2 = global_1$2.MutationObserver || global_1$2.WebKitMutationObserver;
var document$8 = global_1$2.document;
var process$b = global_1$2.process;
var Promise$3 = global_1$2.Promise;
// Node.js 11 shows ExperimentalWarning on getting `queueMicrotask`
var queueMicrotaskDescriptor$2 = getOwnPropertyDescriptor$a(global_1$2, 'queueMicrotask');
var queueMicrotask$2 = queueMicrotaskDescriptor$2 && queueMicrotaskDescriptor$2.value;

var flush$2, head$2, last$2, notify$4, toggle$2, node$2, promise$2, then$2;

// modern engines have queueMicrotask method
if (!queueMicrotask$2) {
  flush$2 = function () {
    var parent, fn;
    if (engineIsNode$2 && (parent = process$b.domain)) parent.exit();
    while (head$2) {
      fn = head$2.fn;
      head$2 = head$2.next;
      try {
        fn();
      } catch (error) {
        if (head$2) notify$4();
        else last$2 = undefined;
        throw error;
      }
    } last$2 = undefined;
    if (parent) parent.enter();
  };

  // browsers with MutationObserver, except iOS - https://github.com/zloirock/core-js/issues/339
  // also except WebOS Webkit https://github.com/zloirock/core-js/issues/898
  if (!engineIsIos$2 && !engineIsNode$2 && !engineIsWebosWebkit$2 && MutationObserver$2 && document$8) {
    toggle$2 = true;
    node$2 = document$8.createTextNode('');
    new MutationObserver$2(flush$2).observe(node$2, { characterData: true });
    notify$4 = function () {
      node$2.data = toggle$2 = !toggle$2;
    };
  // environments with maybe non-completely correct, but existent Promise
  } else if (!engineIsIosPebble$2 && Promise$3 && Promise$3.resolve) {
    // Promise.resolve without an argument throws an error in LG WebOS 2
    promise$2 = Promise$3.resolve(undefined);
    // workaround of WebKit ~ iOS Safari 10.1 bug
    promise$2.constructor = Promise$3;
    then$2 = functionBindContext$2(promise$2.then, promise$2);
    notify$4 = function () {
      then$2(flush$2);
    };
  // Node.js without promises
  } else if (engineIsNode$2) {
    notify$4 = function () {
      process$b.nextTick(flush$2);
    };
  // for other environments - macrotask based on:
  // - setImmediate
  // - MessageChannel
  // - window.postMessage
  // - onreadystatechange
  // - setTimeout
  } else {
    // strange IE + webpack dev server bug - use .bind(global)
    macrotask$2 = functionBindContext$2(macrotask$2, global_1$2);
    notify$4 = function () {
      macrotask$2(flush$2);
    };
  }
}

var microtask$2 = queueMicrotask$2 || function (fn) {
  var task = { fn: fn, next: undefined };
  if (last$2) last$2.next = task;
  if (!head$2) {
    head$2 = task;
    notify$4();
  } last$2 = task;
};

var hostReportErrors$2 = function (a, b) {
  var console = global_1$2.console;
  if (console && console.error) {
    arguments.length == 1 ? console.error(a) : console.error(a, b);
  }
};

var perform$2 = function (exec) {
  try {
    return { error: false, value: exec() };
  } catch (error) {
    return { error: true, value: error };
  }
};

var Queue$2 = function () {
  this.head = null;
  this.tail = null;
};

Queue$2.prototype = {
  add: function (item) {
    var entry = { item: item, next: null };
    if (this.head) this.tail.next = entry;
    else this.head = entry;
    this.tail = entry;
  },
  get: function () {
    var entry = this.head;
    if (entry) {
      this.head = entry.next;
      if (this.tail === entry) this.tail = null;
      return entry.item;
    }
  }
};

var queue$5 = Queue$2;

var promiseNativeConstructor$2 = global_1$2.Promise;

/* global Deno -- Deno case */
var engineIsDeno$2 = typeof Deno == 'object' && Deno && typeof Deno.version == 'object';

var engineIsBrowser$2 = !engineIsDeno$2 && !engineIsNode$2
  && typeof window == 'object'
  && typeof document == 'object';

var NativePromisePrototype$6 = promiseNativeConstructor$2 && promiseNativeConstructor$2.prototype;
var SPECIES$9 = wellKnownSymbol$2('species');
var SUBCLASSING$2 = false;
var NATIVE_PROMISE_REJECTION_EVENT$4 = isCallable$2(global_1$2.PromiseRejectionEvent);

var FORCED_PROMISE_CONSTRUCTOR$c = isForced_1$2('Promise', function () {
  var PROMISE_CONSTRUCTOR_SOURCE = inspectSource$2(promiseNativeConstructor$2);
  var GLOBAL_CORE_JS_PROMISE = PROMISE_CONSTRUCTOR_SOURCE !== String(promiseNativeConstructor$2);
  // V8 6.6 (Node 10 and Chrome 66) have a bug with resolving custom thenables
  // https://bugs.chromium.org/p/chromium/issues/detail?id=830565
  // We can't detect it synchronously, so just check versions
  if (!GLOBAL_CORE_JS_PROMISE && engineV8Version$2 === 66) return true;
  // We can't use @@species feature detection in V8 since it causes
  // deoptimization and performance degradation
  // https://github.com/zloirock/core-js/issues/679
  if (!engineV8Version$2 || engineV8Version$2 < 51 || !/native code/.test(PROMISE_CONSTRUCTOR_SOURCE)) {
    // Detect correctness of subclassing with @@species support
    var promise = new promiseNativeConstructor$2(function (resolve) { resolve(1); });
    var FakePromise = function (exec) {
      exec(function () { /* empty */ }, function () { /* empty */ });
    };
    var constructor = promise.constructor = {};
    constructor[SPECIES$9] = FakePromise;
    SUBCLASSING$2 = promise.then(function () { /* empty */ }) instanceof FakePromise;
    if (!SUBCLASSING$2) return true;
  // Unhandled rejections tracking support, NodeJS Promise without it fails @@species test
  } return !GLOBAL_CORE_JS_PROMISE && (engineIsBrowser$2 || engineIsDeno$2) && !NATIVE_PROMISE_REJECTION_EVENT$4;
});

var promiseConstructorDetection$2 = {
  CONSTRUCTOR: FORCED_PROMISE_CONSTRUCTOR$c,
  REJECTION_EVENT: NATIVE_PROMISE_REJECTION_EVENT$4,
  SUBCLASSING: SUBCLASSING$2
};

var $TypeError$B = TypeError;

var PromiseCapability$2 = function (C) {
  var resolve, reject;
  this.promise = new C(function ($$resolve, $$reject) {
    if (resolve !== undefined || reject !== undefined) throw $TypeError$B('Bad Promise constructor');
    resolve = $$resolve;
    reject = $$reject;
  });
  this.resolve = aCallable$2(resolve);
  this.reject = aCallable$2(reject);
};

// `NewPromiseCapability` abstract operation
// https://tc39.es/ecma262/#sec-newpromisecapability
var f$j = function (C) {
  return new PromiseCapability$2(C);
};

var newPromiseCapability$4 = {
	f: f$j
};

var task$5 = task$4.set;









var PROMISE$2 = 'Promise';
var FORCED_PROMISE_CONSTRUCTOR$d = promiseConstructorDetection$2.CONSTRUCTOR;
var NATIVE_PROMISE_REJECTION_EVENT$5 = promiseConstructorDetection$2.REJECTION_EVENT;
var NATIVE_PROMISE_SUBCLASSING$2 = promiseConstructorDetection$2.SUBCLASSING;
var getInternalPromiseState$2 = internalState$2.getterFor(PROMISE$2);
var setInternalState$8 = internalState$2.set;
var NativePromisePrototype$7 = promiseNativeConstructor$2 && promiseNativeConstructor$2.prototype;
var PromiseConstructor$2 = promiseNativeConstructor$2;
var PromisePrototype$2 = NativePromisePrototype$7;
var TypeError$a = global_1$2.TypeError;
var document$9 = global_1$2.document;
var process$c = global_1$2.process;
var newPromiseCapability$5 = newPromiseCapability$4.f;
var newGenericPromiseCapability$2 = newPromiseCapability$5;

var DISPATCH_EVENT$2 = !!(document$9 && document$9.createEvent && global_1$2.dispatchEvent);
var UNHANDLED_REJECTION$2 = 'unhandledrejection';
var REJECTION_HANDLED$2 = 'rejectionhandled';
var PENDING$2 = 0;
var FULFILLED$2 = 1;
var REJECTED$2 = 2;
var HANDLED$2 = 1;
var UNHANDLED$2 = 2;

var Internal$2, OwnPromiseCapability$2, PromiseWrapper$2, nativeThen$2;

// helpers
var isThenable$2 = function (it) {
  var then;
  return isObject$3(it) && isCallable$2(then = it.then) ? then : false;
};

var callReaction$2 = function (reaction, state) {
  var value = state.value;
  var ok = state.state == FULFILLED$2;
  var handler = ok ? reaction.ok : reaction.fail;
  var resolve = reaction.resolve;
  var reject = reaction.reject;
  var domain = reaction.domain;
  var result, then, exited;
  try {
    if (handler) {
      if (!ok) {
        if (state.rejection === UNHANDLED$2) onHandleUnhandled$2(state);
        state.rejection = HANDLED$2;
      }
      if (handler === true) result = value;
      else {
        if (domain) domain.enter();
        result = handler(value); // can throw
        if (domain) {
          domain.exit();
          exited = true;
        }
      }
      if (result === reaction.promise) {
        reject(TypeError$a('Promise-chain cycle'));
      } else if (then = isThenable$2(result)) {
        functionCall$2(then, result, resolve, reject);
      } else resolve(result);
    } else reject(value);
  } catch (error) {
    if (domain && !exited) domain.exit();
    reject(error);
  }
};

var notify$5 = function (state, isReject) {
  if (state.notified) return;
  state.notified = true;
  microtask$2(function () {
    var reactions = state.reactions;
    var reaction;
    while (reaction = reactions.get()) {
      callReaction$2(reaction, state);
    }
    state.notified = false;
    if (isReject && !state.rejection) onUnhandled$2(state);
  });
};

var dispatchEvent$2 = function (name, promise, reason) {
  var event, handler;
  if (DISPATCH_EVENT$2) {
    event = document$9.createEvent('Event');
    event.promise = promise;
    event.reason = reason;
    event.initEvent(name, false, true);
    global_1$2.dispatchEvent(event);
  } else event = { promise: promise, reason: reason };
  if (!NATIVE_PROMISE_REJECTION_EVENT$5 && (handler = global_1$2['on' + name])) handler(event);
  else if (name === UNHANDLED_REJECTION$2) hostReportErrors$2('Unhandled promise rejection', reason);
};

var onUnhandled$2 = function (state) {
  functionCall$2(task$5, global_1$2, function () {
    var promise = state.facade;
    var value = state.value;
    var IS_UNHANDLED = isUnhandled$2(state);
    var result;
    if (IS_UNHANDLED) {
      result = perform$2(function () {
        if (engineIsNode$2) {
          process$c.emit('unhandledRejection', value, promise);
        } else dispatchEvent$2(UNHANDLED_REJECTION$2, promise, value);
      });
      // Browsers should not trigger `rejectionHandled` event if it was handled here, NodeJS - should
      state.rejection = engineIsNode$2 || isUnhandled$2(state) ? UNHANDLED$2 : HANDLED$2;
      if (result.error) throw result.value;
    }
  });
};

var isUnhandled$2 = function (state) {
  return state.rejection !== HANDLED$2 && !state.parent;
};

var onHandleUnhandled$2 = function (state) {
  functionCall$2(task$5, global_1$2, function () {
    var promise = state.facade;
    if (engineIsNode$2) {
      process$c.emit('rejectionHandled', promise);
    } else dispatchEvent$2(REJECTION_HANDLED$2, promise, state.value);
  });
};

var bind$5 = function (fn, state, unwrap) {
  return function (value) {
    fn(state, value, unwrap);
  };
};

var internalReject$2 = function (state, value, unwrap) {
  if (state.done) return;
  state.done = true;
  if (unwrap) state = unwrap;
  state.value = value;
  state.state = REJECTED$2;
  notify$5(state, true);
};

var internalResolve$2 = function (state, value, unwrap) {
  if (state.done) return;
  state.done = true;
  if (unwrap) state = unwrap;
  try {
    if (state.facade === value) throw TypeError$a("Promise can't be resolved itself");
    var then = isThenable$2(value);
    if (then) {
      microtask$2(function () {
        var wrapper = { done: false };
        try {
          functionCall$2(then, value,
            bind$5(internalResolve$2, wrapper, state),
            bind$5(internalReject$2, wrapper, state)
          );
        } catch (error) {
          internalReject$2(wrapper, error, state);
        }
      });
    } else {
      state.value = value;
      state.state = FULFILLED$2;
      notify$5(state, false);
    }
  } catch (error) {
    internalReject$2({ done: false }, error, state);
  }
};

// constructor polyfill
if (FORCED_PROMISE_CONSTRUCTOR$d) {
  // 25.4.3.1 Promise(executor)
  PromiseConstructor$2 = function Promise(executor) {
    anInstance$2(this, PromisePrototype$2);
    aCallable$2(executor);
    functionCall$2(Internal$2, this);
    var state = getInternalPromiseState$2(this);
    try {
      executor(bind$5(internalResolve$2, state), bind$5(internalReject$2, state));
    } catch (error) {
      internalReject$2(state, error);
    }
  };

  PromisePrototype$2 = PromiseConstructor$2.prototype;

  // eslint-disable-next-line no-unused-vars -- required for `.length`
  Internal$2 = function Promise(executor) {
    setInternalState$8(this, {
      type: PROMISE$2,
      done: false,
      notified: false,
      parent: false,
      reactions: new queue$5(),
      rejection: false,
      state: PENDING$2,
      value: undefined
    });
  };

  // `Promise.prototype.then` method
  // https://tc39.es/ecma262/#sec-promise.prototype.then
  Internal$2.prototype = defineBuiltIn$2(PromisePrototype$2, 'then', function then(onFulfilled, onRejected) {
    var state = getInternalPromiseState$2(this);
    var reaction = newPromiseCapability$5(speciesConstructor$2(this, PromiseConstructor$2));
    state.parent = true;
    reaction.ok = isCallable$2(onFulfilled) ? onFulfilled : true;
    reaction.fail = isCallable$2(onRejected) && onRejected;
    reaction.domain = engineIsNode$2 ? process$c.domain : undefined;
    if (state.state == PENDING$2) state.reactions.add(reaction);
    else microtask$2(function () {
      callReaction$2(reaction, state);
    });
    return reaction.promise;
  });

  OwnPromiseCapability$2 = function () {
    var promise = new Internal$2();
    var state = getInternalPromiseState$2(promise);
    this.promise = promise;
    this.resolve = bind$5(internalResolve$2, state);
    this.reject = bind$5(internalReject$2, state);
  };

  newPromiseCapability$4.f = newPromiseCapability$5 = function (C) {
    return C === PromiseConstructor$2 || C === PromiseWrapper$2
      ? new OwnPromiseCapability$2(C)
      : newGenericPromiseCapability$2(C);
  };

  if ( isCallable$2(promiseNativeConstructor$2) && NativePromisePrototype$7 !== Object.prototype) {
    nativeThen$2 = NativePromisePrototype$7.then;

    if (!NATIVE_PROMISE_SUBCLASSING$2) {
      // make `Promise#then` return a polyfilled `Promise` for native promise-based APIs
      defineBuiltIn$2(NativePromisePrototype$7, 'then', function then(onFulfilled, onRejected) {
        var that = this;
        return new PromiseConstructor$2(function (resolve, reject) {
          functionCall$2(nativeThen$2, that, resolve, reject);
        }).then(onFulfilled, onRejected);
      // https://github.com/zloirock/core-js/issues/640
      }, { unsafe: true });
    }

    // make `.constructor === Promise` work for native promise-based APIs
    try {
      delete NativePromisePrototype$7.constructor;
    } catch (error) { /* empty */ }

    // make `instanceof Promise` work for native promise-based APIs
    if (objectSetPrototypeOf$2) {
      objectSetPrototypeOf$2(NativePromisePrototype$7, PromisePrototype$2);
    }
  }
}

_export$2({ global: true, constructor: true, wrap: true, forced: FORCED_PROMISE_CONSTRUCTOR$d }, {
  Promise: PromiseConstructor$2
});

setToStringTag$2(PromiseConstructor$2, PROMISE$2, false);
setSpecies$2(PROMISE$2);

var iterators$2 = {};

var ITERATOR$e = wellKnownSymbol$2('iterator');
var ArrayPrototype$4 = Array.prototype;

// check on default Array iterator
var isArrayIteratorMethod$2 = function (it) {
  return it !== undefined && (iterators$2.Array === it || ArrayPrototype$4[ITERATOR$e] === it);
};

var ITERATOR$f = wellKnownSymbol$2('iterator');

var getIteratorMethod$2 = function (it) {
  if (!isNullOrUndefined$2(it)) return getMethod$2(it, ITERATOR$f)
    || getMethod$2(it, '@@iterator')
    || iterators$2[classof$2(it)];
};

var $TypeError$C = TypeError;

var getIterator$2 = function (argument, usingIterator) {
  var iteratorMethod = arguments.length < 2 ? getIteratorMethod$2(argument) : usingIterator;
  if (aCallable$2(iteratorMethod)) return anObject$2(functionCall$2(iteratorMethod, argument));
  throw $TypeError$C(tryToString$2(argument) + ' is not iterable');
};

var iteratorClose$2 = function (iterator, kind, value) {
  var innerResult, innerError;
  anObject$2(iterator);
  try {
    innerResult = getMethod$2(iterator, 'return');
    if (!innerResult) {
      if (kind === 'throw') throw value;
      return value;
    }
    innerResult = functionCall$2(innerResult, iterator);
  } catch (error) {
    innerError = true;
    innerResult = error;
  }
  if (kind === 'throw') throw value;
  if (innerError) throw innerResult;
  anObject$2(innerResult);
  return value;
};

var $TypeError$D = TypeError;

var Result$2 = function (stopped, result) {
  this.stopped = stopped;
  this.result = result;
};

var ResultPrototype$2 = Result$2.prototype;

var iterate$2 = function (iterable, unboundFunction, options) {
  var that = options && options.that;
  var AS_ENTRIES = !!(options && options.AS_ENTRIES);
  var IS_RECORD = !!(options && options.IS_RECORD);
  var IS_ITERATOR = !!(options && options.IS_ITERATOR);
  var INTERRUPTED = !!(options && options.INTERRUPTED);
  var fn = functionBindContext$2(unboundFunction, that);
  var iterator, iterFn, index, length, result, next, step;

  var stop = function (condition) {
    if (iterator) iteratorClose$2(iterator, 'normal', condition);
    return new Result$2(true, condition);
  };

  var callFn = function (value) {
    if (AS_ENTRIES) {
      anObject$2(value);
      return INTERRUPTED ? fn(value[0], value[1], stop) : fn(value[0], value[1]);
    } return INTERRUPTED ? fn(value, stop) : fn(value);
  };

  if (IS_RECORD) {
    iterator = iterable.iterator;
  } else if (IS_ITERATOR) {
    iterator = iterable;
  } else {
    iterFn = getIteratorMethod$2(iterable);
    if (!iterFn) throw $TypeError$D(tryToString$2(iterable) + ' is not iterable');
    // optimisation for array iterators
    if (isArrayIteratorMethod$2(iterFn)) {
      for (index = 0, length = lengthOfArrayLike$2(iterable); length > index; index++) {
        result = callFn(iterable[index]);
        if (result && objectIsPrototypeOf$2(ResultPrototype$2, result)) return result;
      } return new Result$2(false);
    }
    iterator = getIterator$2(iterable, iterFn);
  }

  next = IS_RECORD ? iterable.next : iterator.next;
  while (!(step = functionCall$2(next, iterator)).done) {
    try {
      result = callFn(step.value);
    } catch (error) {
      iteratorClose$2(iterator, 'throw', error);
    }
    if (typeof result == 'object' && result && objectIsPrototypeOf$2(ResultPrototype$2, result)) return result;
  } return new Result$2(false);
};

var ITERATOR$g = wellKnownSymbol$2('iterator');
var SAFE_CLOSING$2 = false;

try {
  var called$2 = 0;
  var iteratorWithReturn$2 = {
    next: function () {
      return { done: !!called$2++ };
    },
    'return': function () {
      SAFE_CLOSING$2 = true;
    }
  };
  iteratorWithReturn$2[ITERATOR$g] = function () {
    return this;
  };
  // eslint-disable-next-line es/no-array-from, no-throw-literal -- required for testing
  Array.from(iteratorWithReturn$2, function () { throw 2; });
} catch (error) { /* empty */ }

var checkCorrectnessOfIteration$2 = function (exec, SKIP_CLOSING) {
  if (!SKIP_CLOSING && !SAFE_CLOSING$2) return false;
  var ITERATION_SUPPORT = false;
  try {
    var object = {};
    object[ITERATOR$g] = function () {
      return {
        next: function () {
          return { done: ITERATION_SUPPORT = true };
        }
      };
    };
    exec(object);
  } catch (error) { /* empty */ }
  return ITERATION_SUPPORT;
};

var FORCED_PROMISE_CONSTRUCTOR$e = promiseConstructorDetection$2.CONSTRUCTOR;

var promiseStaticsIncorrectIteration$2 = FORCED_PROMISE_CONSTRUCTOR$e || !checkCorrectnessOfIteration$2(function (iterable) {
  promiseNativeConstructor$2.all(iterable).then(undefined, function () { /* empty */ });
});

// `Promise.all` method
// https://tc39.es/ecma262/#sec-promise.all
_export$2({ target: 'Promise', stat: true, forced: promiseStaticsIncorrectIteration$2 }, {
  all: function all(iterable) {
    var C = this;
    var capability = newPromiseCapability$4.f(C);
    var resolve = capability.resolve;
    var reject = capability.reject;
    var result = perform$2(function () {
      var $promiseResolve = aCallable$2(C.resolve);
      var values = [];
      var counter = 0;
      var remaining = 1;
      iterate$2(iterable, function (promise) {
        var index = counter++;
        var alreadyCalled = false;
        remaining++;
        functionCall$2($promiseResolve, C, promise).then(function (value) {
          if (alreadyCalled) return;
          alreadyCalled = true;
          values[index] = value;
          --remaining || resolve(values);
        }, reject);
      });
      --remaining || resolve(values);
    });
    if (result.error) reject(result.value);
    return capability.promise;
  }
});

var FORCED_PROMISE_CONSTRUCTOR$f = promiseConstructorDetection$2.CONSTRUCTOR;





var NativePromisePrototype$8 = promiseNativeConstructor$2 && promiseNativeConstructor$2.prototype;

// `Promise.prototype.catch` method
// https://tc39.es/ecma262/#sec-promise.prototype.catch
_export$2({ target: 'Promise', proto: true, forced: FORCED_PROMISE_CONSTRUCTOR$f, real: true }, {
  'catch': function (onRejected) {
    return this.then(undefined, onRejected);
  }
});

// makes sure that native promise-based APIs `Promise#catch` properly works with patched `Promise#then`
if ( isCallable$2(promiseNativeConstructor$2)) {
  var method$2 = getBuiltIn$2('Promise').prototype['catch'];
  if (NativePromisePrototype$8['catch'] !== method$2) {
    defineBuiltIn$2(NativePromisePrototype$8, 'catch', method$2, { unsafe: true });
  }
}

// `Promise.race` method
// https://tc39.es/ecma262/#sec-promise.race
_export$2({ target: 'Promise', stat: true, forced: promiseStaticsIncorrectIteration$2 }, {
  race: function race(iterable) {
    var C = this;
    var capability = newPromiseCapability$4.f(C);
    var reject = capability.reject;
    var result = perform$2(function () {
      var $promiseResolve = aCallable$2(C.resolve);
      iterate$2(iterable, function (promise) {
        functionCall$2($promiseResolve, C, promise).then(capability.resolve, reject);
      });
    });
    if (result.error) reject(result.value);
    return capability.promise;
  }
});

var FORCED_PROMISE_CONSTRUCTOR$g = promiseConstructorDetection$2.CONSTRUCTOR;

// `Promise.reject` method
// https://tc39.es/ecma262/#sec-promise.reject
_export$2({ target: 'Promise', stat: true, forced: FORCED_PROMISE_CONSTRUCTOR$g }, {
  reject: function reject(r) {
    var capability = newPromiseCapability$4.f(this);
    functionCall$2(capability.reject, undefined, r);
    return capability.promise;
  }
});

var promiseResolve$2 = function (C, x) {
  anObject$2(C);
  if (isObject$3(x) && x.constructor === C) return x;
  var promiseCapability = newPromiseCapability$4.f(C);
  var resolve = promiseCapability.resolve;
  resolve(x);
  return promiseCapability.promise;
};

var FORCED_PROMISE_CONSTRUCTOR$h = promiseConstructorDetection$2.CONSTRUCTOR;


var PromiseConstructorWrapper$2 = getBuiltIn$2('Promise');

// `Promise.resolve` method
// https://tc39.es/ecma262/#sec-promise.resolve
_export$2({ target: 'Promise', stat: true, forced:  FORCED_PROMISE_CONSTRUCTOR$h }, {
  resolve: function resolve(x) {
    return promiseResolve$2( this, x);
  }
});

// `Object.keys` method
// https://tc39.es/ecma262/#sec-object.keys
// eslint-disable-next-line es/no-object-keys -- safe
var objectKeys$2 = Object.keys || function keys(O) {
  return objectKeysInternal$2(O, enumBugKeys$2);
};

// `Object.defineProperties` method
// https://tc39.es/ecma262/#sec-object.defineproperties
// eslint-disable-next-line es/no-object-defineproperties -- safe
var f$k = descriptors$2 && !v8PrototypeDefineBug$2 ? Object.defineProperties : function defineProperties(O, Properties) {
  anObject$2(O);
  var props = toIndexedObject$2(Properties);
  var keys = objectKeys$2(Properties);
  var length = keys.length;
  var index = 0;
  var key;
  while (length > index) objectDefineProperty$2.f(O, key = keys[index++], props[key]);
  return O;
};

var objectDefineProperties$2 = {
	f: f$k
};

/* global ActiveXObject -- old IE, WSH */








var GT$2 = '>';
var LT$2 = '<';
var PROTOTYPE$2 = 'prototype';
var SCRIPT$2 = 'script';
var IE_PROTO$4 = sharedKey$2('IE_PROTO');

var EmptyConstructor$2 = function () { /* empty */ };

var scriptTag$2 = function (content) {
  return LT$2 + SCRIPT$2 + GT$2 + content + LT$2 + '/' + SCRIPT$2 + GT$2;
};

// Create object with fake `null` prototype: use ActiveX Object with cleared prototype
var NullProtoObjectViaActiveX$2 = function (activeXDocument) {
  activeXDocument.write(scriptTag$2(''));
  activeXDocument.close();
  var temp = activeXDocument.parentWindow.Object;
  activeXDocument = null; // avoid memory leak
  return temp;
};

// Create object with fake `null` prototype: use iframe Object with cleared prototype
var NullProtoObjectViaIFrame$2 = function () {
  // Thrash, waste and sodomy: IE GC bug
  var iframe = documentCreateElement$2('iframe');
  var JS = 'java' + SCRIPT$2 + ':';
  var iframeDocument;
  iframe.style.display = 'none';
  html$2.appendChild(iframe);
  // https://github.com/zloirock/core-js/issues/475
  iframe.src = String(JS);
  iframeDocument = iframe.contentWindow.document;
  iframeDocument.open();
  iframeDocument.write(scriptTag$2('document.F=Object'));
  iframeDocument.close();
  return iframeDocument.F;
};

// Check for document.domain and active x support
// No need to use active x approach when document.domain is not set
// see https://github.com/es-shims/es5-shim/issues/150
// variation of https://github.com/kitcambridge/es5-shim/commit/4f738ac066346
// avoid IE GC bug
var activeXDocument$2;
var NullProtoObject$2 = function () {
  try {
    activeXDocument$2 = new ActiveXObject('htmlfile');
  } catch (error) { /* ignore */ }
  NullProtoObject$2 = typeof document != 'undefined'
    ? document.domain && activeXDocument$2
      ? NullProtoObjectViaActiveX$2(activeXDocument$2) // old IE
      : NullProtoObjectViaIFrame$2()
    : NullProtoObjectViaActiveX$2(activeXDocument$2); // WSH
  var length = enumBugKeys$2.length;
  while (length--) delete NullProtoObject$2[PROTOTYPE$2][enumBugKeys$2[length]];
  return NullProtoObject$2();
};

hiddenKeys$4[IE_PROTO$4] = true;

// `Object.create` method
// https://tc39.es/ecma262/#sec-object.create
// eslint-disable-next-line es/no-object-create -- safe
var objectCreate$2 = Object.create || function create(O, Properties) {
  var result;
  if (O !== null) {
    EmptyConstructor$2[PROTOTYPE$2] = anObject$2(O);
    result = new EmptyConstructor$2();
    EmptyConstructor$2[PROTOTYPE$2] = null;
    // add "__proto__" for Object.getPrototypeOf polyfill
    result[IE_PROTO$4] = O;
  } else result = NullProtoObject$2();
  return Properties === undefined ? result : objectDefineProperties$2.f(result, Properties);
};

var defineProperty$c = objectDefineProperty$2.f;

var UNSCOPABLES$2 = wellKnownSymbol$2('unscopables');
var ArrayPrototype$5 = Array.prototype;

// Array.prototype[@@unscopables]
// https://tc39.es/ecma262/#sec-array.prototype-@@unscopables
if (ArrayPrototype$5[UNSCOPABLES$2] == undefined) {
  defineProperty$c(ArrayPrototype$5, UNSCOPABLES$2, {
    configurable: true,
    value: objectCreate$2(null)
  });
}

// add a key to Array.prototype[@@unscopables]
var addToUnscopables$2 = function (key) {
  ArrayPrototype$5[UNSCOPABLES$2][key] = true;
};

var correctPrototypeGetter$2 = !fails$2(function () {
  function F() { /* empty */ }
  F.prototype.constructor = null;
  // eslint-disable-next-line es/no-object-getprototypeof -- required for testing
  return Object.getPrototypeOf(new F()) !== F.prototype;
});

var IE_PROTO$5 = sharedKey$2('IE_PROTO');
var $Object$e = Object;
var ObjectPrototype$3 = $Object$e.prototype;

// `Object.getPrototypeOf` method
// https://tc39.es/ecma262/#sec-object.getprototypeof
// eslint-disable-next-line es/no-object-getprototypeof -- safe
var objectGetPrototypeOf$2 = correctPrototypeGetter$2 ? $Object$e.getPrototypeOf : function (O) {
  var object = toObject$3(O);
  if (hasOwnProperty_1$2(object, IE_PROTO$5)) return object[IE_PROTO$5];
  var constructor = object.constructor;
  if (isCallable$2(constructor) && object instanceof constructor) {
    return constructor.prototype;
  } return object instanceof $Object$e ? ObjectPrototype$3 : null;
};

var ITERATOR$h = wellKnownSymbol$2('iterator');
var BUGGY_SAFARI_ITERATORS$4 = false;

// `%IteratorPrototype%` object
// https://tc39.es/ecma262/#sec-%iteratorprototype%-object
var IteratorPrototype$6, PrototypeOfArrayIteratorPrototype$2, arrayIterator$2;

/* eslint-disable es/no-array-prototype-keys -- safe */
if ([].keys) {
  arrayIterator$2 = [].keys();
  // Safari 8 has buggy iterators w/o `next`
  if (!('next' in arrayIterator$2)) BUGGY_SAFARI_ITERATORS$4 = true;
  else {
    PrototypeOfArrayIteratorPrototype$2 = objectGetPrototypeOf$2(objectGetPrototypeOf$2(arrayIterator$2));
    if (PrototypeOfArrayIteratorPrototype$2 !== Object.prototype) IteratorPrototype$6 = PrototypeOfArrayIteratorPrototype$2;
  }
}

var NEW_ITERATOR_PROTOTYPE$2 = !isObject$3(IteratorPrototype$6) || fails$2(function () {
  var test = {};
  // FF44- legacy iterators case
  return IteratorPrototype$6[ITERATOR$h].call(test) !== test;
});

if (NEW_ITERATOR_PROTOTYPE$2) IteratorPrototype$6 = {};

// `%IteratorPrototype%[@@iterator]()` method
// https://tc39.es/ecma262/#sec-%iteratorprototype%-@@iterator
if (!isCallable$2(IteratorPrototype$6[ITERATOR$h])) {
  defineBuiltIn$2(IteratorPrototype$6, ITERATOR$h, function () {
    return this;
  });
}

var iteratorsCore$2 = {
  IteratorPrototype: IteratorPrototype$6,
  BUGGY_SAFARI_ITERATORS: BUGGY_SAFARI_ITERATORS$4
};

var IteratorPrototype$7 = iteratorsCore$2.IteratorPrototype;





var returnThis$4 = function () { return this; };

var iteratorCreateConstructor$2 = function (IteratorConstructor, NAME, next, ENUMERABLE_NEXT) {
  var TO_STRING_TAG = NAME + ' Iterator';
  IteratorConstructor.prototype = objectCreate$2(IteratorPrototype$7, { next: createPropertyDescriptor$2(+!ENUMERABLE_NEXT, next) });
  setToStringTag$2(IteratorConstructor, TO_STRING_TAG, false);
  iterators$2[TO_STRING_TAG] = returnThis$4;
  return IteratorConstructor;
};

var PROPER_FUNCTION_NAME$3 = functionName$2.PROPER;
var CONFIGURABLE_FUNCTION_NAME$2 = functionName$2.CONFIGURABLE;
var IteratorPrototype$8 = iteratorsCore$2.IteratorPrototype;
var BUGGY_SAFARI_ITERATORS$5 = iteratorsCore$2.BUGGY_SAFARI_ITERATORS;
var ITERATOR$i = wellKnownSymbol$2('iterator');
var KEYS$2 = 'keys';
var VALUES$2 = 'values';
var ENTRIES$2 = 'entries';

var returnThis$5 = function () { return this; };

var iteratorDefine$2 = function (Iterable, NAME, IteratorConstructor, next, DEFAULT, IS_SET, FORCED) {
  iteratorCreateConstructor$2(IteratorConstructor, NAME, next);

  var getIterationMethod = function (KIND) {
    if (KIND === DEFAULT && defaultIterator) return defaultIterator;
    if (!BUGGY_SAFARI_ITERATORS$5 && KIND in IterablePrototype) return IterablePrototype[KIND];
    switch (KIND) {
      case KEYS$2: return function keys() { return new IteratorConstructor(this, KIND); };
      case VALUES$2: return function values() { return new IteratorConstructor(this, KIND); };
      case ENTRIES$2: return function entries() { return new IteratorConstructor(this, KIND); };
    } return function () { return new IteratorConstructor(this); };
  };

  var TO_STRING_TAG = NAME + ' Iterator';
  var INCORRECT_VALUES_NAME = false;
  var IterablePrototype = Iterable.prototype;
  var nativeIterator = IterablePrototype[ITERATOR$i]
    || IterablePrototype['@@iterator']
    || DEFAULT && IterablePrototype[DEFAULT];
  var defaultIterator = !BUGGY_SAFARI_ITERATORS$5 && nativeIterator || getIterationMethod(DEFAULT);
  var anyNativeIterator = NAME == 'Array' ? IterablePrototype.entries || nativeIterator : nativeIterator;
  var CurrentIteratorPrototype, methods, KEY;

  // fix native
  if (anyNativeIterator) {
    CurrentIteratorPrototype = objectGetPrototypeOf$2(anyNativeIterator.call(new Iterable()));
    if (CurrentIteratorPrototype !== Object.prototype && CurrentIteratorPrototype.next) {
      if ( objectGetPrototypeOf$2(CurrentIteratorPrototype) !== IteratorPrototype$8) {
        if (objectSetPrototypeOf$2) {
          objectSetPrototypeOf$2(CurrentIteratorPrototype, IteratorPrototype$8);
        } else if (!isCallable$2(CurrentIteratorPrototype[ITERATOR$i])) {
          defineBuiltIn$2(CurrentIteratorPrototype, ITERATOR$i, returnThis$5);
        }
      }
      // Set @@toStringTag to native iterators
      setToStringTag$2(CurrentIteratorPrototype, TO_STRING_TAG, true);
    }
  }

  // fix Array.prototype.{ values, @@iterator }.name in V8 / FF
  if (PROPER_FUNCTION_NAME$3 && DEFAULT == VALUES$2 && nativeIterator && nativeIterator.name !== VALUES$2) {
    if ( CONFIGURABLE_FUNCTION_NAME$2) {
      createNonEnumerableProperty$2(IterablePrototype, 'name', VALUES$2);
    } else {
      INCORRECT_VALUES_NAME = true;
      defaultIterator = function values() { return functionCall$2(nativeIterator, this); };
    }
  }

  // export additional methods
  if (DEFAULT) {
    methods = {
      values: getIterationMethod(VALUES$2),
      keys: IS_SET ? defaultIterator : getIterationMethod(KEYS$2),
      entries: getIterationMethod(ENTRIES$2)
    };
    if (FORCED) for (KEY in methods) {
      if (BUGGY_SAFARI_ITERATORS$5 || INCORRECT_VALUES_NAME || !(KEY in IterablePrototype)) {
        defineBuiltIn$2(IterablePrototype, KEY, methods[KEY]);
      }
    } else _export$2({ target: NAME, proto: true, forced: BUGGY_SAFARI_ITERATORS$5 || INCORRECT_VALUES_NAME }, methods);
  }

  // define iterator
  if ( IterablePrototype[ITERATOR$i] !== defaultIterator) {
    defineBuiltIn$2(IterablePrototype, ITERATOR$i, defaultIterator, { name: DEFAULT });
  }
  iterators$2[NAME] = defaultIterator;

  return methods;
};

// `CreateIterResultObject` abstract operation
// https://tc39.es/ecma262/#sec-createiterresultobject
var createIterResultObject$2 = function (value, done) {
  return { value: value, done: done };
};

var defineProperty$d = objectDefineProperty$2.f;





var ARRAY_ITERATOR$2 = 'Array Iterator';
var setInternalState$9 = internalState$2.set;
var getInternalState$5 = internalState$2.getterFor(ARRAY_ITERATOR$2);

// `Array.prototype.entries` method
// https://tc39.es/ecma262/#sec-array.prototype.entries
// `Array.prototype.keys` method
// https://tc39.es/ecma262/#sec-array.prototype.keys
// `Array.prototype.values` method
// https://tc39.es/ecma262/#sec-array.prototype.values
// `Array.prototype[@@iterator]` method
// https://tc39.es/ecma262/#sec-array.prototype-@@iterator
// `CreateArrayIterator` internal method
// https://tc39.es/ecma262/#sec-createarrayiterator
var es_array_iterator$2 = iteratorDefine$2(Array, 'Array', function (iterated, kind) {
  setInternalState$9(this, {
    type: ARRAY_ITERATOR$2,
    target: toIndexedObject$2(iterated), // target
    index: 0,                          // next index
    kind: kind                         // kind
  });
// `%ArrayIteratorPrototype%.next` method
// https://tc39.es/ecma262/#sec-%arrayiteratorprototype%.next
}, function () {
  var state = getInternalState$5(this);
  var target = state.target;
  var kind = state.kind;
  var index = state.index++;
  if (!target || index >= target.length) {
    state.target = undefined;
    return createIterResultObject$2(undefined, true);
  }
  if (kind == 'keys') return createIterResultObject$2(index, false);
  if (kind == 'values') return createIterResultObject$2(target[index], false);
  return createIterResultObject$2([index, target[index]], false);
}, 'values');

// argumentsList[@@iterator] is %ArrayProto_values%
// https://tc39.es/ecma262/#sec-createunmappedargumentsobject
// https://tc39.es/ecma262/#sec-createmappedargumentsobject
var values$3 = iterators$2.Arguments = iterators$2.Array;

// https://tc39.es/ecma262/#sec-array.prototype-@@unscopables
addToUnscopables$2('keys');
addToUnscopables$2('values');
addToUnscopables$2('entries');

// V8 ~ Chrome 45- bug
if ( descriptors$2 && values$3.name !== 'values') try {
  defineProperty$d(values$3, 'name', { value: 'values' });
} catch (error) { /* empty */ }

var $String$b = String;

var toString_1$2 = function (argument) {
  if (classof$2(argument) === 'Symbol') throw TypeError('Cannot convert a Symbol value to a string');
  return $String$b(argument);
};

// `RegExp.prototype.flags` getter implementation
// https://tc39.es/ecma262/#sec-get-regexp.prototype.flags
var regexpFlags$1 = function () {
  var that = anObject$2(this);
  var result = '';
  if (that.hasIndices) result += 'd';
  if (that.global) result += 'g';
  if (that.ignoreCase) result += 'i';
  if (that.multiline) result += 'm';
  if (that.dotAll) result += 's';
  if (that.unicode) result += 'u';
  if (that.unicodeSets) result += 'v';
  if (that.sticky) result += 'y';
  return result;
};

// babel-minify and Closure Compiler transpiles RegExp('a', 'y') -> /a/y and it causes SyntaxError
var $RegExp$3 = global_1$2.RegExp;

var UNSUPPORTED_Y$2 = fails$2(function () {
  var re = $RegExp$3('a', 'y');
  re.lastIndex = 2;
  return re.exec('abcd') != null;
});

// UC Browser bug
// https://github.com/zloirock/core-js/issues/1008
var MISSED_STICKY$1 = UNSUPPORTED_Y$2 || fails$2(function () {
  return !$RegExp$3('a', 'y').sticky;
});

var BROKEN_CARET$1 = UNSUPPORTED_Y$2 || fails$2(function () {
  // https://bugzilla.mozilla.org/show_bug.cgi?id=773687
  var re = $RegExp$3('^r', 'gy');
  re.lastIndex = 2;
  return re.exec('str') != null;
});

var regexpStickyHelpers$1 = {
  BROKEN_CARET: BROKEN_CARET$1,
  MISSED_STICKY: MISSED_STICKY$1,
  UNSUPPORTED_Y: UNSUPPORTED_Y$2
};

// babel-minify and Closure Compiler transpiles RegExp('.', 's') -> /./s and it causes SyntaxError
var $RegExp$4 = global_1$2.RegExp;

var regexpUnsupportedDotAll$1 = fails$2(function () {
  var re = $RegExp$4('.', 's');
  return !(re.dotAll && re.exec('\n') && re.flags === 's');
});

// babel-minify and Closure Compiler transpiles RegExp('(?<a>b)', 'g') -> /(?<a>b)/g and it causes SyntaxError
var $RegExp$5 = global_1$2.RegExp;

var regexpUnsupportedNcg$1 = fails$2(function () {
  var re = $RegExp$5('(?<a>b)', 'g');
  return re.exec('b').groups.a !== 'b' ||
    'b'.replace(re, '$<a>c') !== 'bc';
});

/* eslint-disable regexp/no-empty-capturing-group, regexp/no-empty-group, regexp/no-lazy-ends -- testing */
/* eslint-disable regexp/no-useless-quantifier -- testing */







var getInternalState$6 = internalState$2.get;



var nativeReplace$1 = shared$2('native-string-replace', String.prototype.replace);
var nativeExec$1 = RegExp.prototype.exec;
var patchedExec$1 = nativeExec$1;
var charAt$8 = functionUncurryThis$2(''.charAt);
var indexOf$4 = functionUncurryThis$2(''.indexOf);
var replace$7 = functionUncurryThis$2(''.replace);
var stringSlice$a = functionUncurryThis$2(''.slice);

var UPDATES_LAST_INDEX_WRONG$1 = (function () {
  var re1 = /a/;
  var re2 = /b*/g;
  functionCall$2(nativeExec$1, re1, 'a');
  functionCall$2(nativeExec$1, re2, 'a');
  return re1.lastIndex !== 0 || re2.lastIndex !== 0;
})();

var UNSUPPORTED_Y$3 = regexpStickyHelpers$1.BROKEN_CARET;

// nonparticipating capturing group, copied from es5-shim's String#split patch.
var NPCG_INCLUDED$1 = /()??/.exec('')[1] !== undefined;

var PATCH$1 = UPDATES_LAST_INDEX_WRONG$1 || NPCG_INCLUDED$1 || UNSUPPORTED_Y$3 || regexpUnsupportedDotAll$1 || regexpUnsupportedNcg$1;

if (PATCH$1) {
  patchedExec$1 = function exec(string) {
    var re = this;
    var state = getInternalState$6(re);
    var str = toString_1$2(string);
    var raw = state.raw;
    var result, reCopy, lastIndex, match, i, object, group;

    if (raw) {
      raw.lastIndex = re.lastIndex;
      result = functionCall$2(patchedExec$1, raw, str);
      re.lastIndex = raw.lastIndex;
      return result;
    }

    var groups = state.groups;
    var sticky = UNSUPPORTED_Y$3 && re.sticky;
    var flags = functionCall$2(regexpFlags$1, re);
    var source = re.source;
    var charsAdded = 0;
    var strCopy = str;

    if (sticky) {
      flags = replace$7(flags, 'y', '');
      if (indexOf$4(flags, 'g') === -1) {
        flags += 'g';
      }

      strCopy = stringSlice$a(str, re.lastIndex);
      // Support anchored sticky behavior.
      if (re.lastIndex > 0 && (!re.multiline || re.multiline && charAt$8(str, re.lastIndex - 1) !== '\n')) {
        source = '(?: ' + source + ')';
        strCopy = ' ' + strCopy;
        charsAdded++;
      }
      // ^(? + rx + ) is needed, in combination with some str slicing, to
      // simulate the 'y' flag.
      reCopy = new RegExp('^(?:' + source + ')', flags);
    }

    if (NPCG_INCLUDED$1) {
      reCopy = new RegExp('^' + source + '$(?!\\s)', flags);
    }
    if (UPDATES_LAST_INDEX_WRONG$1) lastIndex = re.lastIndex;

    match = functionCall$2(nativeExec$1, sticky ? reCopy : re, strCopy);

    if (sticky) {
      if (match) {
        match.input = stringSlice$a(match.input, charsAdded);
        match[0] = stringSlice$a(match[0], charsAdded);
        match.index = re.lastIndex;
        re.lastIndex += match[0].length;
      } else re.lastIndex = 0;
    } else if (UPDATES_LAST_INDEX_WRONG$1 && match) {
      re.lastIndex = re.global ? match.index + match[0].length : lastIndex;
    }
    if (NPCG_INCLUDED$1 && match && match.length > 1) {
      // Fix browsers whose `exec` methods don't consistently return `undefined`
      // for NPCG, like IE8. NOTE: This doesn't work for /(.?)?/
      functionCall$2(nativeReplace$1, match[0], reCopy, function () {
        for (i = 1; i < arguments.length - 2; i++) {
          if (arguments[i] === undefined) match[i] = undefined;
        }
      });
    }

    if (match && groups) {
      match.groups = object = objectCreate$2(null);
      for (i = 0; i < groups.length; i++) {
        group = groups[i];
        object[group[0]] = match[group[1]];
      }
    }

    return match;
  };
}

var regexpExec$1 = patchedExec$1;

// `RegExp.prototype.exec` method
// https://tc39.es/ecma262/#sec-regexp.prototype.exec
_export$2({ target: 'RegExp', proto: true, forced: /./.exec !== regexpExec$1 }, {
  exec: regexpExec$1
});

const Messages = {
  ERROR_MAX_RETRY: (numRetries, errString) => `Unable to retrieve artifact after ${numRetries} retries: ${errString}`,
  ARTIFACT_NOT_AVAILABLE: "The decisioning artifact is not available",
  ARTIFACT_VERSION_UNSUPPORTED: (artifactVersion, supportedMajorVersion) => `The decisioning artifact version (${artifactVersion}) is not supported. This library is compatible with this major version: ${supportedMajorVersion}`,
  ARTIFACT_FETCH_ERROR: reason => `Failed to retrieve artifact: ${reason}`,
  ARTIFACT_INVALID: "Invalid Artifact",
  INVALID_ENVIRONMENT: (expectedEnvironment, defaultEnvironment) => `'${expectedEnvironment}' is not a valid target environment, defaulting to '${defaultEnvironment}'.`,
  NOT_APPLICABLE: "Not Applicable",
  ARTIFACT_OBFUSCATION_ERROR: "Unable to read artifact JSON",
  UNKNOWN: "unknown"
};

const DEFAULT_POLLING_INTERVAL = 300000; // five minutes (in milliseconds)

const MINIMUM_POLLING_INTERVAL = 300000; // five minutes (in milliseconds)

const NUM_FETCH_RETRIES = 10;
const SUPPORTED_ARTIFACT_MAJOR_VERSION = 1;
const SUPPORTED_ARTIFACT_OBFUSCATION_VERSION = 1;
const REGEX_ARTIFACT_FILENAME_BINARY = /.+\.bin$/i;
const ARTIFACT_FORMAT_BINARY = "bin";
const ARTIFACT_FORMAT_JSON = "json";
const ARTIFACT_FORMAT_DEFAULT = ARTIFACT_FORMAT_JSON;
const ARTIFACT_FORMATS = [ARTIFACT_FORMAT_BINARY, ARTIFACT_FORMAT_JSON];
const ARTIFACT_FILENAME = {};
ARTIFACT_FILENAME[ARTIFACT_FORMAT_BINARY] = "rules.bin";
ARTIFACT_FILENAME[ARTIFACT_FORMAT_JSON] = "rules.json";
const LOG_PREFIX = "LD";
const CDN_BASE_PATH = "assets.adobetarget.com";
const HTTP_HEADER_FORWARDED_FOR = "x-forwarded-for";
const HTTP_HEADER_GEO_LATITUDE = "x-geo-latitude";
const HTTP_HEADER_GEO_LONGITUDE = "x-geo-longitude";
const HTTP_HEADER_GEO_COUNTRY = "x-geo-country-code";
const HTTP_HEADER_GEO_REGION = "x-geo-region-code";
const HTTP_HEADER_GEO_CITY = "x-geo-city";
const CAMPAIGN_BUCKET_SALT = "0"; // Response token keys

const AUDIENCE_IDS = "audience.ids";
const ACTIVITY_DECISIONING_METHOD = "activity.decisioningMethod";
const ACTIVITY_ID = "activity.id";
const ACTIVITY_NAME = "activity.name";
const ACTIVITY_TYPE = "activity.type";
const EXPERIENCE_ID = "experience.id";
const EXPERIENCE_NAME = "experience.name";
const LOCATION_ID = "location.id";
const LOCATION_NAME = "location.name";
const LOCATION_TYPE = "location.type";
const OFFER_ID = "offer.id";
const OFFER_NAME = "offer.name";
const OPTION_ID = "option.id";
const OPTION_NAME = "option.name";
const GEO_CITY = "geo.city";
const GEO_COUNTRY = "geo.country";
const GEO_STATE = "geo.state";
const GEO_LATITUDE = "geo.latitude";
const GEO_LONGITUDE = "geo.longitude";

/**
 *
 * @param {import("../types/DecisioningArtifact").Rule} rule
 * @return {string}
 */

function getRuleKey(rule) {
  return rule.ruleKey;
}
/**
 * @param {string} host
 * @returns {import("../types/DecisioningContext").DomainContext}
 */

function parseDomainBasic(host) {
  const result = {};
  const domainParts = host.split(".");

  switch (domainParts.length) {
    case 1:
      result.subdomain = "";
      result.domain = host;
      result.topLevelDomain = "";
      break;

    case 2:
      result.subdomain = "";
      result.domain = host;
      result.topLevelDomain = domainParts[1];
      break;

    case 3:
      result.subdomain = domainParts[0] === "www" ? "" : domainParts[0];
      result.domain = host;
      result.topLevelDomain = domainParts[2];
      break;

    case 4:
      result.subdomain = domainParts[0] === "www" ? "" : domainParts[0];
      result.domain = host;
      result.topLevelDomain = `${domainParts[2]}.${domainParts[3]}`;
      break;
  }

  return result;
}
/**
 *
 * @param {string} url
 * @param { import("../types/DecisioningContext").ParseDomainFunc } parseDomain
 * @returns {{path: string, fragment: string, topLevelDomain?: string, query: string, domain?: string, subdomain?: string, url: string}}
 */

function parseURL(url, parseDomain = parseDomainBasic) {
  if (!isString(url)) {
    // eslint-disable-next-line no-param-reassign
    url = "";
  }

  const parsed = src(url) || {};
  const {
    host = "",
    path = "",
    query = "",
    anchor = ""
  } = parsed;
  return _objectSpread2({
    url,
    path,
    query,
    fragment: anchor
  }, parseDomain(host));
}
/**
 *
 * @param {import("../types/DecisioningConfig").DecisioningConfig} config
 * @returns {import("../types/DecisioningContext").ParseDomainFunc}
 */

function getParseDomainImpl(config) {
  return isFunction(config.parseDomainImpl) ? config.parseDomainImpl : parseDomainBasic;
}
/**
 * @param { import("../types/DecisioningArtifact").DecisioningArtifact } artifact
 * @param {import("@adobe/target-tools/delivery-api-client/models/DeliveryRequest").DeliveryRequest} request
 */

function hasRemoteDependency(artifact, request) {
  // TODO: memoize this
  if (isUndefined(artifact)) {
    throw new Error(Messages.ARTIFACT_NOT_AVAILABLE);
  }

  const requestedMboxes = Array.from(getMboxNames(request));

  if (request.execute && isPojo(request.execute.pageLoad) || request.prefetch && isPojo(request.prefetch.pageLoad)) {
    requestedMboxes.push(DEFAULT_GLOBAL_MBOX);
  }

  const requestedViews = Array.from(getViewNames(request));
  const {
    remoteMboxes = [],
    localMboxes = [],
    remoteViews = [],
    localViews = []
  } = artifact;
  const mboxesThatRequireRemote = new Set([...remoteMboxes.filter(mboxName => includes(mboxName, requestedMboxes)), ...requestedMboxes.filter(mboxName => !includes(mboxName, localMboxes))]);
  const viewsThatRequireRemote = hasRequestedViews(request) && requestedViews.length === 0 ? new Set(remoteViews) : new Set([...remoteViews.filter(viewName => includes(viewName, requestedViews)), ...requestedViews.filter(viewName => !includes(viewName, localViews))]);
  return {
    remoteNeeded: mboxesThatRequireRemote.size > 0 || viewsThatRequireRemote.size > 0,
    remoteMboxes: Array.from(mboxesThatRequireRemote),
    remoteViews: Array.from(viewsThatRequireRemote)
  };
}
/**
 * @param { string } semanticVersion
 * @param { number } majorVersion
 */

function matchMajorVersion(semanticVersion, majorVersion) {
  // eslint-disable-next-line no-unused-vars
  const [major, minor, patch] = semanticVersion.split(".").map(value => parseInt(value, 10));
  return majorVersion === major;
}
function cloneDeep(obj) {
  if (isDefined(obj)) {
    return JSON.parse(JSON.stringify(obj));
  }

  return undefined;
}
function getArtifactFileName(artifactFormat = ARTIFACT_FORMAT_DEFAULT) {
  // eslint-disable-next-line no-param-reassign
  artifactFormat = includes(artifactFormat, ARTIFACT_FORMATS) ? artifactFormat : ARTIFACT_FORMAT_DEFAULT;
  return ARTIFACT_FILENAME[artifactFormat];
}
/**
 * @param {import("../types/DecisioningConfig").DecisioningConfig} config Options map, required
 * @param {Boolean} addPropertyToken
 */

function determineArtifactLocation(config) {
  const {
    client,
    propertyToken,
    artifactFormat,
    artifactLocation
  } = config;

  if (isString(artifactLocation)) {
    return artifactLocation;
  }

  const cdnBaseUrl = `https://${CDN_BASE_PATH}`;
  const targetEnvironment = config.environment ? config.environment.toLowerCase() : ENVIRONMENT_PROD;
  return [cdnBaseUrl, client, targetEnvironment, `v${SUPPORTED_ARTIFACT_MAJOR_VERSION}`, isDefined(propertyToken) ? propertyToken : undefined, getArtifactFileName(artifactFormat)].filter(value => isDefined(value)).join("/");
}
/**
 *
 * @param {string} artifactLocation
 */

function determineArtifactFormat(artifactLocation) {
  return artifactLocation.match(REGEX_ARTIFACT_FILENAME_BINARY) != null ? ARTIFACT_FORMAT_BINARY : ARTIFACT_FORMAT_JSON;
}
/**
 * firstMatch looks through a list of objects (in order) and returns a value from the first object that has a matching key
 * @param key
 * @param {Array<Object>} searchObjects
 * @param defaultValue
 */

function firstMatch(key, searchObjects = [], defaultValue = undefined) {
  for (let i = 0; i < searchObjects.length; i += 1) {
    const haystack = searchObjects[i];

    if (isObject$1(haystack) && isDefined(haystack[key])) {
      return haystack[key];
    }
  }

  return defaultValue;
}
/**
 * @param {object} object
 * @param { array<string> } keys
 * @param { object } value
 */

function setNestedValue(object, keys, value) {
  let currentObj = object;

  for (let i = 0; i < keys.length - 1; i += 1) {
    currentObj[keys[i]] = currentObj[keys[i]] || {};
    currentObj = currentObj[keys[i]];
  }

  currentObj[keys[keys.length - 1]] = value;
}
/**
 * @param {string} key
 * @returns {boolean}
 */


function isExpandableKey(key) {
  const keyLength = key.length;
  return includes(".", key) && !includes("..", key) && key[0] !== "." && key[keyLength - 1] !== ".";
}
/**
 * @param {object} object
 * @return {object} object
 */


function unflatten(object) {
  const result = {};
  Object.keys(object).forEach(key => {
    if (isExpandableKey(key)) {
      setNestedValue(result, key.split("."), object[key]);
    } else {
      result[key] = object[key];
    }
  });
  return result;
}

/**
 * @type { import("@adobe/target-tools/delivery-api-client/models/Context").Context }
 */

const EMPTY_CONTEXT = {
  channel: ChannelType.Web
};

function getLowerCaseAttributes(obj) {
  const result = {};
  Object.keys(obj).forEach(key => {
    result[`${key}_lc`] = isString(obj[key]) ? obj[key].toLowerCase() : obj[key];
  });
  return result;
}

function withLowerCaseStringValues(obj) {
  const result = _objectSpread2({}, obj);

  Object.keys(obj).forEach(key => {
    if (isString(result[key])) {
      result[`${key}_lc`] = result[key].toLowerCase();
    }

    if (isPlainObject(obj[key])) {
      result[key] = withLowerCaseStringValues(result[key]);
    }
  });
  return result;
}

const BROWSER_PLATFORMS_MAPPING = {
  "Windows": "windows",
  "Macintosh": "mac",
  "Mac OS": "mac",
  "macOS": "mac",
  "Linux": "linux"
};

const toTargetPlatform = platform => isDefined(BROWSER_PLATFORMS_MAPPING[platform]) ? BROWSER_PLATFORMS_MAPPING[platform] : platform;
/**
 * @param { import("@adobe/target-tools/delivery-api-client/models/Context").Context } context
 * @return { import("../types/DecisioningContext").UserContext }
 */


function createBrowserContext(context) {
  const {
    userAgent = "",
    clientHints
  } = context;
  const browser = browserFromUserAgentOrClientHintUA(userAgent, clientHints);
  const platform = operatingSystemFromUserAgentOrClientHints(userAgent, clientHints);
  return {
    browserType: browser.name.toLowerCase(),
    platform: toTargetPlatform(platform),
    locale: "en",
    // TODO: determine where this comes from
    browserVersion: browser.version
  };
}
/**
 * @param { string } url
 * @param { import("../types/DecisioningContext").ParseDomainFunc } parseDomainImpl
 * @return { import("../types/DecisioningContext").PageContext }
 */


function createUrlContext(url, parseDomainImpl) {
  if (!url || !isString(url)) {
    // eslint-disable-next-line no-param-reassign
    url = "";
  }

  const urlAttributes = parseURL(url, parseDomainImpl);
  return _objectSpread2(_objectSpread2({}, urlAttributes), getLowerCaseAttributes(urlAttributes));
}
/**
 * @param { import("@adobe/target-tools/delivery-api-client/models/Address").Address } address
 * @param { import("../types/DecisioningContext").ParseDomainFunc } parseDomainImpl
 * @return { import("../types/DecisioningContext").PageContext }
 */


function createPageContext(address, parseDomainImpl) {
  return createUrlContext(address ? address.url : "", parseDomainImpl);
}
/**
 * @param { import("@adobe/target-tools/delivery-api-client/models/Address").Address } address
 * @param { import("../types/DecisioningContext").ParseDomainFunc } parseDomainImpl
 * @return { import("../types/DecisioningContext").PageContext }
 */

function createReferringContext(address, parseDomainImpl) {
  return createUrlContext(address ? address.referringUrl : "", parseDomainImpl);
}
/**
 * @param { import("@adobe/target-tools/delivery-api-client/models/MboxRequest").MboxRequest } mboxRequest
 * @return { import("../types/DecisioningContext").MboxContext }
 */

function createMboxContext(mboxRequest) {
  if (!mboxRequest) {
    return {};
  }

  const parameters = mboxRequest.parameters || {};
  return withLowerCaseStringValues(_objectSpread2({}, unflatten(parameters)));
}
/**
 * @param { import("@adobe/target-tools/delivery-api-client/models/Geo").Geo } geoContext
 * @return { import("../types/DecisioningContext").GeoContext}
 */

function createGeoContext(geoContext = {}) {
  return {
    country: geoContext.countryCode,
    region: geoContext.stateCode,
    city: geoContext.city,
    latitude: geoContext.latitude,
    longitude: geoContext.longitude
  };
}

function createTimingContext() {
  const now = new Date();

  const twoDigitString = value => value < 10 ? `0${value}` : String(value);

  const currentHours = twoDigitString(now.getUTCHours());
  const currentMinutes = twoDigitString(now.getUTCMinutes());
  const currentTime = `${currentHours}${currentMinutes}`;
  const currentDay = now.getUTCDay(); // 0 for Sunday, 1 for Monday, 2 for Tuesday, and so on.

  return {
    current_timestamp: now.getTime(),
    // in ms
    current_time: currentTime,
    // 24-hour time, UTC, HHmm
    current_day: currentDay === 0 ? 7 : currentDay // 1-7, 1 = monday, 7 = sunday

  };
}
/**
 *
 * The TargetDecisioningEngine initialize method
 * @param { import("@adobe/target-tools/delivery-api-client/models/DeliveryRequest").DeliveryRequest } deliveryRequest
 * @param { import("../types/DecisioningContext").ParseDomainFunc} parseDomainImpl
 * @return { import("../types/DecisioningContext").DecisioningContext }
 */


function createDecisioningContext(deliveryRequest, parseDomainImpl) {
  const {
    context = EMPTY_CONTEXT
  } = deliveryRequest;
  return _objectSpread2(_objectSpread2({}, createTimingContext()), {}, {
    user: createBrowserContext(context),
    page: createPageContext(context.address, parseDomainImpl),
    referring: createReferringContext(context.address, parseDomainImpl),
    geo: createGeoContext(context.geo || {})
  });
}

/* eslint-disable import/prefer-default-export */
const ARTIFACT_DOWNLOAD_SUCCEEDED = "artifactDownloadSucceeded";
const ARTIFACT_DOWNLOAD_FAILED = "artifactDownloadFailed";
const GEO_LOCATION_UPDATED = "geoLocationUpdated";
const SEND_NOTIFICATION_ERROR = "sendNotificationError";

const LOG_TAG = `${LOG_PREFIX}.NotificationProvider`;
/**
 * The get NotificationProvider initialize method
 * @param {import("@adobe/target-tools/delivery-api-client/models/DeliveryRequest").DeliveryRequest} request Target View Delivery API request, required
 * @param visitor VisitorId instance, required
 * @param { Object } logger
 * @param {function} sendNotificationFunc function used to send the notification, required
 * @param telemetryEnabled
 * @param eventEmitter
 */

function NotificationProvider(request, visitor, logger, sendNotificationFunc = noopPromise, telemetryEnabled = true, eventEmitter = noop$2) {
  const timestamp = now();
  const prevEventKeys = new Set();
  let notifications = [];
  /**
   * The get NotificationProvider initialize method
   * @param {import("@adobe/target-tools/delivery-api-client/models/MboxResponse").MboxResponse} mbox
   * @param { Function } traceFn
   */

  function addNotification(mbox, traceFn = noop$2) {
    const displayTokens = [];
    mbox.options.forEach(option => {
      const {
        eventToken
      } = option;
      const eventKey = `${mbox.name}-${eventToken}`;

      if (isDefined(eventToken) && !prevEventKeys.has(eventKey)) {
        displayTokens.push(eventToken);
        prevEventKeys.add(eventKey);
      }
    });

    if (displayTokens.length === 0) {
      return;
    }

    const notification = {
      id: uuid(),
      impressionId: uuid(),
      timestamp,
      type: MetricType.Display,
      mbox: {
        name: mbox.name
      },
      tokens: displayTokens
    };

    if (isFunction(traceFn)) {
      traceFn(notification);
    }

    notifications.push(notification);
  }

  function sendNotifications() {
    logger.debug(`${LOG_TAG}.sendNotifications`, notifications);

    if (notifications.length > 0 || telemetryEnabled) {
      const {
        id,
        context,
        experienceCloud
      } = request;
      const notification = {
        request: {
          id,
          context,
          experienceCloud
        },
        visitor
      };

      if (notifications.length > 0) {
        notification.request.notifications = notifications;
      }

      setTimeout(() => {
        sendNotificationFunc.call(null, notification).catch(error => {
          eventEmitter(SEND_NOTIFICATION_ERROR, {
            notification,
            error
          });
        });
      }, 0);
      notifications = [];
    }
  }

  return {
    addNotification,
    sendNotifications
  };
}

var $TypeError$E = TypeError;

var deletePropertyOrThrow = function (O, P) {
  if (!delete O[P]) throw $TypeError$E('Cannot delete property ' + tryToString$2(P) + ' of ' + tryToString$2(O));
};

var createProperty$2 = function (object, key, value) {
  var propertyKey = toPropertyKey$2(key);
  if (propertyKey in object) objectDefineProperty$2.f(object, propertyKey, createPropertyDescriptor$2(0, value));
  else object[propertyKey] = value;
};

var $Array$3 = Array;
var max$6 = Math.max;

var arraySliceSimple$2 = function (O, start, end) {
  var length = lengthOfArrayLike$2(O);
  var k = toAbsoluteIndex$2(start, length);
  var fin = toAbsoluteIndex$2(end === undefined ? length : end, length);
  var result = $Array$3(max$6(fin - k, 0));
  for (var n = 0; k < fin; k++, n++) createProperty$2(result, n, O[k]);
  result.length = n;
  return result;
};

var floor$8 = Math.floor;

var mergeSort$2 = function (array, comparefn) {
  var length = array.length;
  var middle = floor$8(length / 2);
  return length < 8 ? insertionSort$2(array, comparefn) : merge$2(
    array,
    mergeSort$2(arraySliceSimple$2(array, 0, middle), comparefn),
    mergeSort$2(arraySliceSimple$2(array, middle), comparefn),
    comparefn
  );
};

var insertionSort$2 = function (array, comparefn) {
  var length = array.length;
  var i = 1;
  var element, j;

  while (i < length) {
    j = i;
    element = array[i];
    while (j && comparefn(array[j - 1], element) > 0) {
      array[j] = array[--j];
    }
    if (j !== i++) array[j] = element;
  } return array;
};

var merge$2 = function (array, left, right, comparefn) {
  var llength = left.length;
  var rlength = right.length;
  var lindex = 0;
  var rindex = 0;

  while (lindex < llength || rindex < rlength) {
    array[lindex + rindex] = (lindex < llength && rindex < rlength)
      ? comparefn(left[lindex], right[rindex]) <= 0 ? left[lindex++] : right[rindex++]
      : lindex < llength ? left[lindex++] : right[rindex++];
  } return array;
};

var arraySort$2 = mergeSort$2;

var arrayMethodIsStrict = function (METHOD_NAME, argument) {
  var method = [][METHOD_NAME];
  return !!method && fails$2(function () {
    // eslint-disable-next-line no-useless-call -- required for testing
    method.call(null, argument || function () { return 1; }, 1);
  });
};

var firefox$1 = engineUserAgent$2.match(/firefox\/(\d+)/i);

var engineFfVersion$1 = !!firefox$1 && +firefox$1[1];

var engineIsIeOrEdge$1 = /MSIE|Trident/.test(engineUserAgent$2);

var webkit$1 = engineUserAgent$2.match(/AppleWebKit\/(\d+)\./);

var engineWebkitVersion$1 = !!webkit$1 && +webkit$1[1];

var test$3 = [];
var nativeSort$1 = functionUncurryThis$2(test$3.sort);
var push$8 = functionUncurryThis$2(test$3.push);

// IE8-
var FAILS_ON_UNDEFINED = fails$2(function () {
  test$3.sort(undefined);
});
// V8 bug
var FAILS_ON_NULL = fails$2(function () {
  test$3.sort(null);
});
// Old WebKit
var STRICT_METHOD = arrayMethodIsStrict('sort');

var STABLE_SORT$1 = !fails$2(function () {
  // feature detection can be too slow, so check engines versions
  if (engineV8Version$2) return engineV8Version$2 < 70;
  if (engineFfVersion$1 && engineFfVersion$1 > 3) return;
  if (engineIsIeOrEdge$1) return true;
  if (engineWebkitVersion$1) return engineWebkitVersion$1 < 603;

  var result = '';
  var code, chr, value, index;

  // generate an array with more 512 elements (Chakra and old V8 fails only in this case)
  for (code = 65; code < 76; code++) {
    chr = String.fromCharCode(code);

    switch (code) {
      case 66: case 69: case 70: case 72: value = 3; break;
      case 68: case 71: value = 4; break;
      default: value = 2;
    }

    for (index = 0; index < 47; index++) {
      test$3.push({ k: chr + index, v: value });
    }
  }

  test$3.sort(function (a, b) { return b.v - a.v; });

  for (index = 0; index < test$3.length; index++) {
    chr = test$3[index].k.charAt(0);
    if (result.charAt(result.length - 1) !== chr) result += chr;
  }

  return result !== 'DGBEFHACIJK';
});

var FORCED = FAILS_ON_UNDEFINED || !FAILS_ON_NULL || !STRICT_METHOD || !STABLE_SORT$1;

var getSortCompare$1 = function (comparefn) {
  return function (x, y) {
    if (y === undefined) return -1;
    if (x === undefined) return 1;
    if (comparefn !== undefined) return +comparefn(x, y) || 0;
    return toString_1$2(x) > toString_1$2(y) ? 1 : -1;
  };
};

// `Array.prototype.sort` method
// https://tc39.es/ecma262/#sec-array.prototype.sort
_export$2({ target: 'Array', proto: true, forced: FORCED }, {
  sort: function sort(comparefn) {
    if (comparefn !== undefined) aCallable$2(comparefn);

    var array = toObject$3(this);

    if (STABLE_SORT$1) return comparefn === undefined ? nativeSort$1(array) : nativeSort$1(array, comparefn);

    var items = [];
    var arrayLength = lengthOfArrayLike$2(array);
    var itemsLength, index;

    for (index = 0; index < arrayLength; index++) {
      if (index in array) push$8(items, array[index]);
    }

    arraySort$2(items, getSortCompare$1(comparefn));

    itemsLength = lengthOfArrayLike$2(items);
    index = 0;

    while (index < itemsLength) array[index] = items[index++];
    while (index < arrayLength) deletePropertyOrThrow(array, index++);

    return array;
  }
});

const byOrder = (a, b) => a.order - b.order;
/**
 * @param {import("../types/DecisioningConfig").DecisioningConfig} config Options map, required
 * @param {import("../types/TargetDeliveryRequest").TargetDeliveryRequest} targetOptions
 * @param { object } artifactTrace
 */


function TraceProvider(config, targetOptions, artifactTrace) {
  const clientCode = config.client;
  const {
    sessionId,
    request
  } = targetOptions;
  const showTraces = isDefined(request.trace);
  const [tntId, profileLocation] = isDefined(request.id) && isString(request.id.tntId) ? request.id.tntId.split(".") : [undefined, undefined];
  const profile = {
    visitorId: _objectSpread2(_objectSpread2({}, request.id), {}, {
      tntId,
      profileLocation
    })
  };

  function wrap(traceResult) {
    if (!showTraces) {
      return undefined;
    }

    return {
      clientCode,
      artifact: artifactTrace,
      profile,
      request: _objectSpread2({
        sessionId
      }, traceResult.request),
      campaigns: traceResult.campaigns,
      evaluatedCampaignTargets: traceResult.evaluatedCampaignTargets
    };
  }

  return {
    wrap
  };
}
/**
 * @param traceProvider
 * @param { import("../types/DecisioningArtifact").DecisioningArtifact } artifact
 */

function RequestTracer(traceProvider, artifact) {
  let request = {}; // add to as rules are evaluated

  const campaigns = {};
  let campaignOrder = 0;
  const evaluatedCampaignTargets = {};
  let evaluatedCampaignTargetOrder = 0;
  /**
   *
   * @param { 'execute'|'prefetch' } mode
   * @param { 'mbox'|'view'|'pageLoad' } requestType
   * @param mboxRequest
   * @param context
   */

  function traceRequest(mode, requestType, mboxRequest, context) {
    request = {
      pageURL: context.page.url,
      host: context.page.domain
    };
    request[requestType] = _objectSpread2(_objectSpread2({}, mboxRequest), {}, {
      type: mode
    });
  }
  /**
   *
   * @param {import("../types/DecisioningArtifact").Rule} rule
   * @param { Boolean } ruleSatisfied
   */


  function addCampaign(rule, ruleSatisfied) {
    const {
      meta
    } = rule;
    const activityId = meta[ACTIVITY_ID];

    if (ruleSatisfied && isUndefined(campaigns[activityId])) {
      campaignOrder += 1;
      campaigns[activityId] = {
        id: activityId,
        order: campaignOrder,
        campaignType: meta[ACTIVITY_TYPE],
        branchId: meta[EXPERIENCE_ID],
        offers: isDefined(meta[OFFER_ID]) ? [meta[OFFER_ID]] : [],
        environment: artifact.meta.environment
      };
    }
  }
  /**
   *
   * @param {import("../types/DecisioningArtifact").Rule} rule
   * @param { import("../types/DecisioningContext").DecisioningContext } ruleContext
   * @param { Boolean } ruleSatisfied
   */


  function addEvaluatedCampaignTarget(rule, ruleContext, ruleSatisfied) {
    const {
      meta
    } = rule;
    const audienceIds = meta[AUDIENCE_IDS];
    const activityId = meta[ACTIVITY_ID];

    if (isUndefined(evaluatedCampaignTargets[activityId])) {
      evaluatedCampaignTargetOrder += 1;
      evaluatedCampaignTargets[activityId] = {
        order: evaluatedCampaignTargetOrder,
        context: ruleContext,
        campaignId: activityId,
        campaignType: meta[ACTIVITY_TYPE],
        matchedSegmentIds: new Set(),
        unmatchedSegmentIds: new Set(),
        matchedRuleConditions: [],
        unmatchedRuleConditions: []
      };
    }

    audienceIds.forEach(audienceId => {
      evaluatedCampaignTargets[activityId][ruleSatisfied ? "matchedSegmentIds" : "unmatchedSegmentIds"].add(audienceId);
    });
    evaluatedCampaignTargets[activityId][ruleSatisfied ? "matchedRuleConditions" : "unmatchedRuleConditions"].push(rule.condition);
  }
  /**
   * @param {import("../types/DecisioningArtifact").Rule} rule
   * @param { import("@adobe/target-tools/delivery-api-client/models/MboxRequest").MboxRequest|import("@adobe/target-tools/delivery-api-client/models/RequestDetails").RequestDetails } mboxRequest
   * @param { 'mbox'|'view'|'pageLoad' } requestType
   * @param { import("../types/DecisioningContext").DecisioningContext } ruleContext
   * @param { Boolean } ruleSatisfied
   */


  function traceRuleEvaluated(rule, mboxRequest, requestType, ruleContext, ruleSatisfied) {
    addCampaign(rule, ruleSatisfied);
    addEvaluatedCampaignTarget(rule, ruleContext, ruleSatisfied);
  }
  /**
   *
   * @param {import("../types/DecisioningArtifact").Rule} rule
   */


  function traceNotification(rule) {
    const {
      meta
    } = rule;
    const activityId = meta[ACTIVITY_ID];

    if (!(campaigns[activityId].notifications instanceof Array)) {
      campaigns[activityId].notifications = [];
    }

    return notification => {
      campaigns[activityId].notifications.push(notification);
    };
  }

  function toJSON() {
    return {
      campaigns: values$1(campaigns).sort(byOrder).map(campaign => {
        const result = _objectSpread2({}, campaign);

        delete result.order;
        return result;
      }),
      evaluatedCampaignTargets: values$1(evaluatedCampaignTargets).sort(byOrder).map(evaluatedCampaignTarget => {
        const result = _objectSpread2(_objectSpread2({}, evaluatedCampaignTarget), {}, {
          matchedSegmentIds: [...evaluatedCampaignTarget.matchedSegmentIds],
          unmatchedSegmentIds: [...evaluatedCampaignTarget.unmatchedSegmentIds]
        });

        delete result.order;
        return result;
      }),
      request
    };
  }

  function getTraceResult() {
    return traceProvider.wrap(toJSON());
  }

  return {
    toJSON,
    traceRuleEvaluated,
    traceRequest,
    traceNotification,
    getTraceResult
  };
}
/**
 *
 * @param {string} artifactLocation
 * @param {import("../types/DecisioningArtifact").DecisioningArtifact} artifactPayload
 * @param {number} pollingInterval
 * @param {boolean} pollingHalted
 * @param {import("../types/DecisioningArtifact").DecisioningArtifact} firstArtifact
 */

function ArtifactTracer(artifactLocation, artifactPayload, pollingInterval, pollingHalted, firstArtifact) {
  let artifact = firstArtifact;
  let artifactRetrievalCount = 1;
  let artifactLastRetrieved = new Date();

  function provideNewArtifact(value) {
    artifactLastRetrieved = new Date();
    artifactRetrievalCount += 1;
    artifact = value;
  }

  const meta = isDefined(artifact) ? artifact.meta : {};

  function toJSON() {
    return _objectSpread2({
      artifactLocation: isObject$1(artifactPayload) ? Messages.NOT_APPLICABLE : artifactLocation,
      pollingInterval,
      pollingHalted,
      artifactVersion: isDefined(artifact) ? artifact.version : Messages.UNKNOWN,
      artifactRetrievalCount,
      artifactLastRetrieved: artifactLastRetrieved.toISOString()
    }, meta);
  }

  return {
    provideNewArtifact,
    toJSON
  };
}

/* eslint-disable import/prefer-default-export */
const RequestType = {
  MBOX: "mbox",
  VIEW: "view",
  PAGELOAD: "pageLoad"
};
const OptionType = {
  Html: "html",
  Json: "json",
  Redirect: "redirect",
  Dynamic: "dynamic",
  Actions: "actions"
};

// makes subclassing work correct for wrapped built-ins
var inheritIfRequired = function ($this, dummy, Wrapper) {
  var NewTarget, NewTargetPrototype;
  if (
    // it can work only with native `setPrototypeOf`
    objectSetPrototypeOf$2 &&
    // we haven't completely correct pre-ES6 way for getting `new.target`, so use this
    isCallable$2(NewTarget = dummy.constructor) &&
    NewTarget !== Wrapper &&
    isObject$3(NewTargetPrototype = NewTarget.prototype) &&
    NewTargetPrototype !== Wrapper.prototype
  ) objectSetPrototypeOf$2($this, NewTargetPrototype);
  return $this;
};

var MATCH = wellKnownSymbol$2('match');

// `IsRegExp` abstract operation
// https://tc39.es/ecma262/#sec-isregexp
var isRegexp = function (it) {
  var isRegExp;
  return isObject$3(it) && ((isRegExp = it[MATCH]) !== undefined ? !!isRegExp : classofRaw$2(it) == 'RegExp');
};

var RegExpPrototype$1 = RegExp.prototype;

var regexpGetFlags = function (R) {
  var flags = R.flags;
  return flags === undefined && !('flags' in RegExpPrototype$1) && !hasOwnProperty_1$2(R, 'flags') && objectIsPrototypeOf$2(RegExpPrototype$1, R)
    ? functionCall$2(regexpFlags$1, R) : flags;
};

var defineProperty$e = objectDefineProperty$2.f;

var proxyAccessor = function (Target, Source, key) {
  key in Target || defineProperty$e(Target, key, {
    configurable: true,
    get: function () { return Source[key]; },
    set: function (it) { Source[key] = it; }
  });
};

var getOwnPropertyNames = objectGetOwnPropertyNames$2.f;









var enforceInternalState$1 = internalState$2.enforce;





var MATCH$1 = wellKnownSymbol$2('match');
var NativeRegExp = global_1$2.RegExp;
var RegExpPrototype$2 = NativeRegExp.prototype;
var SyntaxError = global_1$2.SyntaxError;
var exec$5 = functionUncurryThis$2(RegExpPrototype$2.exec);
var charAt$9 = functionUncurryThis$2(''.charAt);
var replace$8 = functionUncurryThis$2(''.replace);
var stringIndexOf$1 = functionUncurryThis$2(''.indexOf);
var stringSlice$b = functionUncurryThis$2(''.slice);
// TODO: Use only proper RegExpIdentifierName
var IS_NCG = /^\?<[^\s\d!#%&*+<=>@^][^\s!#%&*+<=>@^]*>/;
var re1 = /a/g;
var re2 = /a/g;

// "new" should create a new object, old webkit bug
var CORRECT_NEW = new NativeRegExp(re1) !== re1;

var MISSED_STICKY$2 = regexpStickyHelpers$1.MISSED_STICKY;
var UNSUPPORTED_Y$4 = regexpStickyHelpers$1.UNSUPPORTED_Y;

var BASE_FORCED = descriptors$2 &&
  (!CORRECT_NEW || MISSED_STICKY$2 || regexpUnsupportedDotAll$1 || regexpUnsupportedNcg$1 || fails$2(function () {
    re2[MATCH$1] = false;
    // RegExp constructor can alter flags and IsRegExp works correct with @@match
    return NativeRegExp(re1) != re1 || NativeRegExp(re2) == re2 || NativeRegExp(re1, 'i') != '/a/i';
  }));

var handleDotAll = function (string) {
  var length = string.length;
  var index = 0;
  var result = '';
  var brackets = false;
  var chr;
  for (; index <= length; index++) {
    chr = charAt$9(string, index);
    if (chr === '\\') {
      result += chr + charAt$9(string, ++index);
      continue;
    }
    if (!brackets && chr === '.') {
      result += '[\\s\\S]';
    } else {
      if (chr === '[') {
        brackets = true;
      } else if (chr === ']') {
        brackets = false;
      } result += chr;
    }
  } return result;
};

var handleNCG = function (string) {
  var length = string.length;
  var index = 0;
  var result = '';
  var named = [];
  var names = {};
  var brackets = false;
  var ncg = false;
  var groupid = 0;
  var groupname = '';
  var chr;
  for (; index <= length; index++) {
    chr = charAt$9(string, index);
    if (chr === '\\') {
      chr = chr + charAt$9(string, ++index);
    } else if (chr === ']') {
      brackets = false;
    } else if (!brackets) switch (true) {
      case chr === '[':
        brackets = true;
        break;
      case chr === '(':
        if (exec$5(IS_NCG, stringSlice$b(string, index + 1))) {
          index += 2;
          ncg = true;
        }
        result += chr;
        groupid++;
        continue;
      case chr === '>' && ncg:
        if (groupname === '' || hasOwnProperty_1$2(names, groupname)) {
          throw new SyntaxError('Invalid capture group name');
        }
        names[groupname] = true;
        named[named.length] = [groupname, groupid];
        ncg = false;
        groupname = '';
        continue;
    }
    if (ncg) groupname += chr;
    else result += chr;
  } return [result, named];
};

// `RegExp` constructor
// https://tc39.es/ecma262/#sec-regexp-constructor
if (isForced_1$2('RegExp', BASE_FORCED)) {
  var RegExpWrapper = function RegExp(pattern, flags) {
    var thisIsRegExp = objectIsPrototypeOf$2(RegExpPrototype$2, this);
    var patternIsRegExp = isRegexp(pattern);
    var flagsAreUndefined = flags === undefined;
    var groups = [];
    var rawPattern = pattern;
    var rawFlags, dotAll, sticky, handled, result, state;

    if (!thisIsRegExp && patternIsRegExp && flagsAreUndefined && pattern.constructor === RegExpWrapper) {
      return pattern;
    }

    if (patternIsRegExp || objectIsPrototypeOf$2(RegExpPrototype$2, pattern)) {
      pattern = pattern.source;
      if (flagsAreUndefined) flags = regexpGetFlags(rawPattern);
    }

    pattern = pattern === undefined ? '' : toString_1$2(pattern);
    flags = flags === undefined ? '' : toString_1$2(flags);
    rawPattern = pattern;

    if (regexpUnsupportedDotAll$1 && 'dotAll' in re1) {
      dotAll = !!flags && stringIndexOf$1(flags, 's') > -1;
      if (dotAll) flags = replace$8(flags, /s/g, '');
    }

    rawFlags = flags;

    if (MISSED_STICKY$2 && 'sticky' in re1) {
      sticky = !!flags && stringIndexOf$1(flags, 'y') > -1;
      if (sticky && UNSUPPORTED_Y$4) flags = replace$8(flags, /y/g, '');
    }

    if (regexpUnsupportedNcg$1) {
      handled = handleNCG(pattern);
      pattern = handled[0];
      groups = handled[1];
    }

    result = inheritIfRequired(NativeRegExp(pattern, flags), thisIsRegExp ? this : RegExpPrototype$2, RegExpWrapper);

    if (dotAll || sticky || groups.length) {
      state = enforceInternalState$1(result);
      if (dotAll) {
        state.dotAll = true;
        state.raw = RegExpWrapper(handleDotAll(pattern), rawFlags);
      }
      if (sticky) state.sticky = true;
      if (groups.length) state.groups = groups;
    }

    if (pattern !== rawPattern) try {
      // fails in old engines, but we have no alternatives for unsupported regex syntax
      createNonEnumerableProperty$2(result, 'source', rawPattern === '' ? '(?:)' : rawPattern);
    } catch (error) { /* empty */ }

    return result;
  };

  for (var keys$4 = getOwnPropertyNames(NativeRegExp), index = 0; keys$4.length > index;) {
    proxyAccessor(RegExpWrapper, NativeRegExp, keys$4[index++]);
  }

  RegExpPrototype$2.constructor = RegExpWrapper;
  RegExpWrapper.prototype = RegExpPrototype$2;
  defineBuiltIn$2(global_1$2, 'RegExp', RegExpWrapper, { constructor: true });
}

// https://tc39.es/ecma262/#sec-get-regexp-@@species
setSpecies$2('RegExp');

// TODO: Remove from `core-js@4` since it's moved to entry points








var SPECIES$a = wellKnownSymbol$2('species');
var RegExpPrototype$3 = RegExp.prototype;

var fixRegexpWellKnownSymbolLogic$1 = function (KEY, exec, FORCED, SHAM) {
  var SYMBOL = wellKnownSymbol$2(KEY);

  var DELEGATES_TO_SYMBOL = !fails$2(function () {
    // String methods call symbol-named RegEp methods
    var O = {};
    O[SYMBOL] = function () { return 7; };
    return ''[KEY](O) != 7;
  });

  var DELEGATES_TO_EXEC = DELEGATES_TO_SYMBOL && !fails$2(function () {
    // Symbol-named RegExp methods call .exec
    var execCalled = false;
    var re = /a/;

    if (KEY === 'split') {
      // We can't use real regex here since it causes deoptimization
      // and serious performance degradation in V8
      // https://github.com/zloirock/core-js/issues/306
      re = {};
      // RegExp[@@split] doesn't call the regex's exec method, but first creates
      // a new one. We need to return the patched regex when creating the new one.
      re.constructor = {};
      re.constructor[SPECIES$a] = function () { return re; };
      re.flags = '';
      re[SYMBOL] = /./[SYMBOL];
    }

    re.exec = function () { execCalled = true; return null; };

    re[SYMBOL]('');
    return !execCalled;
  });

  if (
    !DELEGATES_TO_SYMBOL ||
    !DELEGATES_TO_EXEC ||
    FORCED
  ) {
    var uncurriedNativeRegExpMethod = functionUncurryThis$2(/./[SYMBOL]);
    var methods = exec(SYMBOL, ''[KEY], function (nativeMethod, regexp, str, arg2, forceStringMethod) {
      var uncurriedNativeMethod = functionUncurryThis$2(nativeMethod);
      var $exec = regexp.exec;
      if ($exec === regexpExec$1 || $exec === RegExpPrototype$3.exec) {
        if (DELEGATES_TO_SYMBOL && !forceStringMethod) {
          // The native String method already delegates to @@method (this
          // polyfilled function), leasing to infinite recursion.
          // We avoid it by directly calling the native @@method method.
          return { done: true, value: uncurriedNativeRegExpMethod(regexp, str, arg2) };
        }
        return { done: true, value: uncurriedNativeMethod(str, regexp, arg2) };
      }
      return { done: false };
    });

    defineBuiltIn$2(String.prototype, KEY, methods[0]);
    defineBuiltIn$2(RegExpPrototype$3, SYMBOL, methods[1]);
  }

  if (SHAM) createNonEnumerableProperty$2(RegExpPrototype$3[SYMBOL], 'sham', true);
};

var charAt$a = functionUncurryThis$2(''.charAt);
var charCodeAt$2 = functionUncurryThis$2(''.charCodeAt);
var stringSlice$c = functionUncurryThis$2(''.slice);

var createMethod$5 = function (CONVERT_TO_STRING) {
  return function ($this, pos) {
    var S = toString_1$2(requireObjectCoercible$2($this));
    var position = toIntegerOrInfinity$2(pos);
    var size = S.length;
    var first, second;
    if (position < 0 || position >= size) return CONVERT_TO_STRING ? '' : undefined;
    first = charCodeAt$2(S, position);
    return first < 0xD800 || first > 0xDBFF || position + 1 === size
      || (second = charCodeAt$2(S, position + 1)) < 0xDC00 || second > 0xDFFF
        ? CONVERT_TO_STRING
          ? charAt$a(S, position)
          : first
        : CONVERT_TO_STRING
          ? stringSlice$c(S, position, position + 2)
          : (first - 0xD800 << 10) + (second - 0xDC00) + 0x10000;
  };
};

var stringMultibyte$1 = {
  // `String.prototype.codePointAt` method
  // https://tc39.es/ecma262/#sec-string.prototype.codepointat
  codeAt: createMethod$5(false),
  // `String.prototype.at` method
  // https://github.com/mathiasbynens/String.prototype.at
  charAt: createMethod$5(true)
};

var charAt$b = stringMultibyte$1.charAt;

// `AdvanceStringIndex` abstract operation
// https://tc39.es/ecma262/#sec-advancestringindex
var advanceStringIndex$1 = function (S, index, unicode) {
  return index + (unicode ? charAt$b(S, index).length : 1);
};

var floor$9 = Math.floor;
var charAt$c = functionUncurryThis$2(''.charAt);
var replace$9 = functionUncurryThis$2(''.replace);
var stringSlice$d = functionUncurryThis$2(''.slice);
var SUBSTITUTION_SYMBOLS$1 = /\$([$&'`]|\d{1,2}|<[^>]*>)/g;
var SUBSTITUTION_SYMBOLS_NO_NAMED$1 = /\$([$&'`]|\d{1,2})/g;

// `GetSubstitution` abstract operation
// https://tc39.es/ecma262/#sec-getsubstitution
var getSubstitution$1 = function (matched, str, position, captures, namedCaptures, replacement) {
  var tailPos = position + matched.length;
  var m = captures.length;
  var symbols = SUBSTITUTION_SYMBOLS_NO_NAMED$1;
  if (namedCaptures !== undefined) {
    namedCaptures = toObject$3(namedCaptures);
    symbols = SUBSTITUTION_SYMBOLS$1;
  }
  return replace$9(replacement, symbols, function (match, ch) {
    var capture;
    switch (charAt$c(ch, 0)) {
      case '$': return '$';
      case '&': return matched;
      case '`': return stringSlice$d(str, 0, position);
      case "'": return stringSlice$d(str, tailPos);
      case '<':
        capture = namedCaptures[stringSlice$d(ch, 1, -1)];
        break;
      default: // \d\d?
        var n = +ch;
        if (n === 0) return match;
        if (n > m) {
          var f = floor$9(n / 10);
          if (f === 0) return match;
          if (f <= m) return captures[f - 1] === undefined ? charAt$c(ch, 1) : captures[f - 1] + charAt$c(ch, 1);
          return match;
        }
        capture = captures[n - 1];
    }
    return capture === undefined ? '' : capture;
  });
};

var $TypeError$F = TypeError;

// `RegExpExec` abstract operation
// https://tc39.es/ecma262/#sec-regexpexec
var regexpExecAbstract$1 = function (R, S) {
  var exec = R.exec;
  if (isCallable$2(exec)) {
    var result = functionCall$2(exec, R, S);
    if (result !== null) anObject$2(result);
    return result;
  }
  if (classofRaw$2(R) === 'RegExp') return functionCall$2(regexpExec$1, R, S);
  throw $TypeError$F('RegExp#exec called on incompatible receiver');
};

var REPLACE$1 = wellKnownSymbol$2('replace');
var max$7 = Math.max;
var min$7 = Math.min;
var concat$5 = functionUncurryThis$2([].concat);
var push$9 = functionUncurryThis$2([].push);
var stringIndexOf$2 = functionUncurryThis$2(''.indexOf);
var stringSlice$e = functionUncurryThis$2(''.slice);

var maybeToString$1 = function (it) {
  return it === undefined ? it : String(it);
};

// IE <= 11 replaces $0 with the whole match, as if it was $&
// https://stackoverflow.com/questions/6024666/getting-ie-to-replace-a-regex-with-the-literal-string-0
var REPLACE_KEEPS_$0$1 = (function () {
  // eslint-disable-next-line regexp/prefer-escape-replacement-dollar-char -- required for testing
  return 'a'.replace(/./, '$0') === '$0';
})();

// Safari <= 13.0.3(?) substitutes nth capture where n>m with an empty string
var REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE$1 = (function () {
  if (/./[REPLACE$1]) {
    return /./[REPLACE$1]('a', '$0') === '';
  }
  return false;
})();

var REPLACE_SUPPORTS_NAMED_GROUPS$1 = !fails$2(function () {
  var re = /./;
  re.exec = function () {
    var result = [];
    result.groups = { a: '7' };
    return result;
  };
  // eslint-disable-next-line regexp/no-useless-dollar-replacements -- false positive
  return ''.replace(re, '$<a>') !== '7';
});

// @@replace logic
fixRegexpWellKnownSymbolLogic$1('replace', function (_, nativeReplace, maybeCallNative) {
  var UNSAFE_SUBSTITUTE = REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE$1 ? '$' : '$0';

  return [
    // `String.prototype.replace` method
    // https://tc39.es/ecma262/#sec-string.prototype.replace
    function replace(searchValue, replaceValue) {
      var O = requireObjectCoercible$2(this);
      var replacer = isNullOrUndefined$2(searchValue) ? undefined : getMethod$2(searchValue, REPLACE$1);
      return replacer
        ? functionCall$2(replacer, searchValue, O, replaceValue)
        : functionCall$2(nativeReplace, toString_1$2(O), searchValue, replaceValue);
    },
    // `RegExp.prototype[@@replace]` method
    // https://tc39.es/ecma262/#sec-regexp.prototype-@@replace
    function (string, replaceValue) {
      var rx = anObject$2(this);
      var S = toString_1$2(string);

      if (
        typeof replaceValue == 'string' &&
        stringIndexOf$2(replaceValue, UNSAFE_SUBSTITUTE) === -1 &&
        stringIndexOf$2(replaceValue, '$<') === -1
      ) {
        var res = maybeCallNative(nativeReplace, rx, S, replaceValue);
        if (res.done) return res.value;
      }

      var functionalReplace = isCallable$2(replaceValue);
      if (!functionalReplace) replaceValue = toString_1$2(replaceValue);

      var global = rx.global;
      if (global) {
        var fullUnicode = rx.unicode;
        rx.lastIndex = 0;
      }
      var results = [];
      while (true) {
        var result = regexpExecAbstract$1(rx, S);
        if (result === null) break;

        push$9(results, result);
        if (!global) break;

        var matchStr = toString_1$2(result[0]);
        if (matchStr === '') rx.lastIndex = advanceStringIndex$1(S, toLength$2(rx.lastIndex), fullUnicode);
      }

      var accumulatedResult = '';
      var nextSourcePosition = 0;
      for (var i = 0; i < results.length; i++) {
        result = results[i];

        var matched = toString_1$2(result[0]);
        var position = max$7(min$7(toIntegerOrInfinity$2(result.index), S.length), 0);
        var captures = [];
        // NOTE: This is equivalent to
        //   captures = result.slice(1).map(maybeToString)
        // but for some reason `nativeSlice.call(result, 1, result.length)` (called in
        // the slice polyfill when slicing native arrays) "doesn't work" in safari 9 and
        // causes a crash (https://pastebin.com/N21QzeQA) when trying to debug it.
        for (var j = 1; j < result.length; j++) push$9(captures, maybeToString$1(result[j]));
        var namedCaptures = result.groups;
        if (functionalReplace) {
          var replacerArgs = concat$5([matched], captures, position, S);
          if (namedCaptures !== undefined) push$9(replacerArgs, namedCaptures);
          var replacement = toString_1$2(functionApply$2(replaceValue, undefined, replacerArgs));
        } else {
          replacement = getSubstitution$1(matched, S, position, captures, namedCaptures, replaceValue);
        }
        if (position >= nextSourcePosition) {
          accumulatedResult += stringSlice$e(S, nextSourcePosition, position) + replacement;
          nextSourcePosition = position + matched.length;
        }
      }
      return accumulatedResult + stringSlice$e(S, nextSourcePosition);
    }
  ];
}, !REPLACE_SUPPORTS_NAMED_GROUPS$1 || !REPLACE_KEEPS_$0$1 || REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE$1);

const MACRO_PATTERN_REGEX = /\$\{([a-zA-Z0-9_.]*?)\}/gi;
const MACRO_NAME_REPLACEMENTS = {
  campaign: "activity",
  recipe: "experience"
};
const MACRO_NAME_REPLACEMENTS_REGEX = new RegExp(Object.keys(MACRO_NAME_REPLACEMENTS).join("|"), "gi");
const MACRO_NAME_REMOVALS = ["mbox"];

function noBlankOptions(option) {
  return !(isUndefined(option.type) && isUndefined(option.content));
}
/**
 * @param {import("../types/DecisioningArtifact").Rule} rule
 * @param {import("@adobe/target-tools/delivery-api-client/models/MboxResponse").MboxResponse} mboxResponse
 * @param { 'mbox'|'view'|'pageLoad' } requestType
 * @param {import("@adobe/target-tools/delivery-api-client/models/MboxRequest").MboxRequest|import("@adobe/target-tools/delivery-api-client/models/RequestDetails").RequestDetails} requestDetail
 * @param tracer
 */


function prepareExecuteResponse(rule, mboxResponse, requestType, requestDetail, tracer) {
  const {
    metrics = [],
    options = []
  } = mboxResponse;

  const result = _objectSpread2(_objectSpread2({}, mboxResponse), {}, {
    options: options.filter(noBlankOptions).map(pristineOption => {
      const option = _objectSpread2({}, pristineOption);

      delete option.eventToken;
      return option;
    }),
    metrics: metrics.filter(metric => metric.type === MetricType.Click)
  });

  if (result.metrics.length === 0) {
    delete result.metrics;
  }

  return result;
}
/**
 * @param {import("../types/DecisioningArtifact").Rule} rule
 * @param {import("@adobe/target-tools/delivery-api-client/models/MboxResponse").MboxResponse} mboxResponse
 * @param { 'mbox'|'view'|'pageLoad' } requestType
 * @param {import("@adobe/target-tools/delivery-api-client/models/MboxRequest").MboxRequest|import("@adobe/target-tools/delivery-api-client/models/RequestDetails").RequestDetails} requestDetail
 * @param tracer
 */

function preparePrefetchResponse(rule, mboxResponse, requestType, requestDetail, tracer) {
  const {
    options = []
  } = mboxResponse;

  const result = _objectSpread2(_objectSpread2({}, mboxResponse), {}, {
    options: options.map((pristineOption, idx) => {
      let {
        eventToken
      } = pristineOption;

      if (isUndefined(eventToken) && mboxResponse.metrics.length > idx && mboxResponse.metrics[idx].type === MetricType.Display) {
        // eslint-disable-next-line prefer-destructuring
        eventToken = mboxResponse.metrics[idx].eventToken;
      }

      return _objectSpread2(_objectSpread2({}, pristineOption), {}, {
        eventToken
      });
    })
  });

  if (requestType !== RequestType.VIEW) {
    delete result.metrics;
  }

  return result;
}
/**
 * @param {import("../types/DecisioningArtifact").Rule} rule
 * @param {import("@adobe/target-tools/delivery-api-client/models/MboxResponse").MboxResponse} mboxResponse
 * @param { 'mbox'|'view'|'pageLoad' } requestType
 * @param {import("@adobe/target-tools/delivery-api-client/models/MboxRequest").MboxRequest|import("@adobe/target-tools/delivery-api-client/models/RequestDetails").RequestDetails} requestDetail
 * @param tracer
 */

function addTrace(rule, mboxResponse, requestType, requestDetail, tracer) {
  return _objectSpread2(_objectSpread2({}, mboxResponse), {}, {
    trace: tracer.getTraceResult()
  });
}
/**
 * @param {import("../types/DecisioningArtifact").Rule} rule
 * @param {import("@adobe/target-tools/delivery-api-client/models/MboxResponse").MboxResponse} mboxResponse
 * @param { 'mbox'|'view'|'pageLoad' } requestType
 * @param {import("@adobe/target-tools/delivery-api-client/models/MboxRequest").MboxRequest|import("@adobe/target-tools/delivery-api-client/models/RequestDetails").RequestDetails} requestDetail
 * @param tracer
 */

function cleanUp(rule, mboxResponse, requestType, requestDetail, tracer) {
  const result = objectWithoutUndefinedValues(mboxResponse);
  return result;
}
/**
 * @param {import("../types/DecisioningArtifact").Rule} rule
 * @param {import("@adobe/target-tools/delivery-api-client/models/MboxResponse").MboxResponse} mboxResponse
 * @param { 'mbox'|'view'|'pageLoad' } requestType
 * @param {import("@adobe/target-tools/delivery-api-client/models/MboxRequest").MboxRequest|import("@adobe/target-tools/delivery-api-client/models/RequestDetails").RequestDetails} requestDetail
 * @param tracer
 */

function removePageLoadAttributes(rule, mboxResponse, requestType, requestDetail, tracer) {
  const processed = _objectSpread2({}, mboxResponse);

  delete processed.index;
  delete processed.name;
  delete processed.trace;
  return processed;
}
/**
 * @param {import("../types/DecisioningContext").DecisioningContext} context
 * @param {Array<string>} responseTokensInArtifact
 */

function createResponseTokensPostProcessor(context, responseTokensInArtifact = []) {
  const responseTokens = {};
  responseTokens[ACTIVITY_DECISIONING_METHOD] = "on-device";

  if (includes(GEO_CITY, responseTokensInArtifact) && isDefined(context.geo.city)) {
    responseTokens[GEO_CITY] = context.geo.city;
  }

  if (includes(GEO_COUNTRY, responseTokensInArtifact) && isDefined(context.geo.country)) {
    responseTokens[GEO_COUNTRY] = context.geo.country;
  }

  if (includes(GEO_STATE, responseTokensInArtifact) && isDefined(context.geo.region)) {
    responseTokens[GEO_STATE] = context.geo.region;
  }

  if (includes(GEO_LATITUDE, responseTokensInArtifact) && isDefined(context.geo.latitude)) {
    responseTokens[GEO_LATITUDE] = context.geo.latitude;
  }

  if (includes(GEO_LONGITUDE, responseTokensInArtifact) && isDefined(context.geo.longitude)) {
    responseTokens[GEO_LONGITUDE] = context.geo.longitude;
  }
  /**
   * @param {import("../types/DecisioningArtifact").Rule} rule
   * @param {import("@adobe/target-tools/delivery-api-client/models/MboxResponse").MboxResponse} mboxResponse
   */


  return function addResponseTokens(rule, mboxResponse) {
    const meta = rule.meta || {};
    const responseTokensFromMeta = [ACTIVITY_ID, ACTIVITY_NAME, ACTIVITY_TYPE, EXPERIENCE_ID, EXPERIENCE_NAME, LOCATION_ID, LOCATION_NAME, LOCATION_TYPE, OFFER_ID, OFFER_NAME, OPTION_ID, OPTION_NAME].reduce((accumulator, key) => {
      if (includes(key, responseTokensInArtifact) && isDefined(meta[key])) {
        accumulator[key] = meta[key];
      }

      return accumulator;
    }, {});
    const options = mboxResponse.options.map(option => _objectSpread2(_objectSpread2({}, option), {}, {
      responseTokens: _objectSpread2(_objectSpread2({}, responseTokensFromMeta), responseTokens)
    }));
    return _objectSpread2(_objectSpread2({}, mboxResponse), {}, {
      options
    });
  };
}
/**
 * @param {import("../types/DecisioningArtifact").Rule} rule
 * @param {import("@adobe/target-tools/delivery-api-client/models/MboxResponse").MboxResponse} mboxResponse
 * @param { 'mbox'|'view'|'pageLoad' } requestType
 * @param {import("@adobe/target-tools/delivery-api-client/models/MboxRequest").MboxRequest|import("@adobe/target-tools/delivery-api-client/models/RequestDetails").RequestDetails} requestDetail
 * @param tracer
 */

function replaceCampaignMacros(rule, mboxResponse, requestType, requestDetail, tracer) {
  function addCampainMacroValues(htmlContent) {
    if (isUndefined(htmlContent) || !isString(htmlContent)) {
      return htmlContent;
    }

    return htmlContent.replace(MACRO_PATTERN_REGEX, (defaultValue, macroKey) => {
      let parts = macroKey.replace(MACRO_NAME_REPLACEMENTS_REGEX, matched => MACRO_NAME_REPLACEMENTS[matched]).split(".");

      if (parts.length > 2) {
        parts = parts.slice(parts.length - 2);
      }

      const key = parts.filter(part => !includes(part, MACRO_NAME_REMOVALS)).join(".");
      const {
        parameters = {}
      } = requestDetail;
      return firstMatch(key, [rule.meta, requestDetail, parameters], defaultValue);
    });
  }

  return _objectSpread2(_objectSpread2({}, mboxResponse), {}, {
    options: mboxResponse.options.map(
    /**
     * @param {import("@adobe/target-tools/delivery-api-client/models/Option").Option} option
     */
    option => {
      if (option.type === OptionType.Html) {
        return _objectSpread2(_objectSpread2({}, option), {}, {
          content: addCampainMacroValues(option.content)
        });
      }

      if (option.type === OptionType.Actions) {
        return _objectSpread2(_objectSpread2({}, option), {}, {
          content: option.content.map(action => _objectSpread2(_objectSpread2({}, action), {}, {
            content: addCampainMacroValues(action.content)
          }))
        });
      }

      return option;
    })
  });
}

var logic = createCommonjsModule(function (module, exports) {

  (function (root, factory) {
    {
      module.exports = factory();
    }
  })(commonjsGlobal, function () {
    /* globals console:false */

    if (!Array.isArray) {
      Array.isArray = function (arg) {
        return Object.prototype.toString.call(arg) === "[object Array]";
      };
    }
    /**
     * Return an array that contains no duplicates (original not modified)
     * @param  {array} array   Original reference array
     * @return {array}         New array with no duplicates
     */


    function arrayUnique(array) {
      var a = [];

      for (var i = 0, l = array.length; i < l; i++) {
        if (a.indexOf(array[i]) === -1) {
          a.push(array[i]);
        }
      }

      return a;
    }

    var jsonLogic = {};
    var operations = {
      "==": function (a, b) {
        return a == b;
      },
      "===": function (a, b) {
        return a === b;
      },
      "!=": function (a, b) {
        return a != b;
      },
      "!==": function (a, b) {
        return a !== b;
      },
      ">": function (a, b) {
        return a > b;
      },
      ">=": function (a, b) {
        return a >= b;
      },
      "<": function (a, b, c) {
        return c === undefined ? a < b : a < b && b < c;
      },
      "<=": function (a, b, c) {
        return c === undefined ? a <= b : a <= b && b <= c;
      },
      "!!": function (a) {
        return jsonLogic.truthy(a);
      },
      "!": function (a) {
        return !jsonLogic.truthy(a);
      },
      "%": function (a, b) {
        return a % b;
      },
      "log": function (a) {
        console.log(a);
        return a;
      },
      "in": function (a, b) {
        if (!b || typeof b.indexOf === "undefined") return false;
        return b.indexOf(a) !== -1;
      },
      "cat": function () {
        return Array.prototype.join.call(arguments, "");
      },
      "substr": function (source, start, end) {
        if (end < 0) {
          // JavaScript doesn't support negative end, this emulates PHP behavior
          var temp = String(source).substr(start);
          return temp.substr(0, temp.length + end);
        }

        return String(source).substr(start, end);
      },
      "+": function () {
        return Array.prototype.reduce.call(arguments, function (a, b) {
          return parseFloat(a, 10) + parseFloat(b, 10);
        }, 0);
      },
      "*": function () {
        return Array.prototype.reduce.call(arguments, function (a, b) {
          return parseFloat(a, 10) * parseFloat(b, 10);
        });
      },
      "-": function (a, b) {
        if (b === undefined) {
          return -a;
        } else {
          return a - b;
        }
      },
      "/": function (a, b) {
        return a / b;
      },
      "min": function () {
        return Math.min.apply(this, arguments);
      },
      "max": function () {
        return Math.max.apply(this, arguments);
      },
      "merge": function () {
        return Array.prototype.reduce.call(arguments, function (a, b) {
          return a.concat(b);
        }, []);
      },
      "var": function (a, b) {
        var not_found = b === undefined ? null : b;
        var data = this;

        if (typeof a === "undefined" || a === "" || a === null) {
          return data;
        }

        var sub_props = String(a).split(".");

        for (var i = 0; i < sub_props.length; i++) {
          if (data === null || data === undefined) {
            return not_found;
          } // Descending into data


          data = data[sub_props[i]];

          if (data === undefined) {
            return not_found;
          }
        }

        return data;
      },
      "missing": function () {
        /*
        Missing can receive many keys as many arguments, like {"missing:[1,2]}
        Missing can also receive *one* argument that is an array of keys,
        which typically happens if it's actually acting on the output of another command
        (like 'if' or 'merge')
        */
        var missing = [];
        var keys = Array.isArray(arguments[0]) ? arguments[0] : arguments;

        for (var i = 0; i < keys.length; i++) {
          var key = keys[i];
          var value = jsonLogic.apply({
            "var": key
          }, this);

          if (value === null || value === "") {
            missing.push(key);
          }
        }

        return missing;
      },
      "missing_some": function (need_count, options) {
        // missing_some takes two arguments, how many (minimum) items must be present, and an array of keys (just like 'missing') to check for presence.
        var are_missing = jsonLogic.apply({
          "missing": options
        }, this);

        if (options.length - are_missing.length >= need_count) {
          return [];
        } else {
          return are_missing;
        }
      }
    };

    jsonLogic.is_logic = function (logic) {
      return typeof logic === "object" && // An object
      logic !== null && // but not null
      !Array.isArray(logic) && // and not an array
      Object.keys(logic).length === 1 // with exactly one key
      ;
    };
    /*
    This helper will defer to the JsonLogic spec as a tie-breaker when different language interpreters define different behavior for the truthiness of primitives.  E.g., PHP considers empty arrays to be falsy, but Javascript considers them to be truthy. JsonLogic, as an ecosystem, needs one consistent answer.
     Spec and rationale here: http://jsonlogic.com/truthy
    */


    jsonLogic.truthy = function (value) {
      if (Array.isArray(value) && value.length === 0) {
        return false;
      }

      return !!value;
    };

    jsonLogic.get_operator = function (logic) {
      return Object.keys(logic)[0];
    };

    jsonLogic.get_values = function (logic) {
      return logic[jsonLogic.get_operator(logic)];
    };

    jsonLogic.apply = function (logic, data) {
      // Does this array contain logic? Only one way to find out.
      if (Array.isArray(logic)) {
        return logic.map(function (l) {
          return jsonLogic.apply(l, data);
        });
      } // You've recursed to a primitive, stop!


      if (!jsonLogic.is_logic(logic)) {
        return logic;
      }

      var op = jsonLogic.get_operator(logic);
      var values = logic[op];
      var i;
      var current;
      var scopedLogic;
      var scopedData;
      var initial; // easy syntax for unary operators, like {"var" : "x"} instead of strict {"var" : ["x"]}

      if (!Array.isArray(values)) {
        values = [values];
      } // 'if', 'and', and 'or' violate the normal rule of depth-first calculating consequents, let each manage recursion as needed.


      if (op === "if" || op == "?:") {
        /* 'if' should be called with a odd number of parameters, 3 or greater
        This works on the pattern:
        if( 0 ){ 1 }else{ 2 };
        if( 0 ){ 1 }else if( 2 ){ 3 }else{ 4 };
        if( 0 ){ 1 }else if( 2 ){ 3 }else if( 4 ){ 5 }else{ 6 };
         The implementation is:
        For pairs of values (0,1 then 2,3 then 4,5 etc)
        If the first evaluates truthy, evaluate and return the second
        If the first evaluates falsy, jump to the next pair (e.g, 0,1 to 2,3)
        given one parameter, evaluate and return it. (it's an Else and all the If/ElseIf were false)
        given 0 parameters, return NULL (not great practice, but there was no Else)
        */
        for (i = 0; i < values.length - 1; i += 2) {
          if (jsonLogic.truthy(jsonLogic.apply(values[i], data))) {
            return jsonLogic.apply(values[i + 1], data);
          }
        }

        if (values.length === i + 1) {
          return jsonLogic.apply(values[i], data);
        }

        return null;
      } else if (op === "and") {
        // Return first falsy, or last
        for (i = 0; i < values.length; i += 1) {
          current = jsonLogic.apply(values[i], data);

          if (!jsonLogic.truthy(current)) {
            return current;
          }
        }

        return current; // Last
      } else if (op === "or") {
        // Return first truthy, or last
        for (i = 0; i < values.length; i += 1) {
          current = jsonLogic.apply(values[i], data);

          if (jsonLogic.truthy(current)) {
            return current;
          }
        }

        return current; // Last
      } else if (op === "filter") {
        scopedData = jsonLogic.apply(values[0], data);
        scopedLogic = values[1];

        if (!Array.isArray(scopedData)) {
          return [];
        } // Return only the elements from the array in the first argument,
        // that return truthy when passed to the logic in the second argument.
        // For parity with JavaScript, reindex the returned array


        return scopedData.filter(function (datum) {
          return jsonLogic.truthy(jsonLogic.apply(scopedLogic, datum));
        });
      } else if (op === "map") {
        scopedData = jsonLogic.apply(values[0], data);
        scopedLogic = values[1];

        if (!Array.isArray(scopedData)) {
          return [];
        }

        return scopedData.map(function (datum) {
          return jsonLogic.apply(scopedLogic, datum);
        });
      } else if (op === "reduce") {
        scopedData = jsonLogic.apply(values[0], data);
        scopedLogic = values[1];
        initial = typeof values[2] !== "undefined" ? values[2] : null;

        if (!Array.isArray(scopedData)) {
          return initial;
        }

        return scopedData.reduce(function (accumulator, current) {
          return jsonLogic.apply(scopedLogic, {
            current: current,
            accumulator: accumulator
          });
        }, initial);
      } else if (op === "all") {
        scopedData = jsonLogic.apply(values[0], data);
        scopedLogic = values[1]; // All of an empty set is false. Note, some and none have correct fallback after the for loop

        if (!Array.isArray(scopedData) || !scopedData.length) {
          return false;
        }

        for (i = 0; i < scopedData.length; i += 1) {
          if (!jsonLogic.truthy(jsonLogic.apply(scopedLogic, scopedData[i]))) {
            return false; // First falsy, short circuit
          }
        }

        return true; // All were truthy
      } else if (op === "none") {
        scopedData = jsonLogic.apply(values[0], data);
        scopedLogic = values[1];

        if (!Array.isArray(scopedData) || !scopedData.length) {
          return true;
        }

        for (i = 0; i < scopedData.length; i += 1) {
          if (jsonLogic.truthy(jsonLogic.apply(scopedLogic, scopedData[i]))) {
            return false; // First truthy, short circuit
          }
        }

        return true; // None were truthy
      } else if (op === "some") {
        scopedData = jsonLogic.apply(values[0], data);
        scopedLogic = values[1];

        if (!Array.isArray(scopedData) || !scopedData.length) {
          return false;
        }

        for (i = 0; i < scopedData.length; i += 1) {
          if (jsonLogic.truthy(jsonLogic.apply(scopedLogic, scopedData[i]))) {
            return true; // First truthy, short circuit
          }
        }

        return false; // None were truthy
      } // Everyone else gets immediate depth-first recursion


      values = values.map(function (val) {
        return jsonLogic.apply(val, data);
      }); // The operation is called with "data" bound to its "this" and "values" passed as arguments.
      // Structured commands like % or > can name formal arguments while flexible commands (like missing or merge) can operate on the pseudo-array arguments
      // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/arguments

      if (operations.hasOwnProperty(op) && typeof operations[op] === "function") {
        return operations[op].apply(data, values);
      } else if (op.indexOf(".") > 0) {
        // Contains a dot, and not in the 0th position
        var sub_ops = String(op).split(".");
        var operation = operations;

        for (i = 0; i < sub_ops.length; i++) {
          if (!operation.hasOwnProperty(sub_ops[i])) {
            throw new Error("Unrecognized operation " + op + " (failed at " + sub_ops.slice(0, i + 1).join(".") + ")");
          } // Descending into operations


          operation = operation[sub_ops[i]];
        }

        return operation.apply(data, values);
      }

      throw new Error("Unrecognized operation " + op);
    };

    jsonLogic.uses_data = function (logic) {
      var collection = [];

      if (jsonLogic.is_logic(logic)) {
        var op = jsonLogic.get_operator(logic);
        var values = logic[op];

        if (!Array.isArray(values)) {
          values = [values];
        }

        if (op === "var") {
          // This doesn't cover the case where the arg to var is itself a rule.
          collection.push(values[0]);
        } else {
          // Recursion!
          values.forEach(function (val) {
            collection.push.apply(collection, jsonLogic.uses_data(val));
          });
        }
      }

      return arrayUnique(collection);
    };

    jsonLogic.add_operation = function (name, code) {
      operations[name] = code;
    };

    jsonLogic.rm_operation = function (name) {
      delete operations[name];
    };

    jsonLogic.rule_like = function (rule, pattern) {
      // console.log("Is ". JSON.stringify(rule) . " like " . JSON.stringify(pattern) . "?");
      if (pattern === rule) {
        return true;
      } // TODO : Deep object equivalency?


      if (pattern === "@") {
        return true;
      } // Wildcard!


      if (pattern === "number") {
        return typeof rule === "number";
      }

      if (pattern === "string") {
        return typeof rule === "string";
      }

      if (pattern === "array") {
        // !logic test might be superfluous in JavaScript
        return Array.isArray(rule) && !jsonLogic.is_logic(rule);
      }

      if (jsonLogic.is_logic(pattern)) {
        if (jsonLogic.is_logic(rule)) {
          var pattern_op = jsonLogic.get_operator(pattern);
          var rule_op = jsonLogic.get_operator(rule);

          if (pattern_op === "@" || pattern_op === rule_op) {
            // echo "\nOperators match, go deeper\n";
            return jsonLogic.rule_like(jsonLogic.get_values(rule, false), jsonLogic.get_values(pattern, false));
          }
        }

        return false; // pattern is logic, rule isn't, can't be eq
      }

      if (Array.isArray(pattern)) {
        if (Array.isArray(rule)) {
          if (pattern.length !== rule.length) {
            return false;
          }
          /*
            Note, array order MATTERS, because we're using this array test logic to consider arguments, where order can matter. (e.g., + is commutative, but '-' or 'if' or 'var' are NOT)
          */


          for (var i = 0; i < pattern.length; i += 1) {
            // If any fail, we fail
            if (!jsonLogic.rule_like(rule[i], pattern[i])) {
              return false;
            }
          }

          return true; // If they *all* passed, we pass
        } else {
          return false; // Pattern is array, rule isn't
        }
      } // Not logic, not array, not a === match for rule.


      return false;
    };

    return jsonLogic;
  });
});

const TOTAL_BUCKETS = 10000;
const MAX_PERCENTAGE = 100;
function validTntId(tntId = "") {
  if (isString(tntId) && !isEmpty(tntId)) {
    // eslint-disable-next-line no-unused-vars
    const [id, locationHint] = tntId.split(".");
    return id;
  }

  return undefined;
}
/**
 *
 * @param { import("@adobe/target-tools/delivery-api-client/models/VisitorId").VisitorId } visitorId
 * @returns {string} first non-blank marketingCloudVisitorId, tntId, thirdPartyId
 */

function getOrCreateVisitorId(visitorId) {
  if (visitorId) {
    return visitorId.marketingCloudVisitorId || validTntId(visitorId.tntId) || visitorId.thirdPartyId || uuid() // create a tntId
    ;
  }

  return uuid();
}
/**
 * @param deviceId
 * @returns {number}
 */

function calculateAllocation(deviceId) {
  const signedNumericHashValue = hashUnencodedChars(deviceId);
  const hashFixedBucket = Math.abs(signedNumericHashValue) % TOTAL_BUCKETS;
  const allocationValue = hashFixedBucket / TOTAL_BUCKETS * MAX_PERCENTAGE;
  return Math.round(allocationValue * 100) / 100; // two decimal places
}

const calculateAllocationMemoized = memoize(calculateAllocation);
/**
 *
 * @param {String} clientId Target Client Id, required
 * @param {number} activityId Target Activity Id, required
 * @param { import("@adobe/target-tools/delivery-api-client/models/VisitorId").VisitorId|String } visitorId
 * @param {String} salt salt value, optional
 */

function computeAllocation(clientId, activityId, visitorId, salt = CAMPAIGN_BUCKET_SALT) {
  // Generate a device id based on visitorId, clientCode, campaignId and a salt value
  const deviceId = [clientId, activityId, isString(visitorId) && !isEmpty(visitorId) ? visitorId : getOrCreateVisitorId(visitorId), salt].join(".");
  return calculateAllocationMemoized(deviceId);
}

/**
 *
 * @param { String } clientId
 * @param { import("@adobe/target-tools/delivery-api-client/models/VisitorId").VisitorId } visitorId
 * @param { import("../types/DecisioningContext").ParseDomainFunc} parseDomainImpl
 * @return { Function }
 */

function ruleEvaluator(clientId, visitorId, parseDomainImpl) {
  const visitorIdString = getOrCreateVisitorId(visitorId);
  /**
   * @param {import("../types/DecisioningArtifact").Rule} rule
   * @param { import("../types/DecisioningContext").DecisioningContext } context
   * @param { 'mbox'|'view'|'pageLoad' } requestType
   * @param {import("@adobe/target-tools/delivery-api-client/models/MboxRequest").MboxRequest|import("@adobe/target-tools/delivery-api-client/models/RequestDetails").RequestDetails} requestDetail
   * @param { Array<Function> } postProcessors
   * @param tracer
   */

  return function processRule(rule, context, requestType, requestDetail, postProcessors, tracer) {
    let consequence;
    let {
      page,
      referring
    } = context;

    if (isDefined(requestDetail.address)) {
      page = createPageContext(requestDetail.address, parseDomainImpl) || page;
      referring = createPageContext(requestDetail.address, parseDomainImpl) || referring;
    }

    const ruleContext = _objectSpread2(_objectSpread2({}, context), {}, {
      page,
      referring,
      mbox: createMboxContext(requestDetail),
      allocation: computeAllocation(clientId, rule.meta[ACTIVITY_ID], visitorIdString)
    });

    const ruleSatisfied = logic.apply(rule.condition, ruleContext);
    tracer.traceRuleEvaluated(rule, requestDetail, requestType, ruleContext, ruleSatisfied);

    if (ruleSatisfied) {
      consequence = _objectSpread2(_objectSpread2({}, rule.consequence), {}, {
        index: requestDetail.index
      });
      postProcessors.forEach(postProcessFunc => {
        consequence = postProcessFunc(rule, consequence, requestType, requestDetail, tracer);
      });
    }

    return cloneDeep(consequence); // we return a new object because at.js has a tendency to mutate response and we don't want it to mutate the rule consequence itself
  };
}

/* eslint-disable import/prefer-default-export */
/**
 *
 * @param {String} propertyToken
 * @return {function(import("../types/DecisioningArtifact").Rule): boolean}
 */

function byPropertyToken(propertyToken) {
  /**
   * @param {import("../types/DecisioningArtifact").Rule} rule
   * @return {boolean}
   */
  function filter(rule) {
    const {
      propertyTokens = []
    } = rule;
    return isUndefined(propertyToken) ? propertyTokens.length === 0 : propertyTokens.length === 0 || includes(propertyToken, propertyTokens);
  }

  return filter;
}

const LOG_TAG$1 = `${LOG_PREFIX}.DecisionProvider`;
const PARTIAL_CONTENT = 206;
const OK$1 = 200;
/**
 *
 * @param {import("../types/DecisioningConfig").DecisioningConfig} config
 * @param {import("../types/TargetDeliveryRequest").TargetDeliveryRequest} targetOptions
 * @param {import("../types/DecisioningContext").DecisioningContext} context
 * @param { import("../types/DecisioningArtifact").DecisioningArtifact } artifact
 * @param { Object } logger
 * @param traceProvider
 */

function DecisionProvider(config, targetOptions, context, artifact, logger, traceProvider) {
  const {
    eventEmitter = noop$2
  } = config;
  const {
    responseTokens,
    rules
  } = artifact;
  const globalMboxName = artifact.globalMbox || DEFAULT_GLOBAL_MBOX;
  const clientId = config.client;
  const {
    request,
    visitor
  } = targetOptions;
  const propertyToken = getPropertyToken(request.property);
  const {
    sendNotificationFunc,
    telemetryEnabled = true
  } = config;
  const visitorId = request.id;
  const processRule = ruleEvaluator(clientId, visitorId, getParseDomainImpl(config));
  const dependency = hasRemoteDependency(artifact, request);
  const notificationProvider = NotificationProvider(request, visitor, logger, sendNotificationFunc, telemetryEnabled, eventEmitter);
  /**
   *
   * @param { 'execute'|'prefetch' } mode
   * @param { Function[] } postProcessors Used to process an mbox if needed, optional
   */

  function getDecisions(mode, postProcessors) {
    if (isUndefined(request[mode])) {
      return undefined;
    }

    const requestTracer = RequestTracer(traceProvider, artifact);
    /**
     *
     * @param { import("@adobe/target-tools/delivery-api-client/models/RequestDetails").RequestDetails | import("@adobe/target-tools/delivery-api-client/models/MboxRequest").MboxRequest } requestDetails
     * @param {Array<Function>} additionalPostProcessors
     */

    function processViewRequest(requestDetails, additionalPostProcessors = []) {
      requestTracer.traceRequest(mode, RequestType.VIEW, requestDetails, context);
      const consequences = {};
      let viewRules = [];

      if (Object.prototype.hasOwnProperty.call(requestDetails, "name") && isDefined(requestDetails.name)) {
        viewRules = rules.views[requestDetails.name] || [];
      } else {
        viewRules = Object.keys(rules.views).reduce((result, key) => [...result, ...rules.views[key]], []);
      }

      viewRules = viewRules.filter(byPropertyToken(propertyToken));
      const matchedRuleKeys = new Set(); // eslint-disable-next-line no-restricted-syntax

      for (const rule of viewRules) {
        const ruleKey = getRuleKey(rule);
        let consequence;

        if (!matchedRuleKeys.has(ruleKey)) {
          consequence = processRule(rule, context, RequestType.VIEW, requestDetails, [...postProcessors, ...additionalPostProcessors], requestTracer);
        }

        if (consequence) {
          matchedRuleKeys.add(ruleKey);

          if (!consequences[consequence.name]) {
            consequences[consequence.name] = consequence;
          } else {
            consequences[consequence.name] = _objectSpread2(_objectSpread2({}, consequences[consequence.name]), {}, {
              options: [...consequences[consequence.name].options, ...consequence.options],
              metrics: [...consequences[consequence.name].metrics, ...consequence.metrics]
            });
          }
        }
      }

      return values$1(consequences);
    }
    /**
     * @param {import("@adobe/target-tools/delivery-api-client/models/MboxRequest").MboxRequest} mboxRequest
     * @param { Array<Function> } additionalPostProcessors
     */


    function processMboxRequest(mboxRequest, additionalPostProcessors = []) {
      const isGlobalMbox = mboxRequest.name === globalMboxName;
      requestTracer.traceRequest(mode, RequestType.MBOX, mboxRequest, context);
      const consequences = [];
      const mboxRules = (rules.mboxes[mboxRequest.name] || []).filter(byPropertyToken(propertyToken));
      const matchedRuleKeys = new Set(); // eslint-disable-next-line no-restricted-syntax

      for (const rule of mboxRules) {
        const ruleKey = getRuleKey(rule);
        let consequence;

        if (!isGlobalMbox || isGlobalMbox && !matchedRuleKeys.has(ruleKey)) {
          consequence = processRule(rule, context, RequestType.MBOX, mboxRequest, [...postProcessors, ...additionalPostProcessors], requestTracer);
        }

        if (consequence) {
          consequences.push(consequence);
          matchedRuleKeys.add(ruleKey);

          if (!isGlobalMbox) {
            break;
          }
        }
      } // add a blank if no consequences


      if (!isGlobalMbox && consequences.length === 0) {
        consequences.push({
          name: mboxRequest.name,
          index: mboxRequest.index,
          trace: requestTracer.getTraceResult()
        });
      }

      return consequences;
    }
    /**
     * @param {import("@adobe/target-tools/delivery-api-client/models/RequestDetails").RequestDetails} requestDetails
     */


    function processPageLoadRequest(requestDetails) {
      let trace;
      const consequences = processMboxRequest(_objectSpread2(_objectSpread2({}, requestDetails), {}, {
        name: globalMboxName
      }), [function preserveTrace(rule, mboxResponse) {
        // eslint-disable-next-line prefer-destructuring
        trace = mboxResponse.trace;
        return mboxResponse;
      }, removePageLoadAttributes]);
      const options = flatten(consequences.map(consequence => consequence.options));
      const result = {
        options,
        trace
      };
      const indexedMetrics = consequences.reduce((indexed, consequence) => {
        if (consequence.metrics instanceof Array) {
          consequence.metrics.forEach(metric => {
            // eslint-disable-next-line no-param-reassign
            indexed[metric.eventToken] = metric;
          });
        }

        return indexed;
      }, {});
      const metrics = values$1(indexedMetrics);

      if (metrics.length > 0) {
        result.metrics = metrics;
      }

      return result;
    }

    const response = {};

    if (request[mode].mboxes) {
      response.mboxes = flatten(request[mode].mboxes.map(mboxRequest => processMboxRequest(mboxRequest)));
    }

    if (request[mode].views) {
      response.views = flatten(request[mode].views.map(requestDetails => processViewRequest(requestDetails)));
    }

    if (request[mode].pageLoad) {
      response.pageLoad = processPageLoadRequest(request[mode].pageLoad);
    }

    return response;
  }

  function getExecuteDecisions(postProcessors) {
    return getDecisions("execute", [function prepareNotification(rule, mboxResponse, requestType, requestDetail, tracer) {
      notificationProvider.addNotification(mboxResponse, tracer.traceNotification(rule));
      return mboxResponse;
    }, prepareExecuteResponse, ...postProcessors]);
  }

  function getPrefetchDecisions(postProcessors) {
    return getDecisions("prefetch", [preparePrefetchResponse, ...postProcessors]);
  }

  const addResponseTokens = createResponseTokensPostProcessor(context, responseTokens);
  const commonPostProcessor = [addResponseTokens, replaceCampaignMacros, addTrace, cleanUp];
  const response = objectWithoutUndefinedValues({
    status: dependency.remoteNeeded ? PARTIAL_CONTENT : OK$1,
    remoteMboxes: dependency.remoteMboxes,
    remoteViews: dependency.remoteViews,
    requestId: request.requestId,
    id: _objectSpread2({}, request.id),
    client: clientId,
    edgeHost: undefined,
    execute: getExecuteDecisions(commonPostProcessor),
    prefetch: getPrefetchDecisions(commonPostProcessor)
  });
  notificationProvider.sendNotifications();
  logger.debug(`${LOG_TAG$1}`, request, response);
  return Promise.resolve(response);
}

var NativePromisePrototype$9 = promiseNativeConstructor$2 && promiseNativeConstructor$2.prototype;

// Safari bug https://bugs.webkit.org/show_bug.cgi?id=200829
var NON_GENERIC = !!promiseNativeConstructor$2 && fails$2(function () {
  // eslint-disable-next-line unicorn/no-thenable -- required for testing
  NativePromisePrototype$9['finally'].call({ then: function () { /* empty */ } }, function () { /* empty */ });
});

// `Promise.prototype.finally` method
// https://tc39.es/ecma262/#sec-promise.prototype.finally
_export$2({ target: 'Promise', proto: true, real: true, forced: NON_GENERIC }, {
  'finally': function (onFinally) {
    var C = speciesConstructor$2(this, getBuiltIn$2('Promise'));
    var isFunction = isCallable$2(onFinally);
    return this.then(
      isFunction ? function (x) {
        return promiseResolve$2(C, onFinally()).then(function () { return x; });
      } : onFinally,
      isFunction ? function (e) {
        return promiseResolve$2(C, onFinally()).then(function () { throw e; });
      } : onFinally
    );
  }
});

// makes sure that native promise-based APIs `Promise#finally` properly works with patched `Promise#then`
if ( isCallable$2(promiseNativeConstructor$2)) {
  var method$3 = getBuiltIn$2('Promise').prototype['finally'];
  if (NativePromisePrototype$9['finally'] !== method$3) {
    defineBuiltIn$2(NativePromisePrototype$9, 'finally', method$3, { unsafe: true });
  }
}

// `URL.prototype.toJSON` method
// https://url.spec.whatwg.org/#dom-url-tojson
_export$2({ target: 'URL', proto: true, enumerable: true }, {
  toJSON: function toJSON() {
    return functionCall$2(URL.prototype.toString, this);
  }
});

const GEO_LOOKUP_URL = `https://${CDN_BASE_PATH}/v${SUPPORTED_ARTIFACT_MAJOR_VERSION}/geo`;
const GEO_MAPPINGS = [{
  headerName: HTTP_HEADER_FORWARDED_FOR,
  parseValue: value => value,
  valueKey: "ipAddress"
}, {
  headerName: HTTP_HEADER_GEO_LATITUDE,
  parseValue: value => parseFloat(value),
  valueKey: "latitude"
}, {
  headerName: HTTP_HEADER_GEO_LONGITUDE,
  parseValue: value => parseFloat(value),
  valueKey: "longitude"
}, {
  headerName: HTTP_HEADER_GEO_COUNTRY,
  parseValue: value => value,
  valueKey: "countryCode"
}, {
  headerName: HTTP_HEADER_GEO_REGION,
  parseValue: value => value,
  valueKey: "stateCode"
}, {
  headerName: HTTP_HEADER_GEO_CITY,
  parseValue: value => value,
  valueKey: "city"
}];
/**
 *
 * @param {Function} valueFn, function to lookup value by key
 * @param initial
 * @return {import("@adobe/target-tools/delivery-api-client/models/Geo").Geo}
 */

function mapGeoValues(valueFn, initial = {}) {
  return GEO_MAPPINGS.reduce((result, mapping) => {
    const value = valueFn.call(null, mapping.headerName);

    if (value != null && isDefined(value)) {
      // eslint-disable-next-line no-param-reassign
      result[mapping.valueKey] = mapping.parseValue(value);
    }

    return result;
  }, initial);
}
/**
 * @param { import("node-fetch").Headers  } geoHeaders;
 * @return { import("@adobe/target-tools/delivery-api-client/models/Geo").Geo }
 */


function createGeoObjectFromHeaders(geoHeaders) {
  return mapGeoValues(key => geoHeaders.get(key));
}
/**
 * @param {Object.<string, any>} geoPayload
 * @return { import("@adobe/target-tools/delivery-api-client/models/Geo").Geo }
 */

function createGeoObjectFromPayload(geoPayload = {}) {
  return mapGeoValues(key => geoPayload[key]);
}
/**
 * @param {import("../types/DecisioningConfig").DecisioningConfig} config
 * @param { import("../types/DecisioningArtifact").DecisioningArtifact } artifact
 */

function GeoProvider(config, artifact) {
  const fetchApi = getFetchApi(config.fetchApi);
  const {
    geoTargetingEnabled = false
  } = artifact;
  const {
    eventEmitter = noop$2
  } = config;
  /**
   * @param {import("@adobe/target-tools/delivery-api-client/models/Geo").Geo} geoRequestContext
   * @return { Promise<import("@adobe/target-tools/delivery-api-client/models/Geo").Geo> }
   */

  function validGeoRequestContext(geoRequestContext = {}) {
    const validatedGeoRequestContext = _objectSpread2({}, geoRequestContext);

    if (geoRequestContext.ipAddress === UNKNOWN_IP_ADDRESS || !isValidIpAddress(geoRequestContext.ipAddress)) {
      delete validatedGeoRequestContext.ipAddress;
    }

    if (geoTargetingEnabled && (geoRequestContext.ipAddress === UNKNOWN_IP_ADDRESS || isValidIpAddress(geoRequestContext.ipAddress)) && isUndefined(geoRequestContext.latitude) && isUndefined(geoRequestContext.longitude) && isUndefined(geoRequestContext.countryCode) && isUndefined(geoRequestContext.stateCode) && isUndefined(geoRequestContext.city)) {
      const headers = {};

      if (geoRequestContext.ipAddress !== UNKNOWN_IP_ADDRESS) {
        headers[HTTP_HEADER_FORWARDED_FOR] = geoRequestContext.ipAddress;
      }

      return fetchApi(GEO_LOOKUP_URL, {
        headers
      }).then(geoResponse => geoResponse.json().then(geoPayload => createGeoObjectFromPayload(geoPayload))).then(fetchedGeoValues => {
        reactorObjectAssign(validatedGeoRequestContext, fetchedGeoValues);
        eventEmitter(GEO_LOCATION_UPDATED, {
          geoContext: validatedGeoRequestContext
        });
        return validatedGeoRequestContext;
      });
    }

    return Promise.resolve(validatedGeoRequestContext);
  }

  return validGeoRequestContext;
}

const HEADER_BOUNDARY = 40;
/**
 * The ObfuscationProvider initialize method
 * @param {import("../types/DecisioningConfig").DecisioningConfig} config Options map, required
 */

function ObfuscationProvider(config) {
  const {
    organizationId
  } = config;
  const decoder = new TextDecoder("utf-8");

  function getHeader(buffer) {
    const dataView = new DataView(buffer);
    const text = decoder.decode(dataView);
    const [prefix, version] = text.slice(0, 8).split(":");
    const key = text.slice(8, 41);
    return {
      prefix,
      version: parseInt(version, 10),
      key
    };
  }

  function getArtifact(key, obfuscatedArtifactBuffer) {
    let deobfuscatedArtifactJSON = {};
    const keyBuffer = new TextEncoder().encode([organizationId, key].join(""));
    const keyView = new DataView(keyBuffer.buffer);
    const keyLength = keyView.byteLength;
    const obfuscatedArtifactView = new DataView(obfuscatedArtifactBuffer);
    const artifactLength = obfuscatedArtifactView.byteLength;
    const deobfuscatedArtifactView = new DataView(new ArrayBuffer(artifactLength));

    for (let i = 0; i < artifactLength; i += 1) {
      deobfuscatedArtifactView.setInt8(i, obfuscatedArtifactView.getInt8(i) ^ keyView.getInt8(i % keyLength));
    }

    const deobfuscatedArtifactString = decoder.decode(deobfuscatedArtifactView);

    try {
      deobfuscatedArtifactJSON = JSON.parse(deobfuscatedArtifactString);
    } catch (err) {
      throw new Error(Messages.ARTIFACT_OBFUSCATION_ERROR);
    }

    return deobfuscatedArtifactJSON;
  }

  function deobfuscate(buffer) {
    const header = getHeader(buffer.slice(0, HEADER_BOUNDARY));

    if (header.version !== SUPPORTED_ARTIFACT_OBFUSCATION_VERSION) {
      throw new Error(Messages.ARTIFACT_INVALID);
    }

    return getArtifact(header.key, buffer.slice(HEADER_BOUNDARY));
  }

  return {
    deobfuscate
  };
}

/* eslint-disable import/prefer-default-export */
const TIMING_ARTIFACT_DOWNLOADED_TOTAL = "artifactDownloaded_total";
const TIMING_ARTIFACT_DOWNLOADED_FETCH = "artifactDownloaded_fetch";
const TIMING_ARTIFACT_GET_INITIAL = "artifactGetInitial";
const TIMING_ARTIFACT_READ_JSON = "artifactDownloaded_read_JSON";
const TIMING_ARTIFACT_DEOBFUSCATE = "deobfuscate_total";

const LOG_TAG$2 = `${LOG_PREFIX}.ArtifactProvider`;
const NOT_MODIFIED$2 = 304;
const OK$2 = 200;
const ARTIFACT_DOWNLOAD = "ArtifactDownload";
/**
 * The ArtifactProvider initialize method
 * @param {import("../types/DecisioningConfig").DecisioningConfig} config Options map, required
 */

function ArtifactProvider(config, telemetryProvider) {
  const logger = getLogger(config.logger);
  const {
    eventEmitter = noop$2
  } = config;
  const obfuscationProvider = ObfuscationProvider(config);

  function getPollingInterval() {
    if ( // allow polling to be set to 0
    isNumber(config.pollingInterval) && config.pollingInterval === 0) {
      return 0;
    }

    return Math.max(MINIMUM_POLLING_INTERVAL, isNumber(config.pollingInterval) ? config.pollingInterval : DEFAULT_POLLING_INTERVAL);
  }

  const pollingInterval = getPollingInterval();
  const fetchApi = getFetchApi(config.fetchApi);
  let pollingHalted = false;
  let pollingTimer;
  let artifact;
  const subscriptions = {};
  let subscriptionCount = 0;
  let lastResponseEtag;
  let lastResponseData;
  const artifactLocation = determineArtifactLocation(config);
  const artifactFormat = isString(config.artifactFormat) ? config.artifactFormat : determineArtifactFormat(artifactLocation);
  const fetchWithRetry = getFetchWithRetry(fetchApi, NUM_FETCH_RETRIES, errorMessage => Messages.ERROR_MAX_RETRY(NUM_FETCH_RETRIES, errorMessage), error => eventEmitter(ARTIFACT_DOWNLOAD_FAILED, {
    artifactLocation,
    error
  }));

  function emitNewArtifact(artifactPayload, geoContext = {}) {
    eventEmitter(ARTIFACT_DOWNLOAD_SUCCEEDED, {
      artifactLocation,
      artifactPayload
    });
    eventEmitter(GEO_LOCATION_UPDATED, {
      geoContext
    });
    values$1(subscriptions).forEach(subscriptionFunc => subscriptionFunc(artifactPayload));
  }
  /**
   *
   * @param {import("node-fetch").Response} res
   * @return {Promise<import("../types/DecisioningArtifact").DecisioningArtifact>}
   */


  function deobfuscate(res) {
    if (artifactFormat === ARTIFACT_FORMAT_BINARY) {
      perfTool.timeStart(TIMING_ARTIFACT_DEOBFUSCATE);
      return res.arrayBuffer().then(buffer => obfuscationProvider.deobfuscate(buffer).then(deobfuscated => {
        perfTool.timeEnd(TIMING_ARTIFACT_DEOBFUSCATE);
        return deobfuscated;
      }));
    }

    perfTool.timeStart(TIMING_ARTIFACT_READ_JSON);
    return res.json().then(data => {
      perfTool.timeEnd(TIMING_ARTIFACT_READ_JSON);
      return data;
    });
  }

  function fetchArtifact(artifactUrl) {
    perfTool.timeStart(TIMING_ARTIFACT_DOWNLOADED_TOTAL);
    const headers = {};
    logger.debug(`${LOG_TAG$2} fetching artifact - ${artifactUrl}`);

    if (lastResponseEtag && !isBrowser() && isNodeJS()) {
      headers["If-None-Match"] = lastResponseEtag;
    }

    perfTool.timeStart(TIMING_ARTIFACT_DOWNLOADED_FETCH);
    return fetchWithRetry(artifactUrl, {
      headers,
      cache: "default"
    }).then(res => {
      const executionTime = perfTool.timeEnd(TIMING_ARTIFACT_DOWNLOADED_FETCH);
      perfTool.clearTiming(TIMING_ARTIFACT_DOWNLOADED_FETCH);
      logger.debug(`${LOG_TAG$2} artifact received - status=${res.status}`);
      const entry = {
        execution: executionTime
      };

      if (res.timings) {
        entry.parsing = res.timings.parsingTime;
        delete res.timings.parsingTime;
        entry.request = res.timings;
      }

      telemetryProvider.addArtifactRequestEntry(ARTIFACT_DOWNLOAD, entry);

      if (res.status === NOT_MODIFIED$2 && lastResponseData) {
        return lastResponseData;
      }

      if (res.ok && res.status === OK$2) {
        return deobfuscate(res).then(responseData => {
          const etag = res.headers.get("Etag");

          if (etag != null && isDefined(etag)) {
            lastResponseData = responseData;
            lastResponseEtag = etag;
          }

          emitNewArtifact(responseData, createGeoObjectFromHeaders(res.headers));
          perfTool.timeEnd(TIMING_ARTIFACT_DOWNLOADED_TOTAL);
          return responseData;
        });
      }

      return undefined;
    }).catch(err => {
      const reason = err.message || err.toString();
      logger.error(Messages.ARTIFACT_FETCH_ERROR(reason));
    });
  }

  function addSubscription(callbackFunc) {
    subscriptionCount += 1;
    subscriptions[subscriptionCount] = callbackFunc;
    return subscriptionCount;
  }

  function removeSubscription(id) {
    delete subscriptions[id];
  }

  function scheduleNextUpdate() {
    if (pollingInterval === 0 || pollingHalted) {
      return;
    }

    pollingTimer = setTimeout(() => {
      fetchArtifact(artifactLocation).then(newArtifact => {
        artifact = newArtifact;
        return newArtifact;
      });
      scheduleNextUpdate();
    }, pollingInterval);
  }

  function stopAllPolling() {
    if (isDefined(pollingTimer)) {
      clearTimeout(pollingTimer);
      pollingTimer = undefined;
    }

    pollingHalted = true;
  }

  function resumePolling() {
    pollingHalted = false;
    scheduleNextUpdate();
  }
  /**
   *
   * @return { import("../types/DecisioningArtifact").DecisioningArtifact }
   */


  function getArtifact() {
    return artifact;
  }

  function getInitialArtifact() {
    perfTool.timeStart(TIMING_ARTIFACT_GET_INITIAL);
    return isObject$1(config.artifactPayload) ? Promise.resolve(config.artifactPayload) : fetchArtifact(artifactLocation);
  }

  return getInitialArtifact().then(newArtifact => {
    perfTool.timeEnd(TIMING_ARTIFACT_GET_INITIAL);
    artifact = newArtifact;
    const artifactTracer = ArtifactTracer(artifactLocation, config.artifactPayload, pollingInterval, pollingHalted, artifact);
    addSubscription(value => artifactTracer.provideNewArtifact(value));
    return {
      getArtifact: () => getArtifact(),
      subscribe: callbackFunc => addSubscription(callbackFunc),
      unsubscribe: id => removeSubscription(id),
      stopPolling: () => stopAllPolling(),
      resumePolling: () => resumePolling(),
      getTrace: () => artifactTracer.toJSON()
    };
  }).finally(() => {
    scheduleNextUpdate();
  });
}

/**
 *
 * @param { import("@adobe/target-tools/delivery-api-client/models/VisitorId").VisitorId } visitorId
 * @returns {string} first non-blank marketingCloudVisitorId, tntId, thirdPartyId
 */

function getCustomerId(visitorId) {
  if (!visitorId.customerIds || !(visitorId.customerIds instanceof Array)) {
    return undefined;
  }

  const customerIds = visitorId.customerIds.filter(customerId => customerId.authenticatedState === AuthenticatedState.Authenticated);

  if (customerIds.length > 0) {
    return customerIds[0].id;
  }

  return undefined;
}
/**
 *
 * @param {import("@adobe/target-tools/delivery-api-client/models/VisitorId").VisitorId} visitorId
 * @param {String} targetLocationHint
 * @returns {import("@adobe/target-tools/delivery-api-client/models/VisitorId").VisitorId}
 */

function validVisitorId(visitorId, targetLocationHint) {
  const result = _objectSpread2({}, visitorId);

  if (!result.tntId && !result.marketingCloudVisitorId && !getCustomerId(result) && !result.thirdPartyId) {
    const locationHint = isString(targetLocationHint) && !isBlank(targetLocationHint) ? `.${targetLocationHint}_0` : "";
    result.tntId = `${uuid()}${locationHint}`;
  }

  return result;
}
/**
 *
 * @param {import("@adobe/target-tools/delivery-api-client/models/DeliveryRequest").DeliveryRequest} request
 * @param {String} targetLocationHint
 * @param {Function} validGeoRequestContext
 * @returns {Promise<import("@adobe/target-tools/delivery-api-client/models/DeliveryRequest").DeliveryRequest>}
 */

function validDeliveryRequest(request, targetLocationHint, validGeoRequestContext) {
  const {
    context = {}
  } = request;
  return validGeoRequestContext(context.geo || {}).then(geo => _objectSpread2(_objectSpread2({}, request), {}, {
    context: _objectSpread2(_objectSpread2({}, context), {}, {
      geo
    }),
    id: validVisitorId(request.id, targetLocationHint),
    requestId: request.requestId || uuid()
  }));
}

/**
 * The TargetDecisioningEngine initialize method
 * @param {import("../types/DecisioningConfig").DecisioningConfig} config Options map, required
 * @param {import("@adobe/target-tools/src/telemetryProvider")} telemetryProvider TelemetryProvider function, required
 */

function TargetDecisioningEngine(config, telemetryProvider) {
  const logger = getLogger(config.logger);
  let artifactProvider;
  let artifact;
  /**
   * The get offers method
   * @param {import("../types/TargetDeliveryRequest").TargetDeliveryRequest} targetOptions
   */

  function getOffers(targetOptions) {
    let {
      request
    } = targetOptions;

    if (isUndefined(artifact)) {
      return Promise.reject(new Error(Messages.ARTIFACT_NOT_AVAILABLE));
    }

    if (!matchMajorVersion(artifact.version, SUPPORTED_ARTIFACT_MAJOR_VERSION)) {
      return Promise.reject(new Error(Messages.ARTIFACT_VERSION_UNSUPPORTED(artifact.version, SUPPORTED_ARTIFACT_MAJOR_VERSION)));
    }

    return validDeliveryRequest(request, targetOptions.targetLocationHint, GeoProvider(config, artifact)).then(validRequest => {
      request = validRequest;

      const options = _objectSpread2(_objectSpread2({}, targetOptions), {}, {
        request
      });

      const traceProvider = TraceProvider(config, options, artifactProvider.getTrace());
      return DecisionProvider(config, options, createDecisioningContext(request, getParseDomainImpl(config)), artifact, logger, traceProvider);
    });
  }

  function isReady() {
    return isDefined(artifact);
  }

  return ArtifactProvider(_objectSpread2(_objectSpread2({}, config), {}, {
    logger
  }), telemetryProvider).then(providerInstance => {
    artifactProvider = providerInstance;
    artifact = artifactProvider.getArtifact();

    if (isUndefined(artifact)) {
      throw new Error(Messages.ARTIFACT_NOT_AVAILABLE);
    } // subscribe to new artifacts that are downloaded on the polling interval


    artifactProvider.subscribe(data => {
      artifact = data;
    });
    return {
      getRawArtifact: () => artifact,
      stopPolling: () => artifactProvider.stopPolling(),
      getOffers: targetOptions => getOffers(targetOptions),
      hasRemoteDependency: request => hasRemoteDependency(artifact, request),
      isReady
    };
  });
}

var defineProperty$f = objectDefineProperty.f;


var NativeSymbol = global_1.Symbol;
var SymbolPrototype = NativeSymbol && NativeSymbol.prototype;

if (descriptors && isCallable(NativeSymbol) && (!('description' in SymbolPrototype) ||
  // Safari 12 bug
  NativeSymbol().description !== undefined
)) {
  var EmptyStringDescriptionStore = {};
  // wrap Symbol constructor for correct work with undefined description
  var SymbolWrapper = function Symbol() {
    var description = arguments.length < 1 || arguments[0] === undefined ? undefined : toString_1(arguments[0]);
    var result = objectIsPrototypeOf(SymbolPrototype, this)
      ? new NativeSymbol(description)
      // in Edge 13, String(Symbol(undefined)) === 'Symbol(undefined)'
      : description === undefined ? NativeSymbol() : NativeSymbol(description);
    if (description === '') EmptyStringDescriptionStore[result] = true;
    return result;
  };

  copyConstructorProperties(SymbolWrapper, NativeSymbol);
  SymbolWrapper.prototype = SymbolPrototype;
  SymbolPrototype.constructor = SymbolWrapper;

  var NATIVE_SYMBOL = String(NativeSymbol('test')) == 'Symbol(test)';
  var thisSymbolValue = functionUncurryThis(SymbolPrototype.valueOf);
  var symbolDescriptiveString = functionUncurryThis(SymbolPrototype.toString);
  var regexp = /^Symbol\((.*)\)[^)]+$/;
  var replace$a = functionUncurryThis(''.replace);
  var stringSlice$f = functionUncurryThis(''.slice);

  defineProperty$f(SymbolPrototype, 'description', {
    configurable: true,
    get: function description() {
      var symbol = thisSymbolValue(this);
      if (hasOwnProperty_1(EmptyStringDescriptionStore, symbol)) return '';
      var string = symbolDescriptiveString(symbol);
      var desc = NATIVE_SYMBOL ? stringSlice$f(string, 7, -1) : replace$a(string, regexp, '$1');
      return desc === '' ? undefined : desc;
    }
  });

  _export({ global: true, constructor: true, forced: true }, {
    Symbol: SymbolWrapper
  });
}

const NAVIGATOR = "navigator";
const SEND_BEACON = "sendBeacon";
const isObject$4 = value => value instanceof Object;
const isPrimitiveObject = value => value instanceof String || value instanceof Number || value instanceof Boolean || value instanceof Symbol;
const noUndefinedValues = value => !!Object.values(value).filter(obj => isDefined(obj)).length;
const isNonEmptyObject = value => isObject$4(value) && !Array.isArray(value) && !isPrimitiveObject(value) && noUndefinedValues(value);
const isEmptyObject = value => !isNonEmptyObject(value);
const isNonEmptyString = value => isString(value) && !!value.length;
const isEmptyString = value => !isNonEmptyString(value);
const isNonEmptyArray = value => Array.isArray(value) && !!value.length && noUndefinedValues(value);
const isEmptyArray = value => !isNonEmptyArray(value);
const removeEmptyKeys = object => // eslint-disable-next-line no-param-reassign
Object.keys(object).forEach(key => !object[key] && delete object[key]);
const flatten$1 = (array = []) => [].concat(...array);
const getTimezoneOffset = () => -new Date().getTimezoneOffset();
function createVisitor(options, config) {
  const {
    organizationId
  } = config;
  const {
    visitor,
    visitorCookie,
    customerIds
  } = options;
  const createdVisitor = visitor || new Visitor(organizationId, visitorCookie);

  if (customerIds) {
    createdVisitor.setCustomerIDs(customerIds);
  }

  return createdVisitor;
}
function isBeaconSupported() {
  return isBrowser() && // eslint-disable-next-line no-undef
  NAVIGATOR in window && // eslint-disable-next-line no-undef
  SEND_BEACON in window[NAVIGATOR];
}
function executeSendBeacon(url, data) {
  // eslint-disable-next-line no-undef
  return window[NAVIGATOR][SEND_BEACON](url, data);
}

/* eslint-disable import/prefer-default-export */
const Messages$1 = {
  PRIVATE_CONSTRUCTOR: "Please use TargetClient.create static method instead",
  ORG_ID_REQUIRED: "Organization Id is required",
  DECISIONING_METHOD_INVALID: `Invalid Decisioning Method.  Must be set to one of: ${Object.values(DECISIONING_METHOD).join(",")}`,
  FETCH_API_REQUIRED: "Fetch API is required",
  REQUEST_REQUIRED: "Request object is required",
  EXECUTE_FIELDS_REQUIRED: "Either pageLoad or mboxes is required in execute",
  PREFETCH_FIELDS_REQUIRED: "Either views, pageLoad or mboxes is required in prefetch",
  MBOX_INVALID: "Mbox validation failed for: ",
  NOTIFICATION_INVALID: "Notification validation failed for: ",
  CLIENT_REQUIRED: "Client is required",
  OPTIONS_REQUIRED: "Options map is required",
  REQUEST_SENT: "Request sent",
  RESPONSE_RECEIVED: "Response received",
  FETCH_UNDEFINED: "Fetch is not defined!",
  DECISIONING_ENGINE_UNDEFINED: "Decisioning Engine is undefined",
  LOCATION_HINT_REQUEST_FAILED: "Unable to retrieve location hint cookie."
};

/*
Copyright 2019 Adobe. All rights reserved.
This file is licensed to you under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License. You may obtain a copy
of the License at http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software distributed under
the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS
OF ANY KIND, either express or implied. See the License for the specific language
governing permissions and limitations under the License.
*/
const TARGET_COOKIE = "mbox";
const SESSION_ID_COOKIE = "session";
const DEVICE_ID_COOKIE = "PC";
const LOCATION_HINT_COOKIE = "mboxEdgeCluster";

function createInternalCookie(name, value, expires) {
  return {
    name,
    value,
    expires
  };
}

function serializeCookie(cookie) {
  return [encodeURIComponent(cookie.name), encodeURIComponent(cookie.value), cookie.expires].join("#");
}

function deserializeCookie(str) {
  const parts = str.split("#");
  const len = parts.length;

  if (len === 0 || len < 3) {
    return null;
  }

  if (Number.isNaN(parseInt(parts[2], 10))) {
    return null;
  }

  return createInternalCookie(decodeURIComponent(parts[0]), decodeURIComponent(parts[1]), Number(parts[2]));
}

function getInternalCookies(cookieValue) {
  return cookieValue.split("|");
}

function getExpires(cookie) {
  return cookie.expires;
}

function getMaxExpires(cookies) {
  return Math.max.apply(null, cookies.map(getExpires));
}

function parseCookies(targetCookie) {
  const result = {};

  if (!targetCookie) {
    return result;
  }

  const rawInternalCookies = getInternalCookies(targetCookie);
  const internalCookies = rawInternalCookies.map(x => deserializeCookie(x));
  const nowInSeconds = Math.ceil(Date.now() / 1000);
  const validCookies = internalCookies.filter(cookie => cookie && nowInSeconds <= cookie.expires);
  validCookies.forEach(cookie => {
    result[cookie.name] = cookie;
  });
  return result;
}
function createTargetCookie(cookies) {
  const now = Date.now();
  const maxAge = Math.abs(getMaxExpires(cookies) * 1000 - now);
  const serializedCookies = cookies.map(x => serializeCookie(x));
  return {
    name: TARGET_COOKIE,
    value: serializedCookies.join("|"),
    maxAge: Math.ceil(maxAge / 1000)
  };
}

// `RegExp.prototype.flags` getter implementation
// https://tc39.es/ecma262/#sec-get-regexp.prototype.flags
var regexpFlags$2 = function () {
  var that = anObject(this);
  var result = '';
  if (that.hasIndices) result += 'd';
  if (that.global) result += 'g';
  if (that.ignoreCase) result += 'i';
  if (that.multiline) result += 'm';
  if (that.dotAll) result += 's';
  if (that.unicode) result += 'u';
  if (that.unicodeSets) result += 'v';
  if (that.sticky) result += 'y';
  return result;
};

// babel-minify and Closure Compiler transpiles RegExp('a', 'y') -> /a/y and it causes SyntaxError
var $RegExp$6 = global_1.RegExp;

var UNSUPPORTED_Y$5 = fails(function () {
  var re = $RegExp$6('a', 'y');
  re.lastIndex = 2;
  return re.exec('abcd') != null;
});

// UC Browser bug
// https://github.com/zloirock/core-js/issues/1008
var MISSED_STICKY$3 = UNSUPPORTED_Y$5 || fails(function () {
  return !$RegExp$6('a', 'y').sticky;
});

var BROKEN_CARET$2 = UNSUPPORTED_Y$5 || fails(function () {
  // https://bugzilla.mozilla.org/show_bug.cgi?id=773687
  var re = $RegExp$6('^r', 'gy');
  re.lastIndex = 2;
  return re.exec('str') != null;
});

var regexpStickyHelpers$2 = {
  BROKEN_CARET: BROKEN_CARET$2,
  MISSED_STICKY: MISSED_STICKY$3,
  UNSUPPORTED_Y: UNSUPPORTED_Y$5
};

// babel-minify and Closure Compiler transpiles RegExp('.', 's') -> /./s and it causes SyntaxError
var $RegExp$7 = global_1.RegExp;

var regexpUnsupportedDotAll$2 = fails(function () {
  var re = $RegExp$7('.', 's');
  return !(re.dotAll && re.exec('\n') && re.flags === 's');
});

// babel-minify and Closure Compiler transpiles RegExp('(?<a>b)', 'g') -> /(?<a>b)/g and it causes SyntaxError
var $RegExp$8 = global_1.RegExp;

var regexpUnsupportedNcg$2 = fails(function () {
  var re = $RegExp$8('(?<a>b)', 'g');
  return re.exec('b').groups.a !== 'b' ||
    'b'.replace(re, '$<a>c') !== 'bc';
});

/* eslint-disable regexp/no-empty-capturing-group, regexp/no-empty-group, regexp/no-lazy-ends -- testing */
/* eslint-disable regexp/no-useless-quantifier -- testing */







var getInternalState$7 = internalState.get;



var nativeReplace$2 = shared('native-string-replace', String.prototype.replace);
var nativeExec$2 = RegExp.prototype.exec;
var patchedExec$2 = nativeExec$2;
var charAt$d = functionUncurryThis(''.charAt);
var indexOf$5 = functionUncurryThis(''.indexOf);
var replace$b = functionUncurryThis(''.replace);
var stringSlice$g = functionUncurryThis(''.slice);

var UPDATES_LAST_INDEX_WRONG$2 = (function () {
  var re1 = /a/;
  var re2 = /b*/g;
  functionCall(nativeExec$2, re1, 'a');
  functionCall(nativeExec$2, re2, 'a');
  return re1.lastIndex !== 0 || re2.lastIndex !== 0;
})();

var UNSUPPORTED_Y$6 = regexpStickyHelpers$2.BROKEN_CARET;

// nonparticipating capturing group, copied from es5-shim's String#split patch.
var NPCG_INCLUDED$2 = /()??/.exec('')[1] !== undefined;

var PATCH$2 = UPDATES_LAST_INDEX_WRONG$2 || NPCG_INCLUDED$2 || UNSUPPORTED_Y$6 || regexpUnsupportedDotAll$2 || regexpUnsupportedNcg$2;

if (PATCH$2) {
  patchedExec$2 = function exec(string) {
    var re = this;
    var state = getInternalState$7(re);
    var str = toString_1(string);
    var raw = state.raw;
    var result, reCopy, lastIndex, match, i, object, group;

    if (raw) {
      raw.lastIndex = re.lastIndex;
      result = functionCall(patchedExec$2, raw, str);
      re.lastIndex = raw.lastIndex;
      return result;
    }

    var groups = state.groups;
    var sticky = UNSUPPORTED_Y$6 && re.sticky;
    var flags = functionCall(regexpFlags$2, re);
    var source = re.source;
    var charsAdded = 0;
    var strCopy = str;

    if (sticky) {
      flags = replace$b(flags, 'y', '');
      if (indexOf$5(flags, 'g') === -1) {
        flags += 'g';
      }

      strCopy = stringSlice$g(str, re.lastIndex);
      // Support anchored sticky behavior.
      if (re.lastIndex > 0 && (!re.multiline || re.multiline && charAt$d(str, re.lastIndex - 1) !== '\n')) {
        source = '(?: ' + source + ')';
        strCopy = ' ' + strCopy;
        charsAdded++;
      }
      // ^(? + rx + ) is needed, in combination with some str slicing, to
      // simulate the 'y' flag.
      reCopy = new RegExp('^(?:' + source + ')', flags);
    }

    if (NPCG_INCLUDED$2) {
      reCopy = new RegExp('^' + source + '$(?!\\s)', flags);
    }
    if (UPDATES_LAST_INDEX_WRONG$2) lastIndex = re.lastIndex;

    match = functionCall(nativeExec$2, sticky ? reCopy : re, strCopy);

    if (sticky) {
      if (match) {
        match.input = stringSlice$g(match.input, charsAdded);
        match[0] = stringSlice$g(match[0], charsAdded);
        match.index = re.lastIndex;
        re.lastIndex += match[0].length;
      } else re.lastIndex = 0;
    } else if (UPDATES_LAST_INDEX_WRONG$2 && match) {
      re.lastIndex = re.global ? match.index + match[0].length : lastIndex;
    }
    if (NPCG_INCLUDED$2 && match && match.length > 1) {
      // Fix browsers whose `exec` methods don't consistently return `undefined`
      // for NPCG, like IE8. NOTE: This doesn't work for /(.?)?/
      functionCall(nativeReplace$2, match[0], reCopy, function () {
        for (i = 1; i < arguments.length - 2; i++) {
          if (arguments[i] === undefined) match[i] = undefined;
        }
      });
    }

    if (match && groups) {
      match.groups = object = objectCreate(null);
      for (i = 0; i < groups.length; i++) {
        group = groups[i];
        object[group[0]] = match[group[1]];
      }
    }

    return match;
  };
}

var regexpExec$2 = patchedExec$2;

// `RegExp.prototype.exec` method
// https://tc39.es/ecma262/#sec-regexp.prototype.exec
_export({ target: 'RegExp', proto: true, forced: /./.exec !== regexpExec$2 }, {
  exec: regexpExec$2
});

// TODO: Remove from `core-js@4` since it's moved to entry points








var SPECIES$b = wellKnownSymbol('species');
var RegExpPrototype$4 = RegExp.prototype;

var fixRegexpWellKnownSymbolLogic$2 = function (KEY, exec, FORCED, SHAM) {
  var SYMBOL = wellKnownSymbol(KEY);

  var DELEGATES_TO_SYMBOL = !fails(function () {
    // String methods call symbol-named RegEp methods
    var O = {};
    O[SYMBOL] = function () { return 7; };
    return ''[KEY](O) != 7;
  });

  var DELEGATES_TO_EXEC = DELEGATES_TO_SYMBOL && !fails(function () {
    // Symbol-named RegExp methods call .exec
    var execCalled = false;
    var re = /a/;

    if (KEY === 'split') {
      // We can't use real regex here since it causes deoptimization
      // and serious performance degradation in V8
      // https://github.com/zloirock/core-js/issues/306
      re = {};
      // RegExp[@@split] doesn't call the regex's exec method, but first creates
      // a new one. We need to return the patched regex when creating the new one.
      re.constructor = {};
      re.constructor[SPECIES$b] = function () { return re; };
      re.flags = '';
      re[SYMBOL] = /./[SYMBOL];
    }

    re.exec = function () { execCalled = true; return null; };

    re[SYMBOL]('');
    return !execCalled;
  });

  if (
    !DELEGATES_TO_SYMBOL ||
    !DELEGATES_TO_EXEC ||
    FORCED
  ) {
    var uncurriedNativeRegExpMethod = functionUncurryThis(/./[SYMBOL]);
    var methods = exec(SYMBOL, ''[KEY], function (nativeMethod, regexp, str, arg2, forceStringMethod) {
      var uncurriedNativeMethod = functionUncurryThis(nativeMethod);
      var $exec = regexp.exec;
      if ($exec === regexpExec$2 || $exec === RegExpPrototype$4.exec) {
        if (DELEGATES_TO_SYMBOL && !forceStringMethod) {
          // The native String method already delegates to @@method (this
          // polyfilled function), leasing to infinite recursion.
          // We avoid it by directly calling the native @@method method.
          return { done: true, value: uncurriedNativeRegExpMethod(regexp, str, arg2) };
        }
        return { done: true, value: uncurriedNativeMethod(str, regexp, arg2) };
      }
      return { done: false };
    });

    defineBuiltIn(String.prototype, KEY, methods[0]);
    defineBuiltIn(RegExpPrototype$4, SYMBOL, methods[1]);
  }

  if (SHAM) createNonEnumerableProperty(RegExpPrototype$4[SYMBOL], 'sham', true);
};

var charAt$e = functionUncurryThis(''.charAt);
var charCodeAt$3 = functionUncurryThis(''.charCodeAt);
var stringSlice$h = functionUncurryThis(''.slice);

var createMethod$6 = function (CONVERT_TO_STRING) {
  return function ($this, pos) {
    var S = toString_1(requireObjectCoercible($this));
    var position = toIntegerOrInfinity(pos);
    var size = S.length;
    var first, second;
    if (position < 0 || position >= size) return CONVERT_TO_STRING ? '' : undefined;
    first = charCodeAt$3(S, position);
    return first < 0xD800 || first > 0xDBFF || position + 1 === size
      || (second = charCodeAt$3(S, position + 1)) < 0xDC00 || second > 0xDFFF
        ? CONVERT_TO_STRING
          ? charAt$e(S, position)
          : first
        : CONVERT_TO_STRING
          ? stringSlice$h(S, position, position + 2)
          : (first - 0xD800 << 10) + (second - 0xDC00) + 0x10000;
  };
};

var stringMultibyte$2 = {
  // `String.prototype.codePointAt` method
  // https://tc39.es/ecma262/#sec-string.prototype.codepointat
  codeAt: createMethod$6(false),
  // `String.prototype.at` method
  // https://github.com/mathiasbynens/String.prototype.at
  charAt: createMethod$6(true)
};

var charAt$f = stringMultibyte$2.charAt;

// `AdvanceStringIndex` abstract operation
// https://tc39.es/ecma262/#sec-advancestringindex
var advanceStringIndex$2 = function (S, index, unicode) {
  return index + (unicode ? charAt$f(S, index).length : 1);
};

var floor$a = Math.floor;
var charAt$g = functionUncurryThis(''.charAt);
var replace$c = functionUncurryThis(''.replace);
var stringSlice$i = functionUncurryThis(''.slice);
var SUBSTITUTION_SYMBOLS$2 = /\$([$&'`]|\d{1,2}|<[^>]*>)/g;
var SUBSTITUTION_SYMBOLS_NO_NAMED$2 = /\$([$&'`]|\d{1,2})/g;

// `GetSubstitution` abstract operation
// https://tc39.es/ecma262/#sec-getsubstitution
var getSubstitution$2 = function (matched, str, position, captures, namedCaptures, replacement) {
  var tailPos = position + matched.length;
  var m = captures.length;
  var symbols = SUBSTITUTION_SYMBOLS_NO_NAMED$2;
  if (namedCaptures !== undefined) {
    namedCaptures = toObject(namedCaptures);
    symbols = SUBSTITUTION_SYMBOLS$2;
  }
  return replace$c(replacement, symbols, function (match, ch) {
    var capture;
    switch (charAt$g(ch, 0)) {
      case '$': return '$';
      case '&': return matched;
      case '`': return stringSlice$i(str, 0, position);
      case "'": return stringSlice$i(str, tailPos);
      case '<':
        capture = namedCaptures[stringSlice$i(ch, 1, -1)];
        break;
      default: // \d\d?
        var n = +ch;
        if (n === 0) return match;
        if (n > m) {
          var f = floor$a(n / 10);
          if (f === 0) return match;
          if (f <= m) return captures[f - 1] === undefined ? charAt$g(ch, 1) : captures[f - 1] + charAt$g(ch, 1);
          return match;
        }
        capture = captures[n - 1];
    }
    return capture === undefined ? '' : capture;
  });
};

var $TypeError$G = TypeError;

// `RegExpExec` abstract operation
// https://tc39.es/ecma262/#sec-regexpexec
var regexpExecAbstract$2 = function (R, S) {
  var exec = R.exec;
  if (isCallable(exec)) {
    var result = functionCall(exec, R, S);
    if (result !== null) anObject(result);
    return result;
  }
  if (classofRaw(R) === 'RegExp') return functionCall(regexpExec$2, R, S);
  throw $TypeError$G('RegExp#exec called on incompatible receiver');
};

var REPLACE$2 = wellKnownSymbol('replace');
var max$8 = Math.max;
var min$8 = Math.min;
var concat$6 = functionUncurryThis([].concat);
var push$a = functionUncurryThis([].push);
var stringIndexOf$3 = functionUncurryThis(''.indexOf);
var stringSlice$j = functionUncurryThis(''.slice);

var maybeToString$2 = function (it) {
  return it === undefined ? it : String(it);
};

// IE <= 11 replaces $0 with the whole match, as if it was $&
// https://stackoverflow.com/questions/6024666/getting-ie-to-replace-a-regex-with-the-literal-string-0
var REPLACE_KEEPS_$0$2 = (function () {
  // eslint-disable-next-line regexp/prefer-escape-replacement-dollar-char -- required for testing
  return 'a'.replace(/./, '$0') === '$0';
})();

// Safari <= 13.0.3(?) substitutes nth capture where n>m with an empty string
var REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE$2 = (function () {
  if (/./[REPLACE$2]) {
    return /./[REPLACE$2]('a', '$0') === '';
  }
  return false;
})();

var REPLACE_SUPPORTS_NAMED_GROUPS$2 = !fails(function () {
  var re = /./;
  re.exec = function () {
    var result = [];
    result.groups = { a: '7' };
    return result;
  };
  // eslint-disable-next-line regexp/no-useless-dollar-replacements -- false positive
  return ''.replace(re, '$<a>') !== '7';
});

// @@replace logic
fixRegexpWellKnownSymbolLogic$2('replace', function (_, nativeReplace, maybeCallNative) {
  var UNSAFE_SUBSTITUTE = REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE$2 ? '$' : '$0';

  return [
    // `String.prototype.replace` method
    // https://tc39.es/ecma262/#sec-string.prototype.replace
    function replace(searchValue, replaceValue) {
      var O = requireObjectCoercible(this);
      var replacer = isNullOrUndefined(searchValue) ? undefined : getMethod(searchValue, REPLACE$2);
      return replacer
        ? functionCall(replacer, searchValue, O, replaceValue)
        : functionCall(nativeReplace, toString_1(O), searchValue, replaceValue);
    },
    // `RegExp.prototype[@@replace]` method
    // https://tc39.es/ecma262/#sec-regexp.prototype-@@replace
    function (string, replaceValue) {
      var rx = anObject(this);
      var S = toString_1(string);

      if (
        typeof replaceValue == 'string' &&
        stringIndexOf$3(replaceValue, UNSAFE_SUBSTITUTE) === -1 &&
        stringIndexOf$3(replaceValue, '$<') === -1
      ) {
        var res = maybeCallNative(nativeReplace, rx, S, replaceValue);
        if (res.done) return res.value;
      }

      var functionalReplace = isCallable(replaceValue);
      if (!functionalReplace) replaceValue = toString_1(replaceValue);

      var global = rx.global;
      if (global) {
        var fullUnicode = rx.unicode;
        rx.lastIndex = 0;
      }
      var results = [];
      while (true) {
        var result = regexpExecAbstract$2(rx, S);
        if (result === null) break;

        push$a(results, result);
        if (!global) break;

        var matchStr = toString_1(result[0]);
        if (matchStr === '') rx.lastIndex = advanceStringIndex$2(S, toLength(rx.lastIndex), fullUnicode);
      }

      var accumulatedResult = '';
      var nextSourcePosition = 0;
      for (var i = 0; i < results.length; i++) {
        result = results[i];

        var matched = toString_1(result[0]);
        var position = max$8(min$8(toIntegerOrInfinity(result.index), S.length), 0);
        var captures = [];
        // NOTE: This is equivalent to
        //   captures = result.slice(1).map(maybeToString)
        // but for some reason `nativeSlice.call(result, 1, result.length)` (called in
        // the slice polyfill when slicing native arrays) "doesn't work" in safari 9 and
        // causes a crash (https://pastebin.com/N21QzeQA) when trying to debug it.
        for (var j = 1; j < result.length; j++) push$a(captures, maybeToString$2(result[j]));
        var namedCaptures = result.groups;
        if (functionalReplace) {
          var replacerArgs = concat$6([matched], captures, position, S);
          if (namedCaptures !== undefined) push$a(replacerArgs, namedCaptures);
          var replacement = toString_1(functionApply(replaceValue, undefined, replacerArgs));
        } else {
          replacement = getSubstitution$2(matched, S, position, captures, namedCaptures, replaceValue);
        }
        if (position >= nextSourcePosition) {
          accumulatedResult += stringSlice$j(S, nextSourcePosition, position) + replacement;
          nextSourcePosition = position + matched.length;
        }
      }
      return accumulatedResult + stringSlice$j(S, nextSourcePosition);
    }
  ];
}, !REPLACE_SUPPORTS_NAMED_GROUPS$2 || !REPLACE_KEEPS_$0$2 || REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE$2);

var NativePromisePrototype$a = promiseNativeConstructor$1 && promiseNativeConstructor$1.prototype;

// Safari bug https://bugs.webkit.org/show_bug.cgi?id=200829
var NON_GENERIC$1 = !!promiseNativeConstructor$1 && fails$1(function () {
  // eslint-disable-next-line unicorn/no-thenable -- required for testing
  NativePromisePrototype$a['finally'].call({ then: function () { /* empty */ } }, function () { /* empty */ });
});

// `Promise.prototype.finally` method
// https://tc39.es/ecma262/#sec-promise.prototype.finally
_export$1({ target: 'Promise', proto: true, real: true, forced: NON_GENERIC$1 }, {
  'finally': function (onFinally) {
    var C = speciesConstructor$1(this, getBuiltIn$1('Promise'));
    var isFunction = isCallable$1(onFinally);
    return this.then(
      isFunction ? function (x) {
        return promiseResolve$1(C, onFinally()).then(function () { return x; });
      } : onFinally,
      isFunction ? function (e) {
        return promiseResolve$1(C, onFinally()).then(function () { throw e; });
      } : onFinally
    );
  }
});

// makes sure that native promise-based APIs `Promise#finally` properly works with patched `Promise#then`
if ( isCallable$1(promiseNativeConstructor$1)) {
  var method$4 = getBuiltIn$1('Promise').prototype['finally'];
  if (NativePromisePrototype$a['finally'] !== method$4) {
    defineBuiltIn$1(NativePromisePrototype$a, 'finally', method$4, { unsafe: true });
  }
}

const BASE_PATH = "https://.tt.omtrdc.net".replace(/\/+$/, "");
const HTTP_NO_CONTENT = 204;
const DEFAULT_TIMEOUT = 3000;

const isBlob = value => typeof Blob !== 'undefined' && value instanceof Blob;

class BaseAPI {
  constructor(configuration = new Configuration()) {
    this.configuration = configuration;

    this.fetchApi = async (url, init) => {
      let fetchParams = {
        url,
        init
      };

      for (const middleware of this.middleware) {
        if (middleware.pre) {
          fetchParams = (await middleware.pre(_objectSpread2({
            fetch: this.fetchApi
          }, fetchParams))) || fetchParams;
        }
      }

      let response = await this.configuration.fetchApi(fetchParams.url, fetchParams.init);

      for (const middleware of this.middleware) {
        if (middleware.post) {
          response = (await middleware.post({
            fetch: this.fetchApi,
            url,
            init,
            response: response.clone()
          })) || response;
        }
      }

      return response;
    };

    this.middleware = configuration.middleware;
  }

  withMiddleware(...middlewares) {
    const next = this.clone();
    next.middleware = next.middleware.concat(...middlewares);
    return next;
  }

  withPreMiddleware(...preMiddlewares) {
    const middlewares = preMiddlewares.map(pre => ({
      pre
    }));
    return this.withMiddleware(...middlewares);
  }

  withPostMiddleware(...postMiddlewares) {
    const middlewares = postMiddlewares.map(post => ({
      post
    }));
    return this.withMiddleware(...middlewares);
  }

  async request(context) {
    const {
      url,
      init
    } = this.createFetchParams(context);
    const response = await this.fetchApi(url, init);

    if (response.status >= 200 && response.status < 300) {
      return response;
    }

    throw response;
  }

  createFetchParams(context) {
    let url = this.configuration.basePath + context.path;

    if (context.query !== undefined && Object.keys(context.query).length !== 0) {
      url += '?' + this.configuration.queryParamsStringify(context.query);
    }

    const body = context.body instanceof FormData || context.body instanceof URLSearchParams || isBlob(context.body) ? context.body : JSON.stringify(context.body);
    const headers = Object.assign({}, this.configuration.headers, context.headers);
    const init = {
      method: context.method,
      headers: headers,
      body,
      credentials: this.configuration.credentials
    };
    return {
      url,
      init
    };
  }

  clone() {
    const constructor = this.constructor;
    const next = new constructor(this.configuration);
    next.middleware = this.middleware.slice();
    return next;
  }

}

class RequiredError extends Error {
  constructor(field, msg) {
    super(msg);
    this.field = field;
    this.name = "RequiredError";
  }

}

class Configuration {
  constructor(configuration = {}) {
    this.configuration = configuration;
  }

  get basePath() {
    return this.configuration.basePath || BASE_PATH;
  }

  get fetchApi() {
    const timeout = this.configuration.timeout;
    const fetch = this.configuration.fetchApi || window.fetch.bind(window);
    return function (input, init) {
      return new Promise((resolve, reject) => {
        let timer = setTimeout(() => reject(new Error('Request timed out')), timeout);
        fetch(input, init).then(response => resolve(response), err => reject(err)).finally(() => clearTimeout(timer));
      });
    };
  }

  get middleware() {
    return this.configuration.middleware || [];
  }

  get queryParamsStringify() {
    return this.configuration.queryParamsStringify || querystring;
  }

  get username() {
    return this.configuration.username;
  }

  get password() {
    return this.configuration.password;
  }

  get apiKey() {
    const apiKey = this.configuration.apiKey;

    if (apiKey) {
      return typeof apiKey === 'function' ? apiKey : () => apiKey;
    }

    return undefined;
  }

  get accessToken() {
    const accessToken = this.configuration.accessToken;

    if (accessToken) {
      return typeof accessToken === 'function' ? accessToken : () => accessToken;
    }

    return undefined;
  }

  get headers() {
    return this.configuration.headers;
  }

  get credentials() {
    return this.configuration.credentials;
  }

  get timeout() {
    return this.configuration.timeout || DEFAULT_TIMEOUT;
  }

}

function exists(json, key) {
  const value = json[key];
  return value !== null && value !== undefined;
}

function querystring(params, prefix = '') {
  return Object.keys(params).map(key => {
    const fullKey = prefix + (prefix.length ? `[${key}]` : key);
    const value = params[key];

    if (value instanceof Array) {
      const multiValue = value.map(singleValue => encodeURIComponent(String(singleValue))).join(`&${encodeURIComponent(fullKey)}=`);
      return `${encodeURIComponent(fullKey)}=${multiValue}`;
    }

    if (value instanceof Object) {
      return querystring(value, fullKey);
    }

    return `${encodeURIComponent(fullKey)}=${encodeURIComponent(String(value))}`;
  }).filter(part => part.length > 0).join('&');
}

class JSONApiResponse {
  constructor(raw, transformer = jsonValue => jsonValue) {
    this.raw = raw;
    this.transformer = transformer;
  }

  async value() {
    return this.transformer(this.raw.status === HTTP_NO_CONTENT ? {} : await this.raw.json());
  }

}

function AddressFromJSON(json) {
  return AddressFromJSONTyped(json);
}

function AddressFromJSONTyped(json, ignoreDiscriminator) {
  if (json === undefined || json === null) {
    return json;
  }

  return {
    'url': !exists(json, 'url') ? undefined : json['url'],
    'referringUrl': !exists(json, 'referringUrl') ? undefined : json['referringUrl']
  };
}

function AddressToJSON(value) {
  if (value === undefined) {
    return undefined;
  }

  if (value === null) {
    return null;
  }

  return {
    'url': value.url,
    'referringUrl': value.referringUrl
  };
}

function AnalyticsPayloadFromJSON(json) {
  return AnalyticsPayloadFromJSONTyped(json);
}

function AnalyticsPayloadFromJSONTyped(json, ignoreDiscriminator) {
  if (json === undefined || json === null) {
    return json;
  }

  return {
    'pe': !exists(json, 'pe') ? undefined : json['pe'],
    'tnta': !exists(json, 'tnta') ? undefined : json['tnta']
  };
}

function AnalyticsRequestFromJSON(json) {
  return AnalyticsRequestFromJSONTyped(json);
}

function AnalyticsRequestFromJSONTyped(json, ignoreDiscriminator) {
  if (json === undefined || json === null) {
    return json;
  }

  return {
    'supplementalDataId': !exists(json, 'supplementalDataId') ? undefined : json['supplementalDataId'],
    'logging': !exists(json, 'logging') ? undefined : LoggingTypeFromJSON(json['logging']),
    'trackingServer': !exists(json, 'trackingServer') ? undefined : json['trackingServer'],
    'trackingServerSecure': !exists(json, 'trackingServerSecure') ? undefined : json['trackingServerSecure']
  };
}

function AnalyticsRequestToJSON(value) {
  if (value === undefined) {
    return undefined;
  }

  if (value === null) {
    return null;
  }

  return {
    'supplementalDataId': value.supplementalDataId,
    'logging': LoggingTypeToJSON(value.logging),
    'trackingServer': value.trackingServer,
    'trackingServerSecure': value.trackingServerSecure
  };
}

function AnalyticsResponseFromJSON(json) {
  return AnalyticsResponseFromJSONTyped(json);
}

function AnalyticsResponseFromJSONTyped(json, ignoreDiscriminator) {
  if (json === undefined || json === null) {
    return json;
  }

  return {
    'payload': !exists(json, 'payload') ? undefined : AnalyticsPayloadFromJSON(json['payload'])
  };
}

function ApplicationFromJSON(json) {
  return ApplicationFromJSONTyped(json);
}

function ApplicationFromJSONTyped(json, ignoreDiscriminator) {
  if (json === undefined || json === null) {
    return json;
  }

  return {
    'id': !exists(json, 'id') ? undefined : json['id'],
    'name': !exists(json, 'name') ? undefined : json['name'],
    'version': !exists(json, 'version') ? undefined : json['version']
  };
}

function ApplicationToJSON(value) {
  if (value === undefined) {
    return undefined;
  }

  if (value === null) {
    return null;
  }

  return {
    'id': value.id,
    'name': value.name,
    'version': value.version
  };
}

function AudienceManagerFromJSON(json) {
  return AudienceManagerFromJSONTyped(json);
}

function AudienceManagerFromJSONTyped(json, ignoreDiscriminator) {
  if (json === undefined || json === null) {
    return json;
  }

  return {
    'locationHint': !exists(json, 'locationHint') ? undefined : json['locationHint'],
    'blob': !exists(json, 'blob') ? undefined : json['blob']
  };
}

function AudienceManagerToJSON(value) {
  if (value === undefined) {
    return undefined;
  }

  if (value === null) {
    return null;
  }

  return {
    'locationHint': value.locationHint,
    'blob': value.blob
  };
}

var AuthenticatedState$1;

(function (AuthenticatedState) {
  AuthenticatedState["Unknown"] = "unknown";
  AuthenticatedState["Authenticated"] = "authenticated";
  AuthenticatedState["LoggedOut"] = "logged_out";
})(AuthenticatedState$1 || (AuthenticatedState$1 = {}));

function AuthenticatedStateFromJSON(json) {
  return AuthenticatedStateFromJSONTyped(json);
}

function AuthenticatedStateFromJSONTyped(json, ignoreDiscriminator) {
  return json;
}

function AuthenticatedStateToJSON(value) {
  return value;
}

function BrowserFromJSON(json) {
  return BrowserFromJSONTyped(json);
}

function BrowserFromJSONTyped(json, ignoreDiscriminator) {
  if (json === undefined || json === null) {
    return json;
  }

  return {
    'host': !exists(json, 'host') ? undefined : json['host'],
    'language': !exists(json, 'language') ? undefined : json['language'],
    'webGLRenderer': !exists(json, 'webGLRenderer') ? undefined : json['webGLRenderer']
  };
}

function BrowserToJSON(value) {
  if (value === undefined) {
    return undefined;
  }

  if (value === null) {
    return null;
  }

  return {
    'host': value.host,
    'language': value.language,
    'webGLRenderer': value.webGLRenderer
  };
}

var ChannelType$1;

(function (ChannelType) {
  ChannelType["Mobile"] = "mobile";
  ChannelType["Web"] = "web";
})(ChannelType$1 || (ChannelType$1 = {}));

function ChannelTypeFromJSON(json) {
  return ChannelTypeFromJSONTyped(json);
}

function ChannelTypeFromJSONTyped(json, ignoreDiscriminator) {
  return json;
}

function ChannelTypeToJSON(value) {
  return value;
}

function ClientHintsFromJSON(json) {
  return ClientHintsFromJSONTyped(json);
}

function ClientHintsFromJSONTyped(json, ignoreDiscriminator) {
  if (json === undefined || json === null) {
    return json;
  }

  return {
    'mobile': !exists(json, 'mobile') ? undefined : json['mobile'],
    'model': !exists(json, 'model') ? undefined : json['model'],
    'platform': !exists(json, 'platform') ? undefined : json['platform'],
    'platformVersion': !exists(json, 'platformVersion') ? undefined : json['platformVersion'],
    'browserUAWithMajorVersion': !exists(json, 'browserUAWithMajorVersion') ? undefined : json['browserUAWithMajorVersion'],
    'browserUAWithFullVersion': !exists(json, 'browserUAWithFullVersion') ? undefined : json['browserUAWithFullVersion'],
    'architecture': !exists(json, 'architecture') ? undefined : json['architecture'],
    'bitness': !exists(json, 'bitness') ? undefined : json['bitness']
  };
}

function ClientHintsToJSON(value) {
  if (value === undefined) {
    return undefined;
  }

  if (value === null) {
    return null;
  }

  return {
    'mobile': value.mobile,
    'model': value.model,
    'platform': value.platform,
    'platformVersion': value.platformVersion,
    'browserUAWithMajorVersion': value.browserUAWithMajorVersion,
    'browserUAWithFullVersion': value.browserUAWithFullVersion,
    'architecture': value.architecture,
    'bitness': value.bitness
  };
}

function ContextFromJSON(json) {
  return ContextFromJSONTyped(json);
}

function ContextFromJSONTyped(json, ignoreDiscriminator) {
  if (json === undefined || json === null) {
    return json;
  }

  return {
    'channel': ChannelTypeFromJSON(json['channel']),
    'mobilePlatform': !exists(json, 'mobilePlatform') ? undefined : MobilePlatformFromJSON(json['mobilePlatform']),
    'application': !exists(json, 'application') ? undefined : ApplicationFromJSON(json['application']),
    'screen': !exists(json, 'screen') ? undefined : ScreenFromJSON(json['screen']),
    'window': !exists(json, 'window') ? undefined : WindowFromJSON(json['window']),
    'browser': !exists(json, 'browser') ? undefined : BrowserFromJSON(json['browser']),
    'address': !exists(json, 'address') ? undefined : AddressFromJSON(json['address']),
    'geo': !exists(json, 'geo') ? undefined : GeoFromJSON(json['geo']),
    'timeOffsetInMinutes': !exists(json, 'timeOffsetInMinutes') ? undefined : json['timeOffsetInMinutes'],
    'userAgent': !exists(json, 'userAgent') ? undefined : json['userAgent'],
    'clientHints': !exists(json, 'clientHints') ? undefined : ClientHintsFromJSON(json['clientHints']),
    'beacon': !exists(json, 'beacon') ? undefined : json['beacon']
  };
}

function ContextToJSON(value) {
  if (value === undefined) {
    return undefined;
  }

  if (value === null) {
    return null;
  }

  return {
    'channel': ChannelTypeToJSON(value.channel),
    'mobilePlatform': MobilePlatformToJSON(value.mobilePlatform),
    'application': ApplicationToJSON(value.application),
    'screen': ScreenToJSON(value.screen),
    'window': WindowToJSON(value.window),
    'browser': BrowserToJSON(value.browser),
    'address': AddressToJSON(value.address),
    'geo': GeoToJSON(value.geo),
    'timeOffsetInMinutes': value.timeOffsetInMinutes,
    'userAgent': value.userAgent,
    'clientHints': ClientHintsToJSON(value.clientHints),
    'beacon': value.beacon
  };
}

function CustomerIdFromJSON(json) {
  return CustomerIdFromJSONTyped(json);
}

function CustomerIdFromJSONTyped(json, ignoreDiscriminator) {
  if (json === undefined || json === null) {
    return json;
  }

  return {
    'id': json['id'],
    'integrationCode': json['integrationCode'],
    'authenticatedState': AuthenticatedStateFromJSON(json['authenticatedState'])
  };
}

function CustomerIdToJSON(value) {
  if (value === undefined) {
    return undefined;
  }

  if (value === null) {
    return null;
  }

  return {
    'id': value.id,
    'integrationCode': value.integrationCode,
    'authenticatedState': AuthenticatedStateToJSON(value.authenticatedState)
  };
}

var DecisioningMethod;

(function (DecisioningMethod) {
  DecisioningMethod["ServerSide"] = "server-side";
  DecisioningMethod["OnDevice"] = "on-device";
  DecisioningMethod["Hybrid"] = "hybrid";
})(DecisioningMethod || (DecisioningMethod = {}));

function DecisioningMethodFromJSON(json) {
  return DecisioningMethodFromJSONTyped(json);
}

function DecisioningMethodFromJSONTyped(json, ignoreDiscriminator) {
  return json;
}

function DecisioningMethodToJSON(value) {
  return value;
}

function DeliveryRequestFromJSON(json) {
  return DeliveryRequestFromJSONTyped(json);
}

function DeliveryRequestFromJSONTyped(json, ignoreDiscriminator) {
  if (json === undefined || json === null) {
    return json;
  }

  return {
    'requestId': !exists(json, 'requestId') ? undefined : json['requestId'],
    'impressionId': !exists(json, 'impressionId') ? undefined : json['impressionId'],
    'id': !exists(json, 'id') ? undefined : VisitorIdFromJSON(json['id']),
    'environmentId': !exists(json, 'environmentId') ? undefined : json['environmentId'],
    'property': !exists(json, 'property') ? undefined : PropertyFromJSON(json['property']),
    'trace': !exists(json, 'trace') ? undefined : TraceFromJSON(json['trace']),
    'context': ContextFromJSON(json['context']),
    'experienceCloud': !exists(json, 'experienceCloud') ? undefined : ExperienceCloudFromJSON(json['experienceCloud']),
    'execute': !exists(json, 'execute') ? undefined : ExecuteRequestFromJSON(json['execute']),
    'prefetch': !exists(json, 'prefetch') ? undefined : PrefetchRequestFromJSON(json['prefetch']),
    'telemetry': !exists(json, 'telemetry') ? undefined : TelemetryFromJSON(json['telemetry']),
    'notifications': !exists(json, 'notifications') ? undefined : json['notifications'].map(NotificationFromJSON),
    'qaMode': !exists(json, 'qaMode') ? undefined : QAModeFromJSON(json['qaMode']),
    'preview': !exists(json, 'preview') ? undefined : PreviewFromJSON(json['preview'])
  };
}

function DeliveryRequestToJSON(value) {
  if (value === undefined) {
    return undefined;
  }

  if (value === null) {
    return null;
  }

  return {
    'requestId': value.requestId,
    'impressionId': value.impressionId,
    'id': VisitorIdToJSON(value.id),
    'environmentId': value.environmentId,
    'property': PropertyToJSON(value.property),
    'trace': TraceToJSON(value.trace),
    'context': ContextToJSON(value.context),
    'experienceCloud': ExperienceCloudToJSON(value.experienceCloud),
    'execute': ExecuteRequestToJSON(value.execute),
    'prefetch': PrefetchRequestToJSON(value.prefetch),
    'telemetry': TelemetryToJSON(value.telemetry),
    'notifications': value.notifications === undefined ? undefined : value.notifications.map(NotificationToJSON),
    'qaMode': QAModeToJSON(value.qaMode),
    'preview': PreviewToJSON(value.preview)
  };
}

function DeliveryResponseFromJSON(json) {
  return DeliveryResponseFromJSONTyped(json);
}

function DeliveryResponseFromJSONTyped(json, ignoreDiscriminator) {
  if (json === undefined || json === null) {
    return json;
  }

  return {
    'status': !exists(json, 'status') ? undefined : json['status'],
    'requestId': !exists(json, 'requestId') ? undefined : json['requestId'],
    'id': !exists(json, 'id') ? undefined : VisitorIdFromJSON(json['id']),
    'client': !exists(json, 'client') ? undefined : json['client'],
    'edgeHost': !exists(json, 'edgeHost') ? undefined : json['edgeHost'],
    'execute': !exists(json, 'execute') ? undefined : ExecuteResponseFromJSON(json['execute']),
    'prefetch': !exists(json, 'prefetch') ? undefined : PrefetchResponseFromJSON(json['prefetch']),
    'notifications': !exists(json, 'notifications') ? undefined : json['notifications'].map(NotificationResponseFromJSON),
    'telemetryServerToken': !exists(json, 'telemetryServerToken') ? undefined : json['telemetryServerToken']
  };
}

var DeviceType;

(function (DeviceType) {
  DeviceType["Phone"] = "phone";
  DeviceType["Tablet"] = "tablet";
})(DeviceType || (DeviceType = {}));

function DeviceTypeFromJSON(json) {
  return DeviceTypeFromJSONTyped(json);
}

function DeviceTypeFromJSONTyped(json, ignoreDiscriminator) {
  return json;
}

function DeviceTypeToJSON(value) {
  return value;
}

function ExecuteRequestFromJSON(json) {
  return ExecuteRequestFromJSONTyped(json);
}

function ExecuteRequestFromJSONTyped(json, ignoreDiscriminator) {
  if (json === undefined || json === null) {
    return json;
  }

  return {
    'pageLoad': !exists(json, 'pageLoad') ? undefined : RequestDetailsFromJSON(json['pageLoad']),
    'mboxes': !exists(json, 'mboxes') ? undefined : json['mboxes'].map(MboxRequestFromJSON)
  };
}

function ExecuteRequestToJSON(value) {
  if (value === undefined) {
    return undefined;
  }

  if (value === null) {
    return null;
  }

  return {
    'pageLoad': RequestDetailsToJSON(value.pageLoad),
    'mboxes': value.mboxes === undefined ? undefined : value.mboxes.map(MboxRequestToJSON)
  };
}

function ExecuteResponseFromJSON(json) {
  return ExecuteResponseFromJSONTyped(json);
}

function ExecuteResponseFromJSONTyped(json, ignoreDiscriminator) {
  if (json === undefined || json === null) {
    return json;
  }

  return {
    'pageLoad': !exists(json, 'pageLoad') ? undefined : PageLoadResponseFromJSON(json['pageLoad']),
    'mboxes': !exists(json, 'mboxes') ? undefined : json['mboxes'].map(MboxResponseFromJSON)
  };
}

var ExecutionMode;

(function (ExecutionMode) {
  ExecutionMode["Edge"] = "edge";
  ExecutionMode["Local"] = "local";
})(ExecutionMode || (ExecutionMode = {}));

function ExecutionModeFromJSON(json) {
  return ExecutionModeFromJSONTyped(json);
}

function ExecutionModeFromJSONTyped(json, ignoreDiscriminator) {
  return json;
}

function ExecutionModeToJSON(value) {
  return value;
}

function ExperienceCloudFromJSON(json) {
  return ExperienceCloudFromJSONTyped(json);
}

function ExperienceCloudFromJSONTyped(json, ignoreDiscriminator) {
  if (json === undefined || json === null) {
    return json;
  }

  return {
    'audienceManager': !exists(json, 'audienceManager') ? undefined : AudienceManagerFromJSON(json['audienceManager']),
    'analytics': !exists(json, 'analytics') ? undefined : AnalyticsRequestFromJSON(json['analytics'])
  };
}

function ExperienceCloudToJSON(value) {
  if (value === undefined) {
    return undefined;
  }

  if (value === null) {
    return null;
  }

  return {
    'audienceManager': AudienceManagerToJSON(value.audienceManager),
    'analytics': AnalyticsRequestToJSON(value.analytics)
  };
}

function GeoFromJSON(json) {
  return GeoFromJSONTyped(json);
}

function GeoFromJSONTyped(json, ignoreDiscriminator) {
  if (json === undefined || json === null) {
    return json;
  }

  return {
    'ipAddress': !exists(json, 'ipAddress') ? undefined : json['ipAddress'],
    'latitude': !exists(json, 'latitude') ? undefined : json['latitude'],
    'longitude': !exists(json, 'longitude') ? undefined : json['longitude'],
    'countryCode': !exists(json, 'countryCode') ? undefined : json['countryCode'],
    'stateCode': !exists(json, 'stateCode') ? undefined : json['stateCode'],
    'city': !exists(json, 'city') ? undefined : json['city'],
    'zip': !exists(json, 'zip') ? undefined : json['zip']
  };
}

function GeoToJSON(value) {
  if (value === undefined) {
    return undefined;
  }

  if (value === null) {
    return null;
  }

  return {
    'ipAddress': value.ipAddress,
    'latitude': value.latitude,
    'longitude': value.longitude,
    'countryCode': value.countryCode,
    'stateCode': value.stateCode,
    'city': value.city,
    'zip': value.zip
  };
}

var LoggingType;

(function (LoggingType) {
  LoggingType["ServerSide"] = "server_side";
  LoggingType["ClientSide"] = "client_side";
})(LoggingType || (LoggingType = {}));

function LoggingTypeFromJSON(json) {
  return LoggingTypeFromJSONTyped(json);
}

function LoggingTypeFromJSONTyped(json, ignoreDiscriminator) {
  return json;
}

function LoggingTypeToJSON(value) {
  return value;
}

function MboxRequestFromJSON(json) {
  return MboxRequestFromJSONTyped(json, false);
}

function MboxRequestFromJSONTyped(json, ignoreDiscriminator) {
  if (json === undefined || json === null) {
    return json;
  }

  return _objectSpread2(_objectSpread2({}, RequestDetailsFromJSONTyped(json, ignoreDiscriminator)), {}, {
    'index': !exists(json, 'index') ? undefined : json['index'],
    'name': !exists(json, 'name') ? undefined : json['name']
  });
}

function MboxRequestToJSON(value) {
  if (value === undefined) {
    return undefined;
  }

  if (value === null) {
    return null;
  }

  return _objectSpread2(_objectSpread2({}, RequestDetailsToJSON(value)), {}, {
    'index': value.index,
    'name': value.name
  });
}

function MboxResponseFromJSON(json) {
  return MboxResponseFromJSONTyped(json, false);
}

function MboxResponseFromJSONTyped(json, ignoreDiscriminator) {
  if (json === undefined || json === null) {
    return json;
  }

  if (!ignoreDiscriminator) {
    if (json['$type'] === 'PrefetchMboxResponse') {
      return PrefetchMboxResponseFromJSONTyped(json, true);
    }
  }

  return {
    '$type': !exists(json, '$_type') ? undefined : json['$_type'],
    'index': !exists(json, 'index') ? undefined : json['index'],
    'name': !exists(json, 'name') ? undefined : json['name'],
    'options': !exists(json, 'options') ? undefined : json['options'].map(OptionFromJSON),
    'metrics': !exists(json, 'metrics') ? undefined : json['metrics'].map(MetricFromJSON),
    'analytics': !exists(json, 'analytics') ? undefined : AnalyticsResponseFromJSON(json['analytics']),
    'trace': !exists(json, 'trace') ? undefined : json['trace']
  };
}

function MetricFromJSON(json) {
  return MetricFromJSONTyped(json);
}

function MetricFromJSONTyped(json, ignoreDiscriminator) {
  if (json === undefined || json === null) {
    return json;
  }

  return {
    'type': !exists(json, 'type') ? undefined : MetricTypeFromJSON(json['type']),
    'selector': !exists(json, 'selector') ? undefined : json['selector'],
    'eventToken': !exists(json, 'eventToken') ? undefined : json['eventToken'],
    'analytics': !exists(json, 'analytics') ? undefined : AnalyticsResponseFromJSON(json['analytics'])
  };
}

var MetricType$1;

(function (MetricType) {
  MetricType["Click"] = "click";
  MetricType["Display"] = "display";
})(MetricType$1 || (MetricType$1 = {}));

function MetricTypeFromJSON(json) {
  return MetricTypeFromJSONTyped(json);
}

function MetricTypeFromJSONTyped(json, ignoreDiscriminator) {
  return json;
}

function MetricTypeToJSON(value) {
  return value;
}

function MobilePlatformFromJSON(json) {
  return MobilePlatformFromJSONTyped(json);
}

function MobilePlatformFromJSONTyped(json, ignoreDiscriminator) {
  if (json === undefined || json === null) {
    return json;
  }

  return {
    'deviceName': !exists(json, 'deviceName') ? undefined : json['deviceName'],
    'deviceType': DeviceTypeFromJSON(json['deviceType']),
    'platformType': MobilePlatformTypeFromJSON(json['platformType']),
    'version': !exists(json, 'version') ? undefined : json['version']
  };
}

function MobilePlatformToJSON(value) {
  if (value === undefined) {
    return undefined;
  }

  if (value === null) {
    return null;
  }

  return {
    'deviceName': value.deviceName,
    'deviceType': DeviceTypeToJSON(value.deviceType),
    'platformType': MobilePlatformTypeToJSON(value.platformType),
    'version': value.version
  };
}

var MobilePlatformType;

(function (MobilePlatformType) {
  MobilePlatformType["Android"] = "android";
  MobilePlatformType["Ios"] = "ios";
})(MobilePlatformType || (MobilePlatformType = {}));

function MobilePlatformTypeFromJSON(json) {
  return MobilePlatformTypeFromJSONTyped(json);
}

function MobilePlatformTypeFromJSONTyped(json, ignoreDiscriminator) {
  return json;
}

function MobilePlatformTypeToJSON(value) {
  return value;
}

function NotificationFromJSON(json) {
  return NotificationFromJSONTyped(json, false);
}

function NotificationFromJSONTyped(json, ignoreDiscriminator) {
  if (json === undefined || json === null) {
    return json;
  }

  return _objectSpread2(_objectSpread2({}, RequestDetailsFromJSONTyped(json, ignoreDiscriminator)), {}, {
    'id': !exists(json, 'id') ? undefined : json['id'],
    'impressionId': !exists(json, 'impressionId') ? undefined : json['impressionId'],
    'type': !exists(json, 'type') ? undefined : MetricTypeFromJSON(json['type']),
    'timestamp': !exists(json, 'timestamp') ? undefined : json['timestamp'],
    'tokens': !exists(json, 'tokens') ? undefined : json['tokens'],
    'mbox': !exists(json, 'mbox') ? undefined : NotificationMboxFromJSON(json['mbox']),
    'view': !exists(json, 'view') ? undefined : NotificationViewFromJSON(json['view']),
    'pageLoad': !exists(json, 'pageLoad') ? undefined : NotificationPageLoadFromJSON(json['pageLoad'])
  });
}

function NotificationToJSON(value) {
  if (value === undefined) {
    return undefined;
  }

  if (value === null) {
    return null;
  }

  return _objectSpread2(_objectSpread2({}, RequestDetailsToJSON(value)), {}, {
    'id': value.id,
    'impressionId': value.impressionId,
    'type': MetricTypeToJSON(value.type),
    'timestamp': value.timestamp,
    'tokens': value.tokens,
    'mbox': NotificationMboxToJSON(value.mbox),
    'view': NotificationViewToJSON(value.view),
    'pageLoad': NotificationPageLoadToJSON(value.pageLoad)
  });
}

function NotificationMboxFromJSON(json) {
  return NotificationMboxFromJSONTyped(json);
}

function NotificationMboxFromJSONTyped(json, ignoreDiscriminator) {
  if (json === undefined || json === null) {
    return json;
  }

  return {
    'name': !exists(json, 'name') ? undefined : json['name'],
    'state': !exists(json, 'state') ? undefined : json['state']
  };
}

function NotificationMboxToJSON(value) {
  if (value === undefined) {
    return undefined;
  }

  if (value === null) {
    return null;
  }

  return {
    'name': value.name,
    'state': value.state
  };
}

function NotificationPageLoadFromJSON(json) {
  return NotificationPageLoadFromJSONTyped(json);
}

function NotificationPageLoadFromJSONTyped(json, ignoreDiscriminator) {
  if (json === undefined || json === null) {
    return json;
  }

  return {
    'state': !exists(json, 'state') ? undefined : json['state']
  };
}

function NotificationPageLoadToJSON(value) {
  if (value === undefined) {
    return undefined;
  }

  if (value === null) {
    return null;
  }

  return {
    'state': value.state
  };
}

function NotificationResponseFromJSON(json) {
  return NotificationResponseFromJSONTyped(json);
}

function NotificationResponseFromJSONTyped(json, ignoreDiscriminator) {
  if (json === undefined || json === null) {
    return json;
  }

  return {
    'id': !exists(json, 'id') ? undefined : json['id'],
    'trace': !exists(json, 'trace') ? undefined : json['trace']
  };
}

function NotificationViewFromJSON(json) {
  return NotificationViewFromJSONTyped(json);
}

function NotificationViewFromJSONTyped(json, ignoreDiscriminator) {
  if (json === undefined || json === null) {
    return json;
  }

  return {
    'name': !exists(json, 'name') ? undefined : json['name'],
    'key': !exists(json, 'key') ? undefined : json['key'],
    'state': !exists(json, 'state') ? undefined : json['state']
  };
}

function NotificationViewToJSON(value) {
  if (value === undefined) {
    return undefined;
  }

  if (value === null) {
    return null;
  }

  return {
    'name': value.name,
    'key': value.key,
    'state': value.state
  };
}

function OptionFromJSON(json) {
  return OptionFromJSONTyped(json);
}

function OptionFromJSONTyped(json, ignoreDiscriminator) {
  if (json === undefined || json === null) {
    return json;
  }

  return {
    'type': !exists(json, 'type') ? undefined : OptionTypeFromJSON(json['type']),
    'content': !exists(json, 'content') ? undefined : OneOfstringobjectarrayFromJSON(json['content']),
    'eventToken': !exists(json, 'eventToken') ? undefined : json['eventToken'],
    'responseTokens': !exists(json, 'responseTokens') ? undefined : json['responseTokens']
  };
}

var OptionType$1;

(function (OptionType) {
  OptionType["Html"] = "html";
  OptionType["Json"] = "json";
  OptionType["Redirect"] = "redirect";
  OptionType["Dynamic"] = "dynamic";
  OptionType["Actions"] = "actions";
})(OptionType$1 || (OptionType$1 = {}));

function OptionTypeFromJSON(json) {
  return OptionTypeFromJSONTyped(json);
}

function OptionTypeFromJSONTyped(json, ignoreDiscriminator) {
  return json;
}

function OrderFromJSON(json) {
  return OrderFromJSONTyped(json);
}

function OrderFromJSONTyped(json, ignoreDiscriminator) {
  if (json === undefined || json === null) {
    return json;
  }

  return {
    'id': !exists(json, 'id') ? undefined : json['id'],
    'total': !exists(json, 'total') ? undefined : json['total'],
    'purchasedProductIds': !exists(json, 'purchasedProductIds') ? undefined : json['purchasedProductIds'],
    'time': !exists(json, 'time') ? undefined : new Date(json['time']),
    'experienceLocalId': !exists(json, 'experienceLocalId') ? undefined : json['experienceLocalId'],
    'duplicate': !exists(json, 'duplicate') ? undefined : json['duplicate'],
    'outlier': !exists(json, 'outlier') ? undefined : json['outlier']
  };
}

function OrderToJSON(value) {
  if (value === undefined) {
    return undefined;
  }

  if (value === null) {
    return null;
  }

  return {
    'id': value.id,
    'total': value.total,
    'purchasedProductIds': value.purchasedProductIds,
    'time': value.time === undefined ? undefined : value.time.toISOString(),
    'experienceLocalId': value.experienceLocalId,
    'duplicate': value.duplicate,
    'outlier': value.outlier
  };
}

function PageLoadResponseFromJSON(json) {
  return PageLoadResponseFromJSONTyped(json);
}

function PageLoadResponseFromJSONTyped(json, ignoreDiscriminator) {
  if (json === undefined || json === null) {
    return json;
  }

  return {
    'options': !exists(json, 'options') ? undefined : json['options'].map(OptionFromJSON),
    'metrics': !exists(json, 'metrics') ? undefined : json['metrics'].map(MetricFromJSON),
    'analytics': !exists(json, 'analytics') ? undefined : AnalyticsResponseFromJSON(json['analytics']),
    'state': !exists(json, 'state') ? undefined : json['state'],
    'trace': !exists(json, 'trace') ? undefined : json['trace']
  };
}

function PrefetchMboxResponseFromJSON(json) {
  return PrefetchMboxResponseFromJSONTyped(json, false);
}

function PrefetchMboxResponseFromJSONTyped(json, ignoreDiscriminator) {
  if (json === undefined || json === null) {
    return json;
  }

  return _objectSpread2(_objectSpread2({}, MboxResponseFromJSONTyped(json, ignoreDiscriminator)), {}, {
    'state': !exists(json, 'state') ? undefined : json['state']
  });
}

function PrefetchRequestFromJSON(json) {
  return PrefetchRequestFromJSONTyped(json);
}

function PrefetchRequestFromJSONTyped(json, ignoreDiscriminator) {
  if (json === undefined || json === null) {
    return json;
  }

  return {
    'views': !exists(json, 'views') ? undefined : json['views'].map(ViewRequestFromJSON),
    'pageLoad': !exists(json, 'pageLoad') ? undefined : RequestDetailsFromJSON(json['pageLoad']),
    'mboxes': !exists(json, 'mboxes') ? undefined : json['mboxes'].map(MboxRequestFromJSON)
  };
}

function PrefetchRequestToJSON(value) {
  if (value === undefined) {
    return undefined;
  }

  if (value === null) {
    return null;
  }

  return {
    'views': value.views === undefined ? undefined : value.views.map(ViewRequestToJSON),
    'pageLoad': RequestDetailsToJSON(value.pageLoad),
    'mboxes': value.mboxes === undefined ? undefined : value.mboxes.map(MboxRequestToJSON)
  };
}

function PrefetchResponseFromJSON(json) {
  return PrefetchResponseFromJSONTyped(json);
}

function PrefetchResponseFromJSONTyped(json, ignoreDiscriminator) {
  if (json === undefined || json === null) {
    return json;
  }

  return {
    'views': !exists(json, 'views') ? undefined : json['views'].map(ViewFromJSON),
    'pageLoad': !exists(json, 'pageLoad') ? undefined : PageLoadResponseFromJSON(json['pageLoad']),
    'mboxes': !exists(json, 'mboxes') ? undefined : json['mboxes'].map(PrefetchMboxResponseFromJSON),
    'metrics': !exists(json, 'metrics') ? undefined : json['metrics'].map(MetricFromJSON)
  };
}

function PreviewFromJSON(json) {
  return PreviewFromJSONTyped(json);
}

function PreviewFromJSONTyped(json, ignoreDiscriminator) {
  if (json === undefined || json === null) {
    return json;
  }

  return {
    'token': !exists(json, 'token') ? undefined : json['token']
  };
}

function PreviewToJSON(value) {
  if (value === undefined) {
    return undefined;
  }

  if (value === null) {
    return null;
  }

  return {
    'token': value.token
  };
}

function ProductFromJSON(json) {
  return ProductFromJSONTyped(json);
}

function ProductFromJSONTyped(json, ignoreDiscriminator) {
  if (json === undefined || json === null) {
    return json;
  }

  return {
    'id': !exists(json, 'id') ? undefined : json['id'],
    'categoryId': !exists(json, 'categoryId') ? undefined : json['categoryId']
  };
}

function ProductToJSON(value) {
  if (value === undefined) {
    return undefined;
  }

  if (value === null) {
    return null;
  }

  return {
    'id': value.id,
    'categoryId': value.categoryId
  };
}

function PropertyFromJSON(json) {
  return PropertyFromJSONTyped(json);
}

function PropertyFromJSONTyped(json, ignoreDiscriminator) {
  if (json === undefined || json === null) {
    return json;
  }

  return {
    'token': json['token']
  };
}

function PropertyToJSON(value) {
  if (value === undefined) {
    return undefined;
  }

  if (value === null) {
    return null;
  }

  return {
    'token': value.token
  };
}

function QAModeFromJSON(json) {
  return QAModeFromJSONTyped(json);
}

function QAModeFromJSONTyped(json, ignoreDiscriminator) {
  if (json === undefined || json === null) {
    return json;
  }

  return {
    'token': !exists(json, 'token') ? undefined : json['token'],
    'listedActivitiesOnly': !exists(json, 'listedActivitiesOnly') ? undefined : json['listedActivitiesOnly'],
    'evaluateAsTrueAudienceIds': !exists(json, 'evaluateAsTrueAudienceIds') ? undefined : json['evaluateAsTrueAudienceIds'],
    'evaluateAsFalseAudienceIds': !exists(json, 'evaluateAsFalseAudienceIds') ? undefined : json['evaluateAsFalseAudienceIds'],
    'previewIndexes': !exists(json, 'previewIndexes') ? undefined : json['previewIndexes'].map(QAModePreviewIndexFromJSON)
  };
}

function QAModeToJSON(value) {
  if (value === undefined) {
    return undefined;
  }

  if (value === null) {
    return null;
  }

  return {
    'token': value.token,
    'listedActivitiesOnly': value.listedActivitiesOnly,
    'evaluateAsTrueAudienceIds': value.evaluateAsTrueAudienceIds,
    'evaluateAsFalseAudienceIds': value.evaluateAsFalseAudienceIds,
    'previewIndexes': value.previewIndexes === undefined ? undefined : value.previewIndexes.map(QAModePreviewIndexToJSON)
  };
}

function QAModePreviewIndexFromJSON(json) {
  return QAModePreviewIndexFromJSONTyped(json);
}

function QAModePreviewIndexFromJSONTyped(json, ignoreDiscriminator) {
  if (json === undefined || json === null) {
    return json;
  }

  return {
    'activityIndex': !exists(json, 'activityIndex') ? undefined : json['activityIndex'],
    'experienceIndex': !exists(json, 'experienceIndex') ? undefined : json['experienceIndex']
  };
}

function QAModePreviewIndexToJSON(value) {
  if (value === undefined) {
    return undefined;
  }

  if (value === null) {
    return null;
  }

  return {
    'activityIndex': value.activityIndex,
    'experienceIndex': value.experienceIndex
  };
}

function RequestDetailsFromJSON(json) {
  return RequestDetailsFromJSONTyped(json, false);
}

function RequestDetailsFromJSONTyped(json, ignoreDiscriminator) {
  if (json === undefined || json === null) {
    return json;
  }

  if (!ignoreDiscriminator) {
    if (json['$type'] === 'Notification') {
      return NotificationFromJSONTyped(json, true);
    }

    if (json['$type'] === 'MboxRequest') {
      return MboxRequestFromJSONTyped(json, true);
    }

    if (json['$type'] === 'ViewRequest') {
      return ViewRequestFromJSONTyped(json, true);
    }
  }

  return {
    '$type': !exists(json, '$_type') ? undefined : json['$_type'],
    'address': !exists(json, 'address') ? undefined : AddressFromJSON(json['address']),
    'parameters': !exists(json, 'parameters') ? undefined : json['parameters'],
    'profileParameters': !exists(json, 'profileParameters') ? undefined : json['profileParameters'],
    'order': !exists(json, 'order') ? undefined : OrderFromJSON(json['order']),
    'product': !exists(json, 'product') ? undefined : ProductFromJSON(json['product'])
  };
}

function RequestDetailsToJSON(value) {
  if (value === undefined) {
    return undefined;
  }

  if (value === null) {
    return null;
  }

  return {
    '$_type': value.$type,
    'address': AddressToJSON(value.address),
    'parameters': value.parameters,
    'profileParameters': value.profileParameters,
    'order': OrderToJSON(value.order),
    'product': ProductToJSON(value.product)
  };
}

function ScreenFromJSON(json) {
  return ScreenFromJSONTyped(json);
}

function ScreenFromJSONTyped(json, ignoreDiscriminator) {
  if (json === undefined || json === null) {
    return json;
  }

  return {
    'width': !exists(json, 'width') ? undefined : json['width'],
    'height': !exists(json, 'height') ? undefined : json['height'],
    'colorDepth': !exists(json, 'colorDepth') ? undefined : json['colorDepth'],
    'pixelRatio': !exists(json, 'pixelRatio') ? undefined : json['pixelRatio'],
    'orientation': !exists(json, 'orientation') ? undefined : ScreenOrientationTypeFromJSON(json['orientation'])
  };
}

function ScreenToJSON(value) {
  if (value === undefined) {
    return undefined;
  }

  if (value === null) {
    return null;
  }

  return {
    'width': value.width,
    'height': value.height,
    'colorDepth': value.colorDepth,
    'pixelRatio': value.pixelRatio,
    'orientation': ScreenOrientationTypeToJSON(value.orientation)
  };
}

var ScreenOrientationType;

(function (ScreenOrientationType) {
  ScreenOrientationType["Portrait"] = "portrait";
  ScreenOrientationType["Landscape"] = "landscape";
})(ScreenOrientationType || (ScreenOrientationType = {}));

function ScreenOrientationTypeFromJSON(json) {
  return ScreenOrientationTypeFromJSONTyped(json);
}

function ScreenOrientationTypeFromJSONTyped(json, ignoreDiscriminator) {
  return json;
}

function ScreenOrientationTypeToJSON(value) {
  return value;
}

function TelemetryFromJSON(json) {
  return TelemetryFromJSONTyped(json);
}

function TelemetryFromJSONTyped(json, ignoreDiscriminator) {
  if (json === undefined || json === null) {
    return json;
  }

  return {
    'entries': !exists(json, 'entries') ? undefined : json['entries'].map(TelemetryEntryFromJSON)
  };
}

function TelemetryToJSON(value) {
  if (value === undefined) {
    return undefined;
  }

  if (value === null) {
    return null;
  }

  return {
    'entries': value.entries === undefined ? undefined : value.entries.map(TelemetryEntryToJSON)
  };
}

function TelemetryEntryFromJSON(json) {
  return TelemetryEntryFromJSONTyped(json);
}

function TelemetryEntryFromJSONTyped(json, ignoreDiscriminator) {
  if (json === undefined || json === null) {
    return json;
  }

  return {
    'requestId': !exists(json, 'requestId') ? undefined : json['requestId'],
    'timestamp': !exists(json, 'timestamp') ? undefined : json['timestamp'],
    'mode': !exists(json, 'mode') ? undefined : ExecutionModeFromJSON(json['mode']),
    'execution': !exists(json, 'execution') ? undefined : json['execution'],
    'parsing': !exists(json, 'parsing') ? undefined : json['parsing'],
    'features': !exists(json, 'features') ? undefined : TelemetryFeaturesFromJSON(json['features']),
    'request': !exists(json, 'request') ? undefined : TelemetryRequestFromJSON(json['request']),
    'telemetryServerToken': !exists(json, 'telemetryServerToken') ? undefined : json['telemetryServerToken']
  };
}

function TelemetryEntryToJSON(value) {
  if (value === undefined) {
    return undefined;
  }

  if (value === null) {
    return null;
  }

  return {
    'requestId': value.requestId,
    'timestamp': value.timestamp,
    'mode': ExecutionModeToJSON(value.mode),
    'execution': value.execution,
    'parsing': value.parsing,
    'features': TelemetryFeaturesToJSON(value.features),
    'request': TelemetryRequestToJSON(value.request),
    'telemetryServerToken': value.telemetryServerToken
  };
}

function TelemetryFeaturesFromJSON(json) {
  return TelemetryFeaturesFromJSONTyped(json);
}

function TelemetryFeaturesFromJSONTyped(json, ignoreDiscriminator) {
  if (json === undefined || json === null) {
    return json;
  }

  return {
    'decisioningMethod': !exists(json, 'decisioningMethod') ? undefined : DecisioningMethodFromJSON(json['decisioningMethod']),
    'executeMboxCount': !exists(json, 'executeMboxCount') ? undefined : json['executeMboxCount'],
    'executePageLoad': !exists(json, 'executePageLoad') ? undefined : json['executePageLoad'],
    'prefetchMboxCount': !exists(json, 'prefetchMboxCount') ? undefined : json['prefetchMboxCount'],
    'prefetchPageLoad': !exists(json, 'prefetchPageLoad') ? undefined : json['prefetchPageLoad'],
    'prefetchViewCount': !exists(json, 'prefetchViewCount') ? undefined : json['prefetchViewCount']
  };
}

function TelemetryFeaturesToJSON(value) {
  if (value === undefined) {
    return undefined;
  }

  if (value === null) {
    return null;
  }

  return {
    'decisioningMethod': DecisioningMethodToJSON(value.decisioningMethod),
    'executeMboxCount': value.executeMboxCount,
    'executePageLoad': value.executePageLoad,
    'prefetchMboxCount': value.prefetchMboxCount,
    'prefetchPageLoad': value.prefetchPageLoad,
    'prefetchViewCount': value.prefetchViewCount
  };
}

function TelemetryRequestFromJSON(json) {
  return TelemetryRequestFromJSONTyped(json);
}

function TelemetryRequestFromJSONTyped(json, ignoreDiscriminator) {
  if (json === undefined || json === null) {
    return json;
  }

  return {
    'dns': !exists(json, 'dns') ? undefined : json['dns'],
    'tls': !exists(json, 'tls') ? undefined : json['tls'],
    'timeToFirstByte': !exists(json, 'timeToFirstByte') ? undefined : json['timeToFirstByte'],
    'download': !exists(json, 'download') ? undefined : json['download'],
    'responseSize': !exists(json, 'responseSize') ? undefined : json['responseSize']
  };
}

function TelemetryRequestToJSON(value) {
  if (value === undefined) {
    return undefined;
  }

  if (value === null) {
    return null;
  }

  return {
    'dns': value.dns,
    'tls': value.tls,
    'timeToFirstByte': value.timeToFirstByte,
    'download': value.download,
    'responseSize': value.responseSize
  };
}

function TraceFromJSON(json) {
  return TraceFromJSONTyped(json);
}

function TraceFromJSONTyped(json, ignoreDiscriminator) {
  if (json === undefined || json === null) {
    return json;
  }

  return {
    'authorizationToken': json['authorizationToken'],
    'usage': !exists(json, 'usage') ? undefined : json['usage']
  };
}

function TraceToJSON(value) {
  if (value === undefined) {
    return undefined;
  }

  if (value === null) {
    return null;
  }

  return {
    'authorizationToken': value.authorizationToken,
    'usage': value.usage
  };
}

function ViewFromJSON(json) {
  return ViewFromJSONTyped(json);
}

function ViewFromJSONTyped(json, ignoreDiscriminator) {
  if (json === undefined || json === null) {
    return json;
  }

  return {
    'name': !exists(json, 'name') ? undefined : json['name'],
    'key': !exists(json, 'key') ? undefined : json['key'],
    'options': !exists(json, 'options') ? undefined : json['options'].map(OptionFromJSON),
    'metrics': !exists(json, 'metrics') ? undefined : json['metrics'].map(MetricFromJSON),
    'analytics': !exists(json, 'analytics') ? undefined : AnalyticsResponseFromJSON(json['analytics']),
    'state': !exists(json, 'state') ? undefined : json['state'],
    'trace': !exists(json, 'trace') ? undefined : json['trace']
  };
}

function ViewRequestFromJSON(json) {
  return ViewRequestFromJSONTyped(json, false);
}

function ViewRequestFromJSONTyped(json, ignoreDiscriminator) {
  if (json === undefined || json === null) {
    return json;
  }

  return _objectSpread2(_objectSpread2({}, RequestDetailsFromJSONTyped(json, ignoreDiscriminator)), {}, {
    'name': !exists(json, 'name') ? undefined : json['name'],
    'key': !exists(json, 'key') ? undefined : json['key']
  });
}

function ViewRequestToJSON(value) {
  if (value === undefined) {
    return undefined;
  }

  if (value === null) {
    return null;
  }

  return _objectSpread2(_objectSpread2({}, RequestDetailsToJSON(value)), {}, {
    'name': value.name,
    'key': value.key
  });
}

function VisitorIdFromJSON(json) {
  return VisitorIdFromJSONTyped(json);
}

function VisitorIdFromJSONTyped(json, ignoreDiscriminator) {
  if (json === undefined || json === null) {
    return json;
  }

  return {
    'tntId': !exists(json, 'tntId') ? undefined : json['tntId'],
    'thirdPartyId': !exists(json, 'thirdPartyId') ? undefined : json['thirdPartyId'],
    'marketingCloudVisitorId': !exists(json, 'marketingCloudVisitorId') ? undefined : json['marketingCloudVisitorId'],
    'customerIds': !exists(json, 'customerIds') ? undefined : json['customerIds'].map(CustomerIdFromJSON)
  };
}

function VisitorIdToJSON(value) {
  if (value === undefined) {
    return undefined;
  }

  if (value === null) {
    return null;
  }

  return {
    'tntId': value.tntId,
    'thirdPartyId': value.thirdPartyId,
    'marketingCloudVisitorId': value.marketingCloudVisitorId,
    'customerIds': value.customerIds === undefined ? undefined : value.customerIds.map(CustomerIdToJSON)
  };
}

function WindowFromJSON(json) {
  return WindowFromJSONTyped(json);
}

function WindowFromJSONTyped(json, ignoreDiscriminator) {
  if (json === undefined || json === null) {
    return json;
  }

  return {
    'width': !exists(json, 'width') ? undefined : json['width'],
    'height': !exists(json, 'height') ? undefined : json['height']
  };
}

function WindowToJSON(value) {
  if (value === undefined) {
    return undefined;
  }

  if (value === null) {
    return null;
  }

  return {
    'width': value.width,
    'height': value.height
  };
}

function OneOfstringobjectarrayFromJSON(value) {
  return value;
}

class DeliveryApi extends BaseAPI {
  async executeRaw(requestParameters) {
    if (requestParameters.imsOrgId === null || requestParameters.imsOrgId === undefined) {
      throw new RequiredError('imsOrgId', 'Required parameter requestParameters.imsOrgId was null or undefined when calling execute.');
    }

    if (requestParameters.sessionId === null || requestParameters.sessionId === undefined) {
      throw new RequiredError('sessionId', 'Required parameter requestParameters.sessionId was null or undefined when calling execute.');
    }

    if (requestParameters.deliveryRequest === null || requestParameters.deliveryRequest === undefined) {
      throw new RequiredError('deliveryRequest', 'Required parameter requestParameters.deliveryRequest was null or undefined when calling execute.');
    }

    const queryParameters = {};

    if (requestParameters.imsOrgId !== undefined) {
      queryParameters['imsOrgId'] = requestParameters.imsOrgId;
    }

    if (requestParameters.sessionId !== undefined) {
      queryParameters['sessionId'] = requestParameters.sessionId;
    }

    if (requestParameters.version !== undefined) {
      queryParameters['version'] = requestParameters.version;
    }

    const headerParameters = {};
    headerParameters['Content-Type'] = 'application/json';
    const response = await this.request({
      path: `/rest/v1/delivery`,
      method: 'POST',
      headers: headerParameters,
      query: queryParameters,
      body: DeliveryRequestToJSON(requestParameters.deliveryRequest)
    });
    return new JSONApiResponse(response, jsonValue => DeliveryResponseFromJSON(jsonValue));
  }

  async execute(imsOrgId, sessionId, deliveryRequest, version) {
    const response = await this.executeRaw({
      imsOrgId: imsOrgId,
      sessionId: sessionId,
      deliveryRequest: deliveryRequest,
      version: version
    });
    return await response.value();
  }

}

var name = "@adobe/target-nodejs-sdk";
var version$3 = "2.4.2";
var description = "Adobe Target Node.js SDK, Delivery API client";
var main = "dist/targetclient.server.js";
var browser = "dist/targetclient.browser.js";
var module$1 = "src/index.js";
var engines = {
	node: ">=8.16.0"
};
var files = [
	"dist/*.js",
	"src/**/!(*.spec).js",
	"*.md",
	"LICENSE*"
];
var publishConfig = {
	access: "public"
};
var scripts = {
	clean: "rimraf dist",
	prebuild: "npm run clean && npm run format && npm run lint",
	build: "NODE_ENV=production rollup -c rollup.config.js",
	postbuild: "cp dist/targetclient.browser* demo/assets",
	www: "npm run build && node ./sample/server.js",
	pretest: "npm run format && npm run lint",
	test: "NODE_ENV=development jest",
	coverage: "nyc --reporter=lcov --reporter=text-summary npm run test",
	"lint-src": "./node_modules/.bin/eslint src/**",
	"lint-test": "./node_modules/.bin/eslint test/**",
	lint: "npm run lint-src && npm run lint-test",
	format: "prettier '**/*.js' '**/*.json' --write --config '../../.prettierrc.json' --ignore-path '../../.prettierignore'",
	prepack: "for file in `cat packfiles.txt`; do cp \"../../$file\" .; done",
	postpack: "for file in `cat packfiles.txt`; do rm \"$file\"; done",
	prepublishOnly: "echo //${NPM_REGISTRY}/:_authToken=${NPM_AUTH_TOKEN} > .npmrc"
};
var repository = {
	type: "git",
	url: "git@github.com:adobe/target-nodejs-sdk.git"
};
var keywords = [
	"NodeJS",
	"Server",
	"API",
	"Adobe",
	"Target",
	"MCID",
	"Visitor",
	"Delivery"
];
var author = "Adobe Systems Inc.";
var license = "Apache-2.0";
var devDependencies = {
	"@adobe/target-decisioning-engine": "^1.9.2",
	"@adobe/target-tools": "^1.7.2",
	"@babel/plugin-transform-regenerator": "^7.8.3",
	"@babel/preset-env": "^7.9.5",
	"@lwc/eslint-plugin-lwc": "^0.10.0",
	"@rollup/plugin-commonjs": "^11.0.1",
	"@rollup/plugin-json": "^4.0.1",
	"@rollup/plugin-node-resolve": "^7.0.0",
	ajv: "^5.5.2",
	"cookie-parser": "^1.4.4",
	"core-js": "^3.6.5",
	eslint: "^8.24.0",
	"eslint-config-airbnb-base": "^15.0.0",
	"eslint-config-prettier": "^8.5.0",
	"eslint-plugin-import": "^2.26.0",
	"eslint-plugin-jest": "^27.1.0",
	"eslint-plugin-prettier": "^4.2.1",
	express: "^4.17.1",
	jest: "^26.6.3",
	"jest-fetch-mock": "^3.0.3",
	mockdate: "^2.0.5",
	nyc: "^15.1.0",
	prettier: "^2.1.2",
	rimraf: "^3.0.2",
	rollup: "^1.17.0",
	"rollup-plugin-babel": "^4.3.3",
	"rollup-plugin-license": "^2.8.1",
	"rollup-plugin-visualizer": "^3.3.2"
};
var dependencies = {
	"@adobe-mcid/visitor-js-server": "^2.0.0",
	"fast-text-encoding": "^1.0.3",
	"form-data": "^3.0.0",
	"http-status-codes": "^1.4.0",
	"whatwg-fetch": "^3.0.0"
};
var packageInfo = {
	name: name,
	version: version$3,
	description: description,
	main: main,
	browser: browser,
	module: module$1,
	engines: engines,
	files: files,
	publishConfig: publishConfig,
	scripts: scripts,
	repository: repository,
	keywords: keywords,
	author: author,
	license: license,
	devDependencies: devDependencies,
	dependencies: dependencies
};

const SCHEME$1 = {
  HTTP: "http://",
  HTTPS: "https://"
};
const AUTH_STATE = {
  0: AuthenticatedState$1.Unknown,
  1: AuthenticatedState$1.Authenticated,
  2: AuthenticatedState$1.LoggedOut
};
const EDGE_CLUSTER_PREFIX = "mboxedge";
const HOST$1 = "tt.omtrdc.net";
const SESSION_ID_MAX_AGE = 1860;
const DEVICE_ID_MAX_AGE = 63244800;
const LOCATION_HINT_MAX_AGE = 1860;
const PACKAGE_VERSION = packageInfo.version;
DeliveryApi.prototype.decisioningMethod = DECISIONING_METHOD.SERVER_SIDE;
function extractClusterFromDeviceId(id) {
  if (isEmptyString(id)) {
    return null;
  }

  const parts = id.split(".");

  if (parts.length !== 2 || !parts[1]) {
    return null;
  }

  const nodeDetails = parts[1].split("_");

  if (nodeDetails.length !== 2 || !nodeDetails[0]) {
    return null;
  }

  return nodeDetails[0];
}
function getCluster(deviceId, cluster) {
  return extractClusterFromDeviceId(deviceId) || cluster;
}
function getDeviceId(cookies) {
  const cookie = cookies[DEVICE_ID_COOKIE] || {};
  const {
    value
  } = cookie;

  if (isEmptyString(value)) {
    return undefined;
  }

  return value;
}
function getSessionId(cookies, userSessionId, uuidMethod = uuid) {
  const cookie = cookies[SESSION_ID_COOKIE] || {};
  const {
    value
  } = cookie;

  if (isNonEmptyString(value)) {
    return value;
  }

  if (userSessionId) {
    return userSessionId;
  }

  return uuidMethod();
}
function getTargetHost(serverDomain, cluster, client, secure) {
  const schemePrefix = secure === false ? SCHEME$1.HTTP : SCHEME$1.HTTPS;

  if (isNonEmptyString(cluster)) {
    return `${schemePrefix}${EDGE_CLUSTER_PREFIX}${cluster}.${HOST$1}`;
  }

  if (isNonEmptyString(serverDomain)) {
    return `${schemePrefix}${serverDomain}`;
  }

  return `${schemePrefix}${client}.${HOST$1}`;
}
function createHeaders(uuidMethod = uuid) {
  return {
    "Content-Type": "application/json",
    "X-EXC-SDK": "AdobeTargetNode",
    "X-EXC-SDK-Version": PACKAGE_VERSION,
    "X-Request-Id": uuidMethod()
  };
}

function getMarketingCloudVisitorId(visitor) {
  const visitorValues = visitor.getVisitorValues();
  const {
    MCMID
  } = visitorValues;
  return MCMID;
}

function getVisitorCustomerIds(visitor) {
  const visitorState = visitor.getState();
  const firstOrganizationState = visitorState[Object.keys(visitorState)[0]];
  return firstOrganizationState.customerIDs;
}

function getCustomerIds(customerIds, visitor) {
  const visitorCustomerIds = getVisitorCustomerIds(visitor);

  if (isEmptyObject(visitorCustomerIds)) {
    return customerIds;
  }

  const convertedIds = Object.keys(visitorCustomerIds).reduce((acc, key) => {
    const value = visitorCustomerIds[key];

    if (value) {
      let item;

      if (isObject$4(value)) {
        item = CustomerIdFromJSON({
          id: value.id || undefined,
          integrationCode: key || undefined,
          authenticatedState: AUTH_STATE[value.authState] || undefined
        });
      } else {
        item = CustomerIdFromJSON({
          id: value,
          integrationCode: key || undefined,
          authenticatedState: AUTH_STATE["0"]
        });
      }

      acc.push(item);
    }

    return acc;
  }, []);

  if (!convertedIds.length) {
    return customerIds;
  }

  return convertedIds.concat(customerIds || []);
}

function createVisitorId(id = {}, options) {
  const {
    deviceId,
    visitor
  } = options;
  const {
    tntId = deviceId,
    thirdPartyId,
    marketingCloudVisitorId = getMarketingCloudVisitorId(visitor),
    customerIds
  } = id;
  const mergedCustomerIds = getCustomerIds(customerIds, visitor);
  const result = VisitorIdFromJSON({
    tntId: isNonEmptyString(tntId) ? tntId : undefined,
    thirdPartyId: isNonEmptyString(thirdPartyId) ? thirdPartyId : undefined,
    marketingCloudVisitorId: isNonEmptyString(marketingCloudVisitorId) ? marketingCloudVisitorId : undefined,
    customerIds: isNonEmptyArray(mergedCustomerIds) ? mergedCustomerIds : undefined
  });
  return isNonEmptyObject(result) ? result : undefined;
}

function createContext(context = {}) {
  const result = ContextFromJSON(_objectSpread2({
    timeOffsetInMinutes: getTimezoneOffset()
  }, context));

  if (Object.keys(ChannelType$1).includes(result.channel)) {
    return context;
  }

  result.channel = ChannelType$1.Web;
  return result;
}

function isCurrentSupplementalDataID(supplementalDataId, visitor) {
  const visitorState = visitor.getState();
  const firstOrganizationState = visitorState[Object.keys(visitorState)[0]];
  return isNonEmptyObject(firstOrganizationState.sdid) && firstOrganizationState.sdid.supplementalDataIDCurrent === supplementalDataId;
}

function createSupplementalDataId(analytics, options) {
  const {
    visitor,
    consumerId = DEFAULT_GLOBAL_MBOX
  } = options;
  const {
    supplementalDataId
  } = analytics;

  if (isCurrentSupplementalDataID(supplementalDataId, visitor)) {
    return supplementalDataId;
  }

  return visitor.getSupplementalDataID(consumerId);
}

function createAnalytics(analytics = {}, options) {
  return AnalyticsRequestFromJSON({
    logging: isNonEmptyString(analytics.logging) ? analytics.logging : LoggingType.ServerSide,
    supplementalDataId: createSupplementalDataId(analytics, options),
    trackingServer: isNonEmptyString(analytics.trackingServer) ? analytics.trackingServer : undefined,
    trackingServerSecure: isNonEmptyString(analytics.trackingServerSecure) ? analytics.trackingServerSecure : undefined
  });
}

function getLocationHint(locationHintString) {
  const hintNumber = parseInt(locationHintString, 10);
  return !isNaN(hintNumber) ? hintNumber : undefined; // eslint-disable-line no-restricted-globals
}

function createAudienceManager(audienceManager = {}, options) {
  const {
    visitor
  } = options;
  const visitorValues = visitor.getVisitorValues() || {};
  const {
    locationHint = getLocationHint(visitorValues.MCAAMLH),
    blob = visitorValues.MCAAMB
  } = audienceManager;
  const result = AudienceManagerFromJSON({
    locationHint,
    blob
  });
  return isNonEmptyObject(result) ? result : undefined;
}

function createExperienceCloud(experienceCloud = {}, options) {
  const {
    analytics,
    audienceManager
  } = experienceCloud;
  const createdAudienceManager = createAudienceManager(audienceManager, options);
  return ExperienceCloudFromJSON({
    analytics: createAnalytics(analytics, options),
    audienceManager: createdAudienceManager || undefined
  });
}

const validMbox = (mbox, logger) => {
  const result = isNonEmptyObject(mbox) && isNonEmptyString(mbox.name);

  if (!result) {
    logger.error(Messages$1.MBOX_INVALID, mbox);
  }

  return result;
};

function createMboxes(mboxes, logger) {
  if (isEmptyArray(mboxes)) {
    return undefined;
  }

  const resultMboxes = mboxes.filter(mbox => validMbox(mbox, logger)).map((mbox, index) => {
    const result = MboxRequestFromJSON(mbox);
    result.name = mbox.name;

    if (isNumber(mbox.index)) {
      result.index = mbox.index;
    } else {
      result.index = index;
    }

    return result;
  });
  return isNonEmptyArray(resultMboxes) ? resultMboxes : undefined;
}

function createViews(views) {
  if (isEmptyArray(views)) {
    return undefined;
  }

  const resultViews = views.map(view => {
    const result = ViewRequestFromJSON(view);

    if (isNonEmptyString(view.name)) {
      result.name = view.name;
    }

    if (isNonEmptyString(view.key)) {
      result.key = view.key;
    }

    return result;
  });
  return isNonEmptyArray(resultViews) ? resultViews : undefined;
}

function createExecute(execute, logger) {
  if (isEmptyObject(execute)) {
    return undefined;
  }

  const {
    pageLoad,
    mboxes
  } = execute;

  if (!isObject$4(pageLoad) && isEmptyArray(mboxes)) {
    return undefined;
  }

  return new ExecuteRequestFromJSON({
    pageLoad: isObject$4(pageLoad) ? RequestDetailsFromJSON(pageLoad) : undefined,
    mboxes: isNonEmptyArray(mboxes) ? createMboxes(mboxes, logger) : undefined
  });
}

function createPrefetch(prefetch, logger) {
  if (isEmptyObject(prefetch)) {
    return undefined;
  }

  const {
    pageLoad,
    views,
    mboxes
  } = prefetch;

  if (!isObject$4(pageLoad) && isEmptyArray(views) && isEmptyArray(mboxes)) {
    return undefined;
  }

  return PrefetchRequestFromJSON({
    pageLoad: isObject$4(pageLoad) ? RequestDetailsFromJSON(pageLoad) : undefined,
    views: isNonEmptyArray(views) ? createViews(views) : undefined,
    mboxes: isNonEmptyArray(mboxes) ? createMboxes(mboxes, logger) : undefined
  });
}

const validNotification = (notification, logger) => {
  const result = isNonEmptyObject(notification) && isNonEmptyString(notification.id) && isNumber(notification.timestamp) && Object.values(MetricType$1).includes(notification.type);

  if (!result) {
    logger.error(Messages$1.NOTIFICATION_INVALID, notification);
  }

  return result;
};

function createNotifications(notifications, logger) {
  if (isEmptyArray(notifications)) {
    return undefined;
  }

  const resultNotifications = notifications.filter(notification => validNotification(notification, logger)).map(notification => {
    const {
      id,
      type,
      timestamp,
      impressionId,
      tokens,
      mbox,
      view
    } = notification;
    const result = NotificationFromJSON(notification);
    result.id = id;
    result.type = type;
    result.timestamp = timestamp;

    if (isNonEmptyString(impressionId)) {
      result.impressionId = impressionId;
    }

    if (isNonEmptyArray(tokens)) {
      result.tokens = tokens;
    }

    if (isNonEmptyObject(mbox)) {
      result.mbox = mbox;
    }

    if (isNonEmptyObject(view)) {
      result.view = view;
    }

    return result;
  });
  return isNonEmptyArray(resultNotifications) ? resultNotifications : undefined;
}

function createProperty$3(property = {}) {
  const {
    token
  } = property;

  if (isNonEmptyString(token)) {
    return PropertyFromJSON(property);
  }

  return undefined;
}
/**
 *
 * @param requestParam
 * @param options
 * @return { import("@adobe/target-tools/delivery-api-client/models/DeliveryRequest").DeliveryRequest }
 */


function createDeliveryRequest(requestParam, options) {
  const {
    logger,
    uuidMethod = uuid
  } = options;
  const result = DeliveryRequestFromJSON(_objectSpread2({
    requestId: uuidMethod(),
    environmentId: options.environmentId
  }, requestParam));
  result.id = createVisitorId(result.id, options);
  result.property = createProperty$3(result.property);
  result.trace = TraceFromJSON(result.trace);
  result.context = createContext(result.context);
  result.experienceCloud = createExperienceCloud(result.experienceCloud, options);
  result.execute = createExecute(result.execute, logger);
  result.prefetch = createPrefetch(result.prefetch, logger);
  result.notifications = createNotifications(result.notifications, logger);
  removeEmptyKeys(result);
  return result;
}
/**
 *
 * @param fetchApi
 * @param host
 * @param headers
 * @param timeout
 * @return { import("@adobe/target-tools/delivery-api-client/runtime").Configuration }
 */

function createConfiguration(fetchApi, host, headers, timeout) {
  return new Configuration({
    basePath: host,
    fetchApi,
    headers,
    timeout
  });
}

function createLocalDeliveryApi(decisioningEngine, visitor, targetLocationHint) {
  const localDeliveryApi = {
    // eslint-disable-next-line no-unused-vars
    execute: (organizationId, sessionId, deliveryRequest, atjsVersion) => {
      if (isUndefined(decisioningEngine)) {
        return Promise.reject(new Error(DECISIONING_ENGINE_NOT_READY));
      }

      return decisioningEngine.getOffers({
        targetLocationHint,
        request: deliveryRequest,
        sessionId,
        visitor
      });
    },
    decisioningMethod: DECISIONING_METHOD.ON_DEVICE
  };

  localDeliveryApi.withPostMiddleware = () => localDeliveryApi;

  return localDeliveryApi;
}

function createBeaconDeliveryApi(configuration) {
  return {
    execute: (organizationId, sessionId, deliveryRequest, atjsVersion) => {
      const query = {
        imsOrgId: organizationId,
        sessionId
      };

      if (isDefined(configuration.version)) {
        query.version = atjsVersion;
      }

      const queryString = configuration.queryParamsStringify(query);
      const success = executeSendBeacon(`${configuration.basePath}/rest/v1/delivery?${queryString}`, JSON.stringify(_objectSpread2(_objectSpread2({}, deliveryRequest), {}, {
        context: _objectSpread2(_objectSpread2({}, deliveryRequest.context), {}, {
          beacon: true
        })
      })));
      return success ? Promise.resolve() : Promise.reject();
    },
    decisioningMethod: DECISIONING_METHOD.SERVER_SIDE
  };
}

function createRemoteDeliveryApi(configuration, useBeacon) {
  return useBeacon && isBeaconSupported() ? createBeaconDeliveryApi(configuration) : new DeliveryApi(configuration);
}
/**
 * @param {import("@adobe/target-tools/delivery-api-client/runtime").Configuration} configuration
 * @param visitor VisitorId instance
 * @param { Boolean } useBeacon
 * @param decisioningMethod
 * @param { String } targetLocationHint
 * @param {import("@adobe/target-tools/delivery-api-client/models/DeliveryRequest").DeliveryRequest} deliveryRequest
 * @param decisioningEngine
 * */


function createDeliveryApi(configuration, visitor, useBeacon = false, decisioningMethod = DECISIONING_METHOD.SERVER_SIDE, targetLocationHint = undefined, deliveryRequest = undefined, decisioningEngine = undefined) {
  if (requiresDecisioningEngine(decisioningMethod)) {
    const decisioningDependency = decisioningEngine.hasRemoteDependency(deliveryRequest);

    if (decisioningMethod === DECISIONING_METHOD.HYBRID && decisioningDependency.remoteNeeded) {
      return createRemoteDeliveryApi(configuration, useBeacon);
    }

    return createLocalDeliveryApi(decisioningEngine, visitor, targetLocationHint);
  }

  return createRemoteDeliveryApi(configuration, useBeacon);
}

function getTargetCookie(sessionId, id) {
  const nowInSeconds = Math.ceil(Date.now() / 1000);
  const cookies = [];
  const {
    tntId
  } = id;
  cookies.push({
    name: SESSION_ID_COOKIE,
    value: sessionId,
    expires: nowInSeconds + SESSION_ID_MAX_AGE
  });

  if (tntId) {
    cookies.push({
      name: DEVICE_ID_COOKIE,
      value: tntId,
      expires: nowInSeconds + DEVICE_ID_MAX_AGE
    });
  }

  return createTargetCookie(cookies);
}

function extractClusterFromEdgeHost(host) {
  if (isEmptyString(host)) {
    return null;
  }

  const parts = host.split(".");

  if (parts.length !== 4 || !parts[0]) {
    return null;
  }

  return parts[0].replace(EDGE_CLUSTER_PREFIX, "");
}

function getTargetLocationHintCookie(requestCluster, edgeHost) {
  const hostCluster = extractClusterFromEdgeHost(edgeHost);
  const cluster = requestCluster || hostCluster;

  if (isEmptyString(cluster)) {
    return undefined;
  }

  return {
    name: LOCATION_HINT_COOKIE,
    value: cluster,
    maxAge: LOCATION_HINT_MAX_AGE
  };
}
function requestLocationHintCookie(targetClient, targetLocationHint) {
  return isDefined(targetLocationHint) ? Promise.resolve({
    targetLocationHintCookie: getTargetLocationHintCookie(targetLocationHint)
  }) : targetClient.getOffers({
    sessionId: "ping123",
    decisioningMethod: DECISIONING_METHOD.SERVER_SIDE,
    request: EMPTY_REQUEST
  }).catch(() => new Error(Messages$1.LOCATION_HINT_REQUEST_FAILED));
}
function preserveLocationHint(response) {
  if (isDefined(response.targetLocationHintCookie)) {
    this.config.targetLocationHint = response.targetLocationHintCookie.value;
  }

  return response;
}

function getAnalyticsFromObject(object = {}) {
  const {
    analytics
  } = object;
  return isNonEmptyObject(analytics) ? [analytics] : undefined;
}

function getAnalyticsFromArray(array = []) {
  return flatten$1(array.map(getAnalyticsFromObject));
}

function getAnalyticsDetails(response) {
  const {
    execute = {},
    prefetch = {}
  } = response;

  if (isEmptyObject(execute) && isEmptyObject(prefetch)) {
    return undefined;
  }

  const executePageLoadAnalytics = getAnalyticsFromObject(execute.pageLoad);
  const executeMboxAnalytics = getAnalyticsFromArray(execute.mboxes);
  const prefetchPageLoadAnalytics = getAnalyticsFromObject(prefetch.pageLoad);
  const prefetchViewsAnalytics = getAnalyticsFromArray(prefetch.views);
  const prefetchMboxAnalytics = getAnalyticsFromArray(prefetch.mboxes);
  const result = flatten$1([executePageLoadAnalytics, executeMboxAnalytics, prefetchPageLoadAnalytics, prefetchViewsAnalytics, prefetchMboxAnalytics].filter(value => !!value));
  return isNonEmptyArray(result) ? result : undefined;
}
/**
 * @param {import("@adobe/target-tools/delivery-api-client/models/DeliveryRequest").DeliveryRequest} request Target Delivery API request, required
 * @param {import("@adobe/target-tools/delivery-api-client/models/DeliveryResponse").DeliveryResponse} response Target Delivery API response, required
 * @param decisioningMethod
 * @param decisioningEngine
 * */


function getResponseMeta(request, response, decisioningMethod, decisioningEngine) {
  let {
    remoteMboxes = [],
    remoteViews = []
  } = response;
  delete response.remoteMboxes;
  delete response.remoteViews;

  if (decisioningEngine) {
    const decisioningDependency = decisioningEngine.hasRemoteDependency(request); // eslint-disable-next-line prefer-destructuring

    remoteMboxes = decisioningDependency.remoteMboxes; // eslint-disable-next-line prefer-destructuring

    remoteViews = decisioningDependency.remoteViews;
  }

  return {
    decisioningMethod,
    remoteMboxes,
    remoteViews
  };
}

function getTraceFromObject(object = {}) {
  const {
    trace
  } = object;
  return isNonEmptyObject(trace) ? [trace] : undefined;
}

function getTraceFromArray(array = []) {
  return flatten$1(array.map(getTraceFromObject));
}

function getTraceDetails(response) {
  const {
    execute = {},
    prefetch = {}
  } = response;

  if (isEmptyObject(execute) && isEmptyObject(prefetch)) {
    return undefined;
  }

  const executePageLoadTrace = getTraceFromObject(execute.pageLoad);
  const executeMboxTrace = getTraceFromArray(execute.mboxes);
  const prefetchPageLoadTrace = getTraceFromObject(prefetch.pageLoad);
  const prefetchViewsTrace = getTraceFromArray(prefetch.views);
  const prefetchMboxTrace = getTraceFromArray(prefetch.mboxes);
  const result = flatten$1([executePageLoadTrace, executeMboxTrace, prefetchPageLoadTrace, prefetchViewsTrace, prefetchMboxTrace].filter(value => !!value));
  return isNonEmptyArray(result) ? result : undefined;
}

function getResponseTokensFromObject(object = {}) {
  const {
    options
  } = object;

  if (isEmptyArray(options)) {
    return [];
  }

  return options.map(option => option.responseTokens).filter(isNonEmptyObject);
}

function getResponseTokensFromArray(array = []) {
  return flatten$1(array.map(getResponseTokensFromObject));
}

function getResponseTokens(response) {
  const {
    execute = {},
    prefetch = {}
  } = response;

  if (isEmptyObject(execute) && isEmptyObject(prefetch)) {
    return undefined;
  }

  const executePageLoadTokens = getResponseTokensFromObject(execute.pageLoad);
  const executeMboxTokens = getResponseTokensFromArray(execute.mboxes);
  const prefetchPageLoadTokens = getResponseTokensFromObject(prefetch.pageLoad);
  const prefetchViewsTokens = getResponseTokensFromArray(prefetch.views);
  const prefetchMboxTokens = getResponseTokensFromArray(prefetch.mboxes);
  const result = flatten$1([executePageLoadTokens, executeMboxTokens, prefetchPageLoadTokens, prefetchViewsTokens, prefetchMboxTokens]);
  return isNonEmptyArray(result) ? result : undefined;
}
/**
 * processResponse method
 * @param { string } sessionId
 * @param { string } cluster
 * @param {import("@adobe/target-tools/delivery-api-client/models/DeliveryRequest").DeliveryRequest} request Target Delivery API request
 * @param {import("@adobe/target-tools/delivery-api-client/models/DeliveryResponse").DeliveryResponse} response Target Delivery API response
 * @param {('on-device'|'server-side'|'hybrid')} decisioningMethod
 * @param { Object } decisioningEngine
 */


function processResponse(sessionId, cluster, request, response, decisioningMethod = DECISIONING_METHOD.SERVER_SIDE, decisioningEngine = undefined) {
  const {
    id = {},
    edgeHost
  } = response;
  const result = {
    targetCookie: getTargetCookie(sessionId, id),
    targetLocationHintCookie: getTargetLocationHintCookie(cluster, edgeHost),
    analyticsDetails: getAnalyticsDetails(response),
    trace: getTraceDetails(response),
    responseTokens: getResponseTokens(response),
    meta: getResponseMeta(request, response, decisioningMethod, decisioningEngine),
    response
  };
  removeEmptyKeys(result);
  return result;
}

function executeDelivery(options, telemetryProvider, decisioningEngine) {
  const {
    visitor,
    config,
    logger,
    targetCookie,
    consumerId,
    request,
    useBeacon,
    createDeliveryApiMethod = createDeliveryApi
  } = options;
  const property = getProperty(config, request, logger);

  if (isDefined(property)) {
    request.property = property;
  }

  const {
    serverDomain,
    client,
    organizationId,
    timeout,
    secure,
    environmentId
  } = config;
  let {
    decisioningMethod
  } = config;
  const fetchWithRetry = getFetchWithRetry(config.fetchApi);
  const targetLocationHint = options.targetLocationHint || config.targetLocationHint;

  if (requiresDecisioningEngine(decisioningMethod) && !decisioningEngineReady(decisioningEngine)) {
    // fulfill the request remotely if hybrid execution mode and decisioning engine is unavailable
    if (decisioningMethod === DECISIONING_METHOD.HYBRID) {
      decisioningMethod = DECISIONING_METHOD.SERVER_SIDE;
    } else {
      return Promise.reject(new Error(DECISIONING_ENGINE_NOT_READY));
    }
  }

  const cookies = parseCookies(targetCookie);
  const deviceId = getDeviceId(cookies);
  const cluster = getCluster(deviceId, targetLocationHint);
  const host = getTargetHost(serverDomain, cluster, client, secure);
  const sessionId = getSessionId(cookies, options.sessionId);
  const headers = createHeaders();
  const requestOptions = {
    logger,
    visitor,
    deviceId,
    consumerId,
    environmentId,
    organizationId
  };
  let deliveryRequest = createDeliveryRequest(request, requestOptions);
  const configuration = createConfiguration(fetchWithRetry, host, headers, timeout);
  const deliveryMethod = createDeliveryApiMethod(configuration, visitor, useBeacon, decisioningMethod, targetLocationHint, deliveryRequest, decisioningEngine);

  if (deliveryMethod.decisioningMethod === DECISIONING_METHOD.SERVER_SIDE) {
    deliveryRequest = telemetryProvider.addTelemetryToDeliveryRequest(deliveryRequest);
  }

  logger.debug(Messages$1.REQUEST_SENT, deliveryMethod.decisioningMethod, host, JSON.stringify(deliveryRequest, null, 2));
  perfTool.timeStart(deliveryRequest.requestId);
  let timings;

  function collectRequestTimings(httpResponse) {
    const {
      response
    } = httpResponse;
    timings = response.timings;
  }

  return deliveryMethod.withPostMiddleware(collectRequestTimings).execute(organizationId, sessionId, deliveryRequest, config.version).then((response = {}) => {
    const executionTime = perfTool.timeEnd(deliveryRequest.requestId);
    perfTool.clearTiming(deliveryRequest.requestId);
    logger.debug(Messages$1.RESPONSE_RECEIVED, JSON.stringify(response, null, 2));
    const entry = {
      execution: executionTime
    };

    if (timings) {
      entry.parsing = timings.parsingTime;
      delete timings.parsingTime;
      entry.request = timings;
    }

    if (response.telemetryServerToken) {
      entry.telemetryServerToken = response.telemetryServerToken;
    }

    telemetryProvider.addDeliveryRequestEntry(deliveryRequest, entry, response, deliveryMethod.decisioningMethod);
    return Object.assign({
      visitorState: visitor.getState(),
      request: deliveryRequest
    }, processResponse(sessionId, cluster, deliveryRequest, response, deliveryMethod.decisioningMethod, decisioningEngine));
  });
}

/*
Copyright 2019 Adobe. All rights reserved.
This file is licensed to you under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License. You may obtain a copy
of the License at http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software distributed under
the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS
OF ANY KIND, either express or implied. See the License for the specific language
governing permissions and limitations under the License.
*/
function validateClientOptions(options) {
  if (isEmptyObject(options)) {
    return Messages$1.OPTIONS_REQUIRED;
  }

  const {
    client,
    organizationId,
    decisioningMethod
  } = options;

  if (isEmptyString(client)) {
    return Messages$1.CLIENT_REQUIRED;
  }

  if (isEmptyString(organizationId)) {
    return Messages$1.ORG_ID_REQUIRED;
  }

  if (isDefined(decisioningMethod) && !Object.values(DECISIONING_METHOD).includes(decisioningMethod)) {
    return Messages$1.DECISIONING_METHOD_INVALID;
  }

  return null;
}
function validateGetOffersOptions(options) {
  if (isEmptyObject(options)) {
    return Messages$1.OPTIONS_REQUIRED;
  }

  const {
    request
  } = options;

  if (isEmptyObject(request)) {
    return Messages$1.REQUEST_REQUIRED;
  }

  const {
    execute,
    prefetch
  } = request;

  if (isNonEmptyObject(execute) && isUndefined(execute.pageLoad) && isEmptyArray(execute.mboxes)) {
    return Messages$1.EXECUTE_FIELDS_REQUIRED;
  }

  if (isNonEmptyObject(prefetch) && isUndefined(prefetch.pageLoad) && isEmptyArray(prefetch.views) && isEmptyArray(prefetch.mboxes)) {
    return Messages$1.PREFETCH_FIELDS_REQUIRED;
  }

  return null;
}
function validateSendNotificationsOptions(options, hasTelemetries) {
  if (isEmptyObject(options)) {
    return Messages$1.OPTIONS_REQUIRED;
  }

  const {
    request
  } = options;

  if (isEmptyObject(request)) {
    return Messages$1.REQUEST_REQUIRED;
  }

  const {
    notifications
  } = request;

  if (isEmptyArray(notifications) && !hasTelemetries) {
    return NOTIFICATIONS_REQUIRED;
  }

  return null;
}

/* eslint-disable import/prefer-default-export */
const CLIENT_READY = "clientReady";

const AMCV_PREFIX = "AMCV_";
const DEFAULT_TIMEOUT$1 = 3000;
function bootstrap(fetchApi) {
  const fetchImpl = getFetchApi(fetchApi);

  if (!fetchImpl) {
    throw new Error(Messages$1.FETCH_UNDEFINED);
  }

  class TargetClient {
    constructor(options) {
      if (!options || !options.internal) {
        throw new Error(Messages$1.PRIVATE_CONSTRUCTOR);
      }

      this.config = options;
      this.config.timeout = options.timeout || DEFAULT_TIMEOUT$1;
      this.logger = getLogger(options.logger);
      this.telemetryProvider = TelemetryProvider(options.telemetryEnabled, options.decisioningMethod);
      const eventEmitter = EventProvider(this.config.events).emit;

      if (requiresDecisioningEngine(options.decisioningMethod)) {
        Promise.all([requestLocationHintCookie(this, this.config.targetLocationHint), TargetDecisioningEngine({
          client: options.client,
          organizationId: options.organizationId,
          pollingInterval: options.pollingInterval,
          maximumWaitReady: options.maximumWaitReady,
          artifactFormat: options.artifactFormat,
          artifactLocation: options.artifactLocation,
          artifactPayload: options.artifactPayload,
          propertyToken: options.propertyToken,
          environment: options.environment,
          cdnEnvironment: options.cdnEnvironment,
          cdnBasePath: options.cdnBasePath,
          logger: this.logger,
          telemetryEnabled: options.telemetryEnabled,
          fetchApi: fetchImpl,
          eventEmitter,
          sendNotificationFunc: notificationOptions => this.sendNotifications(notificationOptions),
          parseDomainImpl: parseDomainPsl
        }, this.telemetryProvider)]) // eslint-disable-next-line no-unused-vars
        .then(([locationHintResponse, decisioningEngine]) => {
          this.decisioningEngine = decisioningEngine;
          eventEmitter(CLIENT_READY);
        }).catch(err => {
          this.logger.error(err.message);
        });
      } else {
        setTimeout(() => eventEmitter(CLIENT_READY), 100);
      }
    }
    /**
     * The TargetClient creation factory method
     * @param {Object} options Options map, required
     * @param {Function }options.fetchApi Fetch Implementation, optional
     * @param {String} options.client Target Client Id, required
     * @param {String} options.organizationId Target Organization Id, required
     * @param {Number} options.timeout Target request timeout in ms, default: 3000
     * @param {String} options.serverDomain Server domain, optional
     * @param {String} options.targetLocationHint Target Location Hint, optional
     * @param {boolean} options.secure Unset to enforce HTTP scheme, default: true
     * @param {Object} options.logger Replaces the default noop logger, optional
     * @param {('on-device'|'server-side'|'hybrid')} options.decisioningMethod The decisioning method, defaults to remote, optional
     * @param {Number} options.pollingInterval (Local Decisioning) Polling interval in ms, default: 30000
     * @param {Number} options.maximumWaitReady (Local Decisioning) The maximum amount of time (in ms) to wait for clientReady.  Default is to wait indefinitely.
     * @param {String} options.artifactLocation (Local Decisioning) Fully qualified url to the location of the artifact, optional
     * @param {import("@adobe/target-decisioning-engine/types/DecisioningArtifact").DecisioningArtifact} options.artifactPayload (Local Decisioning) A pre-fetched artifact, optional
     * @param {Number} options.environmentId The Target environment ID, defaults to production, optional
     * @param {String} options.environment The Target environment name, defaults to production, optional
     * @param {String} options.cdnEnvironment The CDN environment name, defaults to production, optional
     * @param {boolean} options.telemetryEnabled If set to false, telemetry data will not be sent to Adobe
     * @param {String} options.version The version number of at.js, optional
     * @param {String} options.propertyToken A property token used to limit the scope of evaluated target activities, optional
     * @param {Object.<String, Function>} options.events An object with event name keys and callback function values, optional
     */


    static create(options) {
      const error = validateClientOptions(options);

      if (error) {
        throw new Error(error);
      }

      return new TargetClient(Object.assign({
        internal: true,
        decisioningMethod: DECISIONING_METHOD.SERVER_SIDE,
        fetchApi: fetchImpl
      }, options));
    }
    /**
     * The TargetClient getOffers method
     * @param {Object} options
     * @param {import("@adobe/target-tools/delivery-api-client/models/DeliveryRequest").DeliveryRequest} options.request Target View Delivery API request, required
     * @param {String} options.visitorCookie VisitorId cookie, optional
     * @param {String} options.targetCookie Target cookie, optional
     * @param {String} options.targetLocationHint Target Location Hint, optional
     * @param {String} options.consumerId When stitching multiple calls, different consumerIds should be provided, optional
     * @param {Array}  options.customerIds An array of Customer Ids in VisitorId-compatible format, optional
     * @param {String} options.sessionId Session Id, used for linking multiple requests, optional
     * @param {Object} options.visitor Supply an external VisitorId instance, optional
     * @param {('on-device'|'server-side'|'hybrid')} options.decisioningMethod The execution mode, defaults to remote, optional
     * @returns Promise<TargetDeliveryResponse>
     */


    getOffers(options) {
      const error = validateGetOffersOptions(options);

      if (error) {
        return Promise.reject(new Error(error));
      }

      const visitor = createVisitor(options, this.config);
      const targetOptions = Object.assign({
        visitor,
        config: _objectSpread2(_objectSpread2({}, this.config), {}, {
          decisioningMethod: options.decisioningMethod || this.config.decisioningMethod
        }),
        logger: this.logger
      }, options);
      return executeDelivery(targetOptions, this.telemetryProvider, this.decisioningEngine).then(preserveLocationHint.bind(this));
    }
    /**
     * The TargetClient getAttributes method
     * @param {Array<String>} mboxNames A list of mbox names that contains JSON content attributes, required
     * @param {Object} options, required
     * @param {import("@adobe/target-tools/delivery-api-client/models/DeliveryRequest").DeliveryRequest} options.request Target View Delivery API request, required
     * @param {String} options.visitorCookie VisitorId cookie, optional
     * @param {String} options.targetCookie Target cookie, optional
     * @param {String} options.targetLocationHint Target Location Hint, optional
     * @param {String} options.consumerId When stitching multiple calls, different consumerIds should be provided, optional
     * @param {Array}  options.customerIds An array of Customer Ids in VisitorId-compatible format, optional
     * @param {String} options.sessionId Session Id, used for linking multiple requests, optional
     * @param {Object} options.visitor Supply an external VisitorId instance, optional
     * @param {('on-device'|'server-side'|'hybrid')} options.decisioningMethod The execution mode, defaults to remote, optional
     */


    getAttributes(mboxNames, options = {}) {
      // eslint-disable-next-line no-param-reassign
      options.request = options.request || EMPTY_REQUEST;
      return this.getOffers(_objectSpread2(_objectSpread2({}, options), {}, {
        request: addMboxesToRequest(mboxNames, options.request, "execute")
      })).then(res => AttributesProvider(res));
    }
    /**
     * The TargetClient sendNotifications method
     * @param {Object} options
     * @param {import("@adobe/target-tools/delivery-api-client/models/DeliveryRequest").DeliveryRequest} options.request Target View Delivery API request, required
     * @param {String} options.visitorCookie VisitorId cookie, optional
     * @param {String} options.targetCookie Target cookie, optional
     * @param {String} options.targetLocationHint Target Location Hint, optional
     * @param {String} options.consumerId When stitching multiple calls, different consumerIds should be provided, optional
     * @param {Array}  options.customerIds An array of Customer Ids in VisitorId-compatible format, optional
     * @param {String} options.sessionId Session Id, used for linking multiple requests, optional
     * @param {Object} options.visitor Supply an external VisitorId instance, optional
     */


    sendNotifications(options) {
      const error = validateSendNotificationsOptions(options, this.telemetryProvider.hasEntries());

      if (error) {
        return Promise.reject(new Error(error));
      }

      const visitor = createVisitor(options, this.config);

      const targetOptions = _objectSpread2({
        visitor,
        config: _objectSpread2(_objectSpread2({}, this.config), {}, {
          decisioningMethod: DECISIONING_METHOD.SERVER_SIDE // execution mode for sending notifications must always be remote

        }),
        logger: this.logger,
        useBeacon: true
      }, options);

      return executeDelivery(targetOptions, this.telemetryProvider).then(preserveLocationHint.bind(this));
    }

    static getVisitorCookieName(orgId) {
      return AMCV_PREFIX + orgId;
    }

    static get TargetCookieName() {
      return TARGET_COOKIE;
    }

    static get TargetLocationHintCookieName() {
      return LOCATION_HINT_COOKIE;
    }

    static get AuthState() {
      return Visitor.AuthState;
    }

  }

  return TargetClient;
}

global.FormData = FormData$1;
global.URLSearchParams = url.URLSearchParams;
const TargetClient = bootstrap( // eslint-disable-next-line no-undef
isDefined(global.fetch) ? global.fetch : getFetchWithTelemetry());
var index_server = TargetClient.default || TargetClient;

module.exports = index_server;
